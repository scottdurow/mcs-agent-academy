{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Copilot Studio Agent Academy","text":"<p>Welcome to Copilot Studio Agent Academy. </p> <p>Your mission\u2014should you choose to accept it\u2014is to master the art of building agents using Microsoft Copilot Studio.</p> <p>This hands-on training is your entry point into the world of agents: from grounded prompts to Adaptive Cards and agent flows, you'll learn how to build, scale, and deploy intelligent agents using real-world tools and use cases.</p>"},{"location":"#rank-progression","title":"\ud83c\udfc5 Rank Progression","text":"<p>The Copilot Studio Agent Academy is a multi-phase training program designed to build your skills across three agent ranks. Each level includes a badge and increasing responsibilities:</p> Rank Level Visual \ud83d\udfe2 Recruit\ud83d\ude80 Get started \u2022 \ud83d\udd35 Operative(Coming Soon) \u2022\u2022 \ud83d\udfe1 Commander(Coming Soon) \u2022\u2022\u2022 <p>Each level builds on the last. Finish your Recruit mission, and stay tuned to level up your agent credentials.</p>"},{"location":"#other-courses","title":"\ud83c\udf92 Other Courses","text":"<p>Check out these other courses to continue learning about AI and Agents:</p> <ul> <li>Microsoft Copilot Studio &lt;3 MCP Lab</li> <li>Copilot Developer Camp</li> <li>AI Agents for Beginners</li> <li>Model Context Protocol (MCP) For Beginners</li> </ul>"},{"location":"#issues","title":"\ud83d\ude91 Issues","text":"<p>We really appreciate your feedback! Please use the issues list to share your comments and issues. Thanks!</p>"},{"location":"#code-of-conduct","title":"\ud83d\udcdc Code of Conduct","text":"<p>This project has adopted the Microsoft Open Source Code of Conduct.</p> <p>Resources:</p> <ul> <li>Microsoft Open Source Code of Conduct</li> <li>Microsoft Code of Conduct FAQ</li> <li>Contact opencode@microsoft.com with questions or concerns</li> </ul> <p>\u2b50\ufe0f Star our repo</p> <p></p>"},{"location":"commander/","title":"Commander (Coming soon)","text":"<p>This course is still very top secret. This will be unlocked in the future! \ud83d\udd13</p> <p></p> <p></p>"},{"location":"includes/disclaimer/","title":"Disclaimer","text":"<p>Warning</p> <p>This course is still in development. That means that the quality is not up to par yet or that it doesn't work as intended.</p>"},{"location":"operative/","title":"Operative (Coming soon)","text":"<p>This course is still very top secret. This will be unlocked in the future! \ud83d\udd13</p> <p></p> <p></p>"},{"location":"operative-preview/","title":"Operative overview","text":"<p>Warning</p> <p>This course is still in development. That means that the quality is not up to par yet or that it doesn't work as intended.</p> <ul> <li>1. Get started with the Hiring Agent</li> <li>2. Make your agent multi-agent ready with connected agents</li> <li>3. Automate your agent with Triggers</li> <li>4. Authoring Agent Instructions</li> <li>5. Personalizing Agent Responses</li> <li>6. Content Moderation and AI Safety Essentials</li> <li>7. Extracting Resume Contents with Multi-Modal Prompts</li> <li>8. Prompts - Dataverse Grounding</li> <li>9. Applying Deep Reasoning to Evaluate Candidate Fit and Interview Preparation</li> <li>10. Generate Candidate Specific Interview Docs with Prompts</li> <li>11. Obtain User Feedback with Adaptive Cards</li> <li>12. Publishing Your Agents to a Demo Website for Stakeholder Testing</li> </ul>"},{"location":"operative-preview/01-get-started/","title":"\ud83d\udea8 Mission 01: Get started with the Hiring Agent","text":"<p>Warning</p> <p>This course is still in development. That means that the quality is not up to par yet or that it doesn't work as intended.</p>"},{"location":"operative-preview/01-get-started/#codename-operation-talent-scout","title":"\ud83d\udd75\ufe0f\u200d\u2642\ufe0f CODENAME: OPERATION TALENT SCOUT","text":"<p>\u23f1\ufe0f Operation Time Window: <code>~45 minutes</code></p>"},{"location":"operative-preview/01-get-started/#mission-brief","title":"\ud83c\udfaf Mission Brief","text":"<p>In this mission, you'll get started with AI-powered recruitment by importing a pre-built solution that contains the foundational data structure for a hiring management system. You'll then create a basic Hiring Agent that serves as the starting point for the comprehensive hiring automation scenario you'll build throughout the Agent Academy Operative program. This initial agent will establish the foundation that you'll enhance with advanced capabilities in subsequent missions.</p>"},{"location":"operative-preview/01-get-started/#objectives","title":"\ud83d\udd0e Objectives","text":"<p>By completing this mission, you will:</p> <ul> <li>Scenario Understanding: Gain comprehensive knowledge of hiring automation challenges and solutions</li> <li>Solution Deployment: Successfully import and configure the fundamentals of a hiring management system</li> <li>Agent Creation: Build a hiring agent that is the start of the scenario you're going to build as an Agent Academy Operative</li> </ul>"},{"location":"operative-preview/01-get-started/#prerequisites","title":"\ud83d\udd0d Prerequisites","text":"<p>Before embarking on this mission, ensure you have:</p> <ul> <li>Copilot Studio license</li> <li>Access to a Microsoft Power Platform environment</li> <li>Administrative permissions to create solutions and agents</li> </ul>"},{"location":"operative-preview/01-get-started/#understanding-the-hiring-automation-scenario","title":"\ud83c\udfe2 Understanding the Hiring Automation Scenario","text":"<p>This scenario demonstrates how a company can use Microsoft Copilot Studio to improve and automate its hiring process. It introduces a system of agents that work together to handle tasks like reviewing resumes, recommending job roles, preparing interview materials, and evaluating candidates.</p>"},{"location":"operative-preview/01-get-started/#business-value","title":"Business Value","text":"<p>The solution helps HR teams save time and make better decisions by:</p> <ul> <li>Automatically processing resumes received via email.</li> <li>Suggesting suitable job roles based on candidate profiles.</li> <li>Creating job applications and interview guides tailored to each candidate.</li> <li>Ensuring fair and compliant hiring practices through built-in safety and moderation features.</li> <li>Collecting feedback to improve the solution.</li> </ul>"},{"location":"operative-preview/01-get-started/#how-it-works","title":"How It Works","text":"<ul> <li>A central Hiring Agent coordinates the process and stores data in Microsoft Dataverse.</li> <li>An Application Intake Agent reads resumes and creates job applications.</li> <li>An Interview Prep Agent generates interview questions and documents based on the candidate's background.</li> <li>The system can be published to a demo website, allowing stakeholders to interact with it.</li> </ul> <p>This scenario is ideal for organizations looking to modernize their recruitment workflows using AI-powered automation, while maintaining transparency, fairness, and efficiency.</p>"},{"location":"operative-preview/01-get-started/#lab-setup-the-hiring-agent","title":"\ud83e\uddea Lab: Setup the Hiring Agent","text":"<p>In this hands-on lab, you'll establish the foundation for your hiring automation system. You'll begin by importing a pre-configured solution that contains all the necessary Dataverse tables and data structure for managing candidates, job positions, and hiring workflows. Next, you'll populate these tables with sample data that will support your learning throughout this module and provide realistic scenarios for testing. Finally, you'll create the Hiring Agent in Copilot Studio, setting up the basic conversational interface that will serve as the cornerstone for all the other features you'll add in future missions.</p>"},{"location":"operative-preview/01-get-started/#lab-11-import-solution","title":"\ud83e\uddea Lab 1.1: Import solution","text":"<ol> <li>Go to Copilot Studio</li> <li>Select the ... in the left navigation and select Solutions</li> <li>Select the Import Solution button on the top</li> <li>Download the prepared solution</li> <li>Select Browse and select the downloaded solution from the previous step</li> <li>Select Next</li> <li>Select Import</li> </ol> <p>Success</p> <p>On success, you will see a green notification bar with the following message when it's done: \"Solution \"Operative\" imported successfully.\"</p> <p>When the solution is imported, take a look at what you imported by selecting the display name of the solution (<code>Operative</code>).</p> <p></p> <p>The following components are imported:</p> Display Name Type Description Candidate Table Candidate information Evaluation Criteria Table Evaluation criteria for the role Hiring Hub Model-Driven App Application for managing the hiring process Hiring Hub Site Map Navigation structure for the Hiring Hub app Job Application Table Job applications Job Role Table Job roles Resume Table Resumes of the candidates <p>As the last task for this lab, Select the Publish all customizations button at the top of the page.</p>"},{"location":"operative-preview/01-get-started/#lab-12-import-sample-data","title":"\ud83e\uddea Lab 1.2: Import sample data","text":"<p>In this lab, you will add sample data to some of the tables that you imported in lab 1.1.</p>"},{"location":"operative-preview/01-get-started/#download-the-files-to-import","title":"Download the files to import","text":"<ol> <li>Download the CSV-file with the evaluation criteria</li> <li>Download the CSV-file with the job roles</li> </ol>"},{"location":"operative-preview/01-get-started/#import-the-job-role-sample-data","title":"Import the Job Role sample data","text":"<ol> <li>Go back to the solution you just imported in the last lab</li> <li>Select the Hiring Hub Model-Driven App by selecting the checkmark in front of the row</li> <li> <p>Select the Play button at the top</p> <p>Warning</p> <p>You might be prompted to login again. Make sure to do that. After doing that, you should see the Hiring Hub app.</p> </li> <li> <p>Select Job Roles in the left navigation</p> </li> <li>Select the More icon (three dots below each other) in the command bar</li> <li> <p>Select the right arrow next to Import from Excel</p> <p></p> </li> <li> <p>Select Import from CSV</p> <p></p> </li> <li> <p>Select the Choose File button, select the job-roles.csv file you just downloaded and then select Open</p> </li> <li>Select Next</li> <li> <p>Leave the next step as is and select Review Mapping</p> <p></p> </li> <li> <p>Make sure the mapping is correct and select Finish Import</p> <p>Info</p> <p>This will start an import and you will be able to track progress or finish the process immediately by selecting Done</p> </li> <li> <p>Select Done</p> </li> </ol> <p>This can take a little while, but you can hit the Refresh button to see if the import has succeeded.</p> <p></p>"},{"location":"operative-preview/01-get-started/#import-the-evaluation-criteria-sample-data","title":"Import the Evaluation Criteria sample data","text":"<ol> <li>Select Evaluation Criteria in the left navigation</li> <li>Select the More icon (three dots below each other) in the command bar</li> <li> <p>Select the right arrow next to Import from Excel</p> <p></p> </li> <li> <p>Select Import from CSV</p> <p></p> </li> <li> <p>Select the Choose File button, select the evaluation-criteria.csv file you just downloaded and then select Open</p> </li> <li>Select Next</li> <li> <p>Leave the next step as is and select Review Mapping</p> <p></p> </li> <li> <p>Now we have to do a bit more work for the mapping. Select the magnifying glass(\ud83d\udd0e icon) next to the Job Role field</p> </li> <li>Make sure Job Title is selected here, and if not - add it</li> <li>Select OK</li> <li> <p>Make sure the rest of the mapping is correct too and select Finish Import</p> <p>Info</p> <p>This will start an import again and you will be able to track progress or finish the process immediately by selecting Done</p> </li> <li> <p>Select Done</p> </li> </ol> <p>This can take a little while, but you can hit the Refresh button to see if the import has succeeded.</p> <p></p>"},{"location":"operative-preview/01-get-started/#lab-13-create-the-hiring-agent","title":"\ud83e\uddea Lab 1.3: Create the hiring agent","text":"<p>Now you are done with the setup of the prerequisites, it's time for the actual work! Let's add our Hiring Agent first!</p> <ol> <li>Go to Copilot Studio and make sure you are in the same environment as where you imported the solution and the data</li> <li>Select Agents in the left navigation</li> <li>Select New Agent</li> <li>Select Configure</li> <li> <p>For Name, enter:</p> <pre><code>Hiring Agent\n</code></pre> </li> <li> <p>For Description, enter:</p> <pre><code>Central orchestrator for all hiring activities\n</code></pre> </li> <li> <p>Select the ... next to the Create button on the top right corner</p> </li> <li>Select Update advanced settings</li> <li>As Solution, select <code>Operative</code></li> <li>Select Update</li> <li>Select Create in the top right corner</li> </ol> <p>This will create the Hiring Agent for you, which you will use throughout this Operative course.</p>"},{"location":"operative-preview/01-get-started/#mission-complete","title":"\ud83c\udf89 Mission Complete","text":"<p>Mission 01 is completed! You now have mastered the following skills:</p> <p>\u2705 Scenario Understanding: Comprehensive knowledge of hiring automation challenges and solutions \u2705 Solution Deployment: Successfully imported and configured the fundamentals of a hiring management system \u2705 Agent Creation: Built an hiring agent that is the start of the scenario you're going to build as an Agent Academy Operative  </p> <p>Next up is Mission 02: Make your agent multi-agent ready with connected agents.</p>"},{"location":"operative-preview/01-get-started/#tactical-resources","title":"\ud83d\udcda Tactical Resources","text":"<ul> <li>Microsoft Copilot Studio - Create an agent</li> <li>Microsoft Dataverse Documentation</li> </ul>"},{"location":"operative-preview/02-multi-agent/","title":"Make your agent multi-agent ready with connected agents","text":"<p>Warning</p> <p>This course is still in development. That means that the quality is not up to par yet or that it doesn't work as intended.</p>"},{"location":"operative-preview/02-multi-agent/#theory","title":"Theory","text":"<ul> <li>Explain multi-agent (connected vs child agents)</li> </ul>"},{"location":"operative-preview/02-multi-agent/#lab","title":"Lab","text":"<ul> <li>Create connected agents</li> <li>Candidate Information Processing Agent (this child agent will process the candidate information from the resume etc)</li> <li>Interview Prep Agent (this agent will do interview prep based on the supplied information from the candidate &amp; the role information)</li> <li>https://learn.microsoft.com/en-us/microsoft-copilot-studio/authoring-add-other-agents</li> </ul>"},{"location":"operative-preview/03-automate-triggers/","title":"Automate your agent with Triggers","text":"<p>Warning</p> <p>This course is still in development. That means that the quality is not up to par yet or that it doesn't work as intended.</p>"},{"location":"operative-preview/03-automate-triggers/#theory","title":"Theory","text":"<ul> <li>What are triggers and why do we use them</li> </ul>"},{"location":"operative-preview/03-automate-triggers/#lab","title":"Lab","text":"<ul> <li>Make the agents autonomous - by adding triggers:</li> <li>On schedule</li> <li>On incoming email</li> <li>https://learn.microsoft.com/microsoft-copilot-studio/authoring-trigger-event</li> </ul>"},{"location":"operative-preview/04-agent-instructions/","title":"Authoring Agent Instructions","text":"<p>Warning</p> <p>This course is still in development. That means that the quality is not up to par yet or that it doesn't work as intended.</p>"},{"location":"operative-preview/04-agent-instructions/#theory","title":"Theory","text":"<p>This mission is THE place to talk about advanced instructions - what to do, what not to do.... what to include, what not to include... Also - take into account that there is a mission coming on customizing responses. That part should not be covered in this mission.</p>"},{"location":"operative-preview/04-agent-instructions/#lab","title":"Lab","text":"<ul> <li>Write instructions for the Hiring agent that shows the overall process and when to call the other agents</li> <li>Write instructions for the Candidate Information Processing Agent</li> <li>Write instructions for the Interview Prep Agent</li> </ul> <p>Use information from the following page (+ pages linked on that page): https://learn.microsoft.com/microsoft-copilot-studio/authoring-instructions</p> <ul> <li>https://learn.microsoft.com/microsoft-copilot-studio/guidance/generative-mode-guidance</li> </ul>"},{"location":"operative-preview/05-agent-responses/","title":"Personalizing Agent Responses","text":"<p>Warning</p> <p>This course is still in development. That means that the quality is not up to par yet or that it doesn't work as intended.</p>"},{"location":"operative-preview/05-agent-responses/#theory","title":"Theory","text":"<p>This mission is all about customizing responses. This is the place to give your agent a personality.</p>"},{"location":"operative-preview/05-agent-responses/#lab","title":"Lab","text":"<ul> <li>Navigate to agent settings and put in a prompt to customize the tone, outputs and personality of the agent</li> </ul> <p>Multi-agent orchestration and more: Copilot Studio announcements (Scroll down a bit to the response section of the blog)</p>"},{"location":"operative-preview/06-ai-safety/","title":"Content Moderation and AI Safety Essentials","text":"<p>Warning</p> <p>This course is still in development. That means that the quality is not up to par yet or that it doesn't work as intended.</p>"},{"location":"operative-preview/06-ai-safety/#theory","title":"Theory","text":"<ul> <li>Content moderation</li> <li>AI Safety &amp; Responsible AI</li> </ul>"},{"location":"operative-preview/06-ai-safety/#lab","title":"Lab","text":"<ul> <li>Content moderation level + send different message when response gets flagged. Use the setting in the settings menu</li> <li>Knowledge sources overview - Microsoft Copilot Studio</li> </ul>"},{"location":"operative-preview/07-multimodal-prompts/","title":"Extracting Resume Contents with Multi-Modal Prompts","text":"<p>Warning</p> <p>This course is still in development. That means that the quality is not up to par yet or that it doesn't work as intended.</p>"},{"location":"operative-preview/07-multimodal-prompts/#theory","title":"Theory","text":"<ul> <li>Explain what prompts are and what multimodal means</li> <li>Show why / when to use the different models in Prompts.</li> </ul> <p>https://learn.microsoft.com/ai-builder/prompt-modelsettings</p> <ul> <li>Talk about output options (Text/JSON) and when to choose what</li> </ul>"},{"location":"operative-preview/07-multimodal-prompts/#lab","title":"Lab","text":"<ul> <li>Write a multimodal prompt to get details from the resume that the candidate sent into Contoso.</li> <li>Output as JSON</li> </ul> <p>https://learn.microsoft.com/ai-builder/add-inputs-prompt#image-or-document-input</p>"},{"location":"operative-preview/08-dataverse-grounding/","title":"Prompts - Dataverse Grounding","text":"<p>Warning</p> <p>This course is still in development. That means that the quality is not up to par yet or that it doesn't work as intended.</p>"},{"location":"operative-preview/08-dataverse-grounding/#theory","title":"Theory","text":"<ul> <li>Explain about Prompts with Dataverse grounding</li> </ul>"},{"location":"operative-preview/08-dataverse-grounding/#lab","title":"Lab","text":"<ul> <li>Import data (preferably from an Excel file) into the Dataverse tables that were imported in the first mission</li> <li>Write a prompt with Dataverse grounding that uses the role data in Dataverse to get a list of all the role requirements</li> <li>Write a prompt with Dataverse grounding that uses the role data in Dataverse to get a list of all the company values and culture</li> </ul> <p>(Interview Prep Agent)</p> <p>https://learn.microsoft.com/ai-builder/use-your-own-prompt-data https://careers.microsoft.com/v2/global/en/culture</p>"},{"location":"operative-preview/09-deep-reasoning/","title":"Applying Deep Reasoning to Evaluate Candidate Fit and Interview Preparation","text":"<p>Warning</p> <p>This course is still in development. That means that the quality is not up to par yet or that it doesn't work as intended.</p>"},{"location":"operative-preview/09-deep-reasoning/#theory","title":"Theory","text":"<ul> <li>Explain what deep reasoning is</li> <li>Talk about ways to use it (in the agent itself or a prompt)</li> <li>Talk about when you would use it</li> </ul>"},{"location":"operative-preview/09-deep-reasoning/#lab","title":"Lab","text":"<p>For the Interview Prep agent - we'll use deep reasoning. In this case, we will reason over the following things:</p> <ul> <li>Interview questions (are there any gaps we need to zoom into during the interview)</li> <li>Outcome of Prompt on company fit (text on how this candidate aligns to the company values + score)</li> <li>Outcome of Prompt on role fit (text on how this candidate aligns to the role requirements + score)</li> </ul> <p>This is a great moment to apply the advanced instructions that learners have learned about in the earlier lesson.</p> <p>Add a deep reasoning model for complex tasks (preview) - Microsoft Copilot Studio https://learn.microsoft.com/ai-builder/prompt-modelsettings</p>"},{"location":"operative-preview/10-generate-documents/","title":"Generate Candidate Specific Interview Docs with Prompts","text":"<p>Warning</p> <p>This course is still in development. That means that the quality is not up to par yet or that it doesn't work as intended.</p>"},{"location":"operative-preview/10-generate-documents/#theory","title":"Theory","text":"<ul> <li>Document generation in Prompts</li> </ul>"},{"location":"operative-preview/10-generate-documents/#lab","title":"Lab","text":"<ul> <li>This mission should build a prompt that generates a document of custom-tailored interview questions based on the role and candidate resume.</li> </ul> <p>Generate 'Document (preview)' output for a prompt (preview)</p>"},{"location":"operative-preview/11-obtain-user-feedback/","title":"Obtain User Feedback with Adaptive Cards","text":"<p>Warning</p> <p>This course is still in development. That means that the quality is not up to par yet or that it doesn't work as intended.</p>"},{"location":"operative-preview/11-obtain-user-feedback/#theory","title":"Theory","text":"<ul> <li>Explain Analytics in Copilot Studio</li> </ul>"},{"location":"operative-preview/11-obtain-user-feedback/#lab","title":"Lab","text":"<ul> <li>Build feedback into the Hiring agent so that people using that can give feedback for the user experience.</li> </ul> <p>Obtain feedback for every response - Microsoft Copilot Studio</p>"},{"location":"operative-preview/12-demo-website/","title":"Publishing Your Agents to a Demo Website for Stakeholder Testing","text":"<p>Warning</p> <p>This course is still in development. That means that the quality is not up to par yet or that it doesn't work as intended.</p>"},{"location":"operative-preview/12-demo-website/#theory","title":"Theory","text":"<ul> <li>Explain publishing to a demo website (why would you use it, why wouldn't you?)</li> </ul>"},{"location":"operative-preview/12-demo-website/#lab","title":"Lab","text":"<ul> <li>Publish the agent to a demo website and configure a couple of sample questions. https://learn.microsoft.com/microsoft-copilot-studio/publication-connect-bot-to-web-channels?tabs=preview</li> </ul>"},{"location":"recruit/","title":"Welcome Recruit","text":"<p>Welcome, Recruit. Your mission\u2014should you choose to accept it\u2014is to master the art of building agents using Microsoft Copilot Studio.</p> <p>This hands-on training is your entry point into the world of agents: from grounded prompts to Adaptive Cards and agent flows, you'll learn how to build, scale, and deploy intelligent agents using real-world tools and use cases.</p>"},{"location":"recruit/#mission-objective","title":"\ud83c\udfaf Mission Objective","text":"<p>By completing the Agent Academy, you'll be able to:</p> <ul> <li>Understand what agents are in the context of Microsoft Copilot Studio</li> <li>Explore how Large Language Models (LLMs), retrieval-augmented generation (RAG), and orchestration come together in an agent</li> <li>Build both declarative and custom agents</li> <li>Enhance agents with Topics, Adaptive Cards, and Agent Flows</li> <li>Deploy agents to Microsoft Teams and Microsoft 365 Copilot</li> </ul>"},{"location":"recruit/#prerequisites","title":"\ud83e\uddea Prerequisites","text":"<p>To complete all missions, you\u2019ll need:</p> <ul> <li>A Microsoft 365 Developer tenant (with SharePoint enabled)</li> <li>Access to Microsoft Copilot Studio (trial or licensed)</li> <li>Optional: Basic knowledge of SharePoint, Power Platform, or Power Fx</li> </ul>"},{"location":"recruit/#who-this-is-for","title":"\ud83e\uddec Who This Is For","text":"<p>This course is ideal for:</p> <ul> <li>Makers and developers exploring Copilot Studio</li> <li>IT pros building Microsoft 365 Copilot extensions</li> <li>Power Platform enthusiasts who want to level up with intelligent agents</li> <li>Anyone who prefers to learn by doing</li> </ul>"},{"location":"recruit/#curriculum-overview","title":"\ud83e\udded Curriculum Overview","text":"<p>This academy is broken into progressive lessons\u2014each one designed as a field mission to level up your agent-building skills.</p> Lesson Title Mission Briefing <code>00</code> \ud83e\uddf0 Course Setup Set up your dev environment, Copilot Studio trial, and SharePoint site <code>01</code> \ud83e\udde0 Introduction to Agents Understand conversational AI concepts, LLMs, and autonomous vs. declarative agents <code>02</code> \ud83d\udee0\ufe0f Copilot Studio Fundamentals Learn the building blocks: knowledge, skills, autonomy <code>03</code> \ud83d\udc69\u200d\ud83d\udcbb Create a Declarative Agent Add your own agent to the Microsoft 365 Copilot, grounded in a prompt <code>04</code> \ud83e\udde9 Creating a Solution Package your agent into a reusable solution for environment management <code>05</code> \ud83d\ude80 Get Started with Pre-Built Agents Use and customize a template agent to accelerate setup <code>06</code> \u270d\ufe0f Build a Custom Agent Create a new Copilot grounded in knowledge sources <code>07</code> \ud83e\udde0 Add a Topic with Triggers Use Topics to define custom question/answer paths <code>08</code> \ud83e\udeaa Enhance with Adaptive Cards Build an Adaptive Card using Power Fx and SharePoint <code>09</code> \ud83d\udd01 Automate with Agent Flows Use Adaptive Card input to trigger back-end flows <code>10</code> \ud83e\udded Add Event Triggers Enable your agent to act autonomously using event-based logic <code>11</code> \ud83d\udce2 Publish Your Agent Deploy your agent to Microsoft Teams and Microsoft 365 Copilot <code>12</code> \ud83e\udeaa  Understanding Licensing Learn how licensing and billing works with Copilot Studio <p>Note</p> <p>\u2705 Completing this curriculum earns you the Recruit badge. \ud83d\udd13 Operative and Commander will be unlocked in future phases.</p> <p></p>"},{"location":"recruit/00-course-setup/","title":"\ud83d\udea8 Mission 00: Course Setup","text":""},{"location":"recruit/00-course-setup/#codename-operation-deployment-ready","title":"\ud83d\udd75\ufe0f\u200d\u2642\ufe0f CODENAME: <code>OPERATION DEPLOYMENT READY</code>","text":"<p>\u23f1\ufe0f Operation Time Window: <code>~30 minutes</code> </p>"},{"location":"recruit/00-course-setup/#mission-brief","title":"\ud83c\udfaf Mission Brief","text":"<p>Welcome to the first mission of your training as a Copilot Studio Agent. Before you can start building your first AI agent, you need to establish your field-ready development environment.</p> <p>This briefing outlines the systems, access credentials, and setup steps required to successfully operate in the Microsoft 365 ecosystem.</p>"},{"location":"recruit/00-course-setup/#objectives","title":"\ud83d\udd0e Objectives","text":"<p>Your mission includes:</p> <ol> <li>Getting a Microsoft 365 account  </li> <li>Gaining access to Microsoft Copilot Studio  </li> <li>(Optional) Securing a Microsoft 365 Copilot license for production publishing</li> <li>Creating a developer environment as your Copilot Studio environment to build in  </li> <li>Creating a SharePoint site to serve as your data source in later missions</li> </ol>"},{"location":"recruit/00-course-setup/#prerequisites","title":"\ud83d\udd0d Prerequisites","text":"<p>Before you begin, ensure you have:</p> <ol> <li>A work or school email address (personal @outlook.com, @gmail.com, etc., are not supported).</li> <li>Access to the internet and a modern browser (Edge, Chrome, or Firefox recommended).  </li> <li>Basic familiarity with Microsoft 365 (for example, signing into Office apps or Teams).  </li> <li>(Optional) A credit card or billing method if you plan to purchase paid licenses.</li> </ol>"},{"location":"recruit/00-course-setup/#step-1-get-a-microsoft-365-account","title":"Step 1: Get a Microsoft 365 Account","text":"<p>Copilot Studio resides within Microsoft 365, so you need a Microsoft 365 account to access it. You can either use an existing account if you have one or follow these steps to get an appropriate license:</p> <ol> <li>Acquire a Paid Microsoft 365 Business Subscription </li> <li>Go to the Microsoft 365 Business Plans and Pricing Page</li> <li>The cheapest option to get you started is the Microsoft 365 Business Basic plan. Select <code>Try for free</code> and walk through the guided form to fill in your subscription and account details and payment information.    </li> <li> <p>Once you have your new account, login.</p> <p>Tip</p> <p>If you plan to publish agents into Microsoft 365 Copilot Chat or connect to organizational data (SharePoint, OneDrive, Dataverse), a Microsoft 365 Copilot license is required. This is an add-on license which you can learn more about on the licensing site</p> </li> </ol>"},{"location":"recruit/00-course-setup/#step-2-start-a-copilot-studio-trial","title":"Step 2: Start a Copilot Studio Trial","text":"<p>Once you have your Microsoft 365 Tenant, you need to get access to Copilot Studio. You can get a free 30 day trial by following these steps:</p> <ol> <li>Navigate to aka.ms/TryCopilotStudio.  </li> <li>Enter the email address from the new account you configured in the previous step and select <code>Next</code>. </li> <li>It should recognize your account. Select <code>Sign In</code>.  </li> <li>Select <code>Start Free Trial</code>. </li> </ol> <p>Trial Notes</p> <ol> <li>The free trial provides full Copilot Studio capabilities.</li> <li>You will receive email notifications about your trial expiration. You can extend the trial in 30-day increments (up to 90 days of agent runtime).  </li> <li>If your tenant administrator disabled self-service sign-up, you\u2019ll see an error\u2014contact your Microsoft 365 admin to re-enable it.</li> </ol>"},{"location":"recruit/00-course-setup/#step-3-create-new-developer-environment","title":"Step 3: Create new developer environment","text":""},{"location":"recruit/00-course-setup/#sign-up-for-a-power-apps-developer-plan","title":"Sign up for a Power Apps Developer Plan","text":"<p>Using the same Microsoft 365 tenant in Step 1, sign up for a Power Apps Developer Plan to create a free development environment to build and test with Copilot Studio.</p> <ol> <li> <p>Sign up on the Power Apps Developer Plan website.</p> <ul> <li>Enter your email address</li> <li>Tick the checkbox</li> <li>Select Start free</li> </ul> <p></p> </li> <li> <p>After signing up for the Developer Plan, you'll be redirected to Power Apps. The environment uses your name, for example Adele Vance's environment. If there's already an environment with that name, the developer new environment is named Adele Vance's (1) environment.</p> <p>Use this developer environment in Copilot Studio when completing the labs.</p> </li> </ol> <p>Note</p> <p>If you are using an existing Microsoft 365 account and did not create one in Step 1, for example - using your own account in your work organization, your IT administrator (or the equivalent) team who manages your tenant/environments might have turned off the sign up process. In this case, please contact your administrator, or create a test tenant as per Step 1.</p>"},{"location":"recruit/00-course-setup/#step-4-create-new-sharepoint-site","title":"Step 4: Create new SharePoint site","text":"<p>A new SharePoint site needs to be created  which will be used in Lesson 06 - Create a custom agent using the conversational creation experience with Copilot and grounding it with your data.</p> <ol> <li> <p>Select the waffle icon on the top left hand side of Microsoft Copilot Studio to view the menu. Select SharePoint from the menu.</p> <p></p> </li> <li> <p>SharePoint will load. Select + Create  site to create a new SharePoint site.</p> <p></p> </li> <li> <p>A dialog will appear to guide you in creating a new SharePoint site. Select Team site or Communication site.</p> <p></p> </li> <li> <p>In the next step, a list of Microsoft templates will load by default. Scroll down and select the IT help desk template.</p> <p></p> </li> <li> <p>Select Use template to create a new SharePoint site using the IT help desk template.</p> <p></p> </li> <li> <p>Enter information for your site. The following is an example:</p> Field Value Site name Contoso IT Site description Copilot Studio for Beginners Site address ContosoIT <p></p> </li> <li> <p>In the final step, a language can be selected for the SharePoint site. By default it will be English. Leave the Language as English and select Create site.</p> <p></p> </li> <li> <p>The SharePoint site will provision for the next few seconds. In the mean time, you can choose to add other users to your site by entering their email address in the Add members field. When completed, select Finish.</p> <p></p> </li> <li> <p>The SharePoint site home page will next load. Copy the SharePoint site URL.</p> </li> <li> <p>This template provides pages with sample data about various IT policies and two sample lists (Tickets and Devices).</p> </li> </ol>"},{"location":"recruit/00-course-setup/#use-devices-sharepoint-list","title":"Use Devices SharePoint list","text":"<p>We will use the Devices list for in Mission 07 - Add new topic with trigger and nodes.</p>"},{"location":"recruit/00-course-setup/#add-new-column","title":"Add new column","text":"<p>Scroll to the far right in the list and select the + Add column button.  Choose the hyperlink type, enter Image for the column name, and select add.</p>"},{"location":"recruit/00-course-setup/#create-sample-data-in-devices-sharepoint-list","title":"Create sample data in Devices SharePoint list","text":"<p>You need to make sure you fill in this list with at least 4 sample data items and add one additional column to this list.  </p> <p>When adding sample data, make sure that the following fields are filled out:</p> <ul> <li>Device photo - use the images from the device images folder</li> <li>Title</li> <li>Status</li> <li>Manufacturer</li> <li>Model</li> <li>Asset Type</li> <li>Color</li> <li>Serial Number</li> <li>Purchase Date</li> <li>Purchase Price,</li> <li>Order #</li> <li>Image - use the following links</li> </ul> Device URL Surface Laptop 13 https://raw.githubusercontent.com/microsoft/agent-academy/refs/heads/main/docs/recruit/00-course-setup/images/device-images/Surface-Laptop-13.png Surface Laptop 15 https://raw.githubusercontent.com/microsoft/agent-academy/refs/heads/main/docs/recruit/00-course-setup/images/device-images/Surface-Laptop-15.png Surface Pro https://raw.githubusercontent.com/microsoft/agent-academy/refs/heads/main/docs/recruit/00-course-setup/images/device-images/Surface-Pro-12.png Surface Studio https://raw.githubusercontent.com/microsoft/agent-academy/refs/heads/main/docs/recruit/00-course-setup/images/device-images/Surface-Studio.png"},{"location":"recruit/00-course-setup/#mission-complete","title":"\u2705 Mission Complete","text":"<p>You\u2019ve successfully:</p> <ul> <li>Set up a Microsoft 365 dev environment  </li> <li>Activated your Copilot Studio trial  </li> <li>Created a SharePoint site for grounding agents  </li> <li>Populated the Devices list for use in future missions</li> </ul> <p>You're officially cleared to begin your Recruit-level agent training in Lesson 01.  </p> <p></p>"},{"location":"recruit/01-introduction-to-agents/","title":"\ud83d\udea8 Mission 01: Introduction to Agents","text":""},{"location":"recruit/01-introduction-to-agents/#codename-operation-ai-agent-decode","title":"\ud83d\udd75\ufe0f\u200d\u2642\ufe0f CODENAME: <code>OPERATION AI AGENT DECODE</code>","text":"<p>\u23f1\ufe0f Operation Time Window: <code>~30 minutes \u2013 intel only, no fieldwork required</code> </p>"},{"location":"recruit/01-introduction-to-agents/#mission-brief","title":"\ud83c\udfaf Mission Brief","text":"<p>Welcome, Recruit. Before we dive into building agents, you need a firm grasp of the AI concepts that power them. This mission will equip you with foundational knowledge of conversational AI, large language models (LLMs), retrieval-augmented generation (RAG), and the types of agents you can create in Copilot Studio.</p>"},{"location":"recruit/01-introduction-to-agents/#objectives","title":"\ud83d\udd0e Objectives","text":"<p>In this mission, you\u2019ll learn:</p> <ol> <li>What conversational AI is and why it matters  </li> <li>How Large Language Models (LLMs) power chat experiences  </li> <li>What Retrieval-Augmented Generation (RAG) brings to the table  </li> <li>The distinction between conversational agents and autonomous agents  </li> <li>How agents in Copilot Studio leverage these concepts  </li> </ol> <p>Let\u2019s dive in!</p>"},{"location":"recruit/01-introduction-to-agents/#what-is-conversational-ai","title":"What Is Conversational AI?","text":"<p>Conversational AI refers to any system that can understand, process, and respond to human language \u2013 whether text or speech \u2013 in a way that feels natural. Think chatbots in help desks or virtual personal assistants in your favorite apps. Under the hood, most modern conversational AIs rely on Large Language Models (LLMs), which we\u2019ll cover next.</p>"},{"location":"recruit/01-introduction-to-agents/#why-it-matters","title":"Why It Matters","text":"<ul> <li>User Experience: Conversational interfaces are often more intuitive than clicking through menus.  </li> <li>Scalability: One agent can handle tens or hundreds of concurrent conversations.  </li> <li>Efficiency: Instead of building custom rule-based scripts, LLM-powered agents adapt on the fly to user input.  </li> <li>Extensibility: With the right design, agents can tap into knowledge bases, connect to APIs, or act as \u201cdigital coworkers\u201d inside business workflows.</li> </ul>"},{"location":"recruit/01-introduction-to-agents/#large-language-models-llms-101","title":"Large Language Models (LLMs) 101","text":"<p>At the core of most conversational AI systems are Large Language Models \u2013 neural networks trained on massive text corpora. They learn statistical patterns of language so they can generate coherent sentences, answer questions, or even brainstorm ideas. Key points to understand:</p> <ol> <li>Training Data: LLMs ingest terabytes of text (web pages, books, articles). This \u201cworld knowledge\u201d lets them respond on many topics.  </li> <li>Tokenization: Text is broken into smaller units called tokens (words, subwords, or characters). The model predicts one token at a time.  </li> <li>Context Window: Each LLM has a limit on how many tokens it can \u201csee\u201d at once. Beyond that limit, prior tokens get truncated.  </li> <li>Prompting: You interact with an LLM by sending it a prompt. The better your prompt, the more focused and relevant the response.  </li> <li>Zero-shot vs. Fine-tuning: Zero-shot means using an LLM as-is (just raw weights). Fine-tuning means adjusting the model on domain-specific data so it answers more accurately for your needs.</li> </ol> <p>Pro Tip</p> <p>A common analogy is that an LLM is like a \u201csuper-smart autocomplete.\u201d It doesn\u2019t truly understand meaning like a human brain, but it\u2019s extremely good at predicting the next best word (or phrase) in a sequence.</p>"},{"location":"recruit/01-introduction-to-agents/#retrieval-augmented-generation-rag","title":"Retrieval-Augmented Generation (RAG)","text":"<p>When LLMs rely solely on static training data, they might hallucinate or become outdated. RAG addresses this by letting the model \u201clook up\u201d fresh information before composing an answer. At a high level, RAG works like this:</p> <ol> <li>User Query: A user asks a question (e.g., \u201cWhat\u2019s the latest on Contoso\u2019s quarterly earnings?\u201d).  </li> <li>Retriever Step: The system queries a knowledge source (documents, internal databases, SharePoint libraries, etc.) to find relevant passages.  </li> <li>Augmentation: Retrieved passages get appended to or prepended before the LLM prompt.  </li> <li>Generation: The LLM ingests both the user\u2019s question and the retrieved context, then generates a response that\u2019s grounded in up-to-date data.  </li> </ol> <p>With RAG, your agent can call internal company wikis, plugin APIs, or search an FAQ knowledge base\u2014and return answers that aren\u2019t limited to statically published model parameters.</p>"},{"location":"recruit/01-introduction-to-agents/#conversational-vs-autonomous-agents","title":"Conversational vs. Autonomous Agents","text":"<p>In the context of Copilot Studio, the term agent can refer to multiple flavors of AI assistants. It\u2019s helpful to draw a line between:</p> <ol> <li>Conversational Agents: </li> <li>Primarily focus on two-way dialogue.  </li> <li>Persist context across multiple turns of a conversation.  </li> <li>Usually orchestrated via predefined flows or triggers (e.g., \u201cIf user says X, respond with Y\u201d).  </li> <li>Ideal for customer support, FAQs, guided interactions, scheduling, or simple Q&amp;A.  </li> <li> <p>Examples:  </p> <ul> <li>A Teams chatbot that answers HR policy questions.  </li> <li>A Power Virtual Agents bot on a SharePoint page to guide users through a form.  </li> </ul> </li> <li> <p>Autonomous Agents: </p> </li> <li>Go beyond back-and-forth chat; they can take actions on behalf of the user.  </li> <li>Use LLM reasoning loops (think \u201cplan \u2192 act \u2192 observe \u2192 replan\u201d) to complete tasks.  </li> <li>Hook into external tools or APIs (e.g., call a Power Automate flow, send calendar invites, manipulate data in Dataverse).  </li> <li>Operate without constant human prompts\u2014once triggered, they can handle multi-step processes autonomously.  </li> <li>Examples:  <ul> <li>An agent that generates a travel itinerary, books flights, and emails confirmations.  </li> <li>A \u201cMeeting Summarizer\u201d agent that joins a Teams call, transcribes it in real time, and writes an executive summary to OneNote.  </li> </ul> </li> </ol> <p>Key Difference</p> <p>Conversational agents wait for user input and stick to dialogue. Autonomous agents proactively plan and execute a sequence of steps using broader tool access.</p>"},{"location":"recruit/01-introduction-to-agents/#agents-in-copilot-studio","title":"Agents in Copilot Studio","text":"<p>Copilot Studio unifies both conversational and autonomous scenarios under one framework. Here\u2019s how Copilot Studio helps you build agents:</p> <ol> <li>Visual Agent Designer: A low-code canvas to define prompts, memory, and tools for both chat and action workflows.  </li> <li>LLM Configurations: Select from various OpenAI models or Microsoft\u2019s enterprise-grade GPT to match your performance and cost needs.  </li> <li>Retrieval Connectors: Prebuilt integrations for SharePoint, OneDrive, Azure Cognitive Search, and Dataverse, enabling RAG out of the box.  </li> <li>Custom Tools &amp; Functions: Define custom HTTP actions or Power Automate flows that your agent can invoke autonomously.  </li> <li>Multi-Modal Support: Beyond text, Copilot Studio agents can ingest images, files, or structured data to enrich context.  </li> <li>Publishing &amp; Distribution: Once your agent is ready, you can publish it to Microsoft 365 Copilot (so users invoke it in Teams, SharePoint, Outlook, etc.) or embed it as a standalone chat widget on a webpage.</li> </ol>"},{"location":"recruit/01-introduction-to-agents/#mission-complete","title":"\ud83c\udf89 Mission Complete","text":"<p>You\u2019ve now completed your introduction to agents and foundational AI concepts. You understand:</p> <ol> <li>LLMs = The \u201cBrain\u201d of Your Agent </li> <li>Responsible for language understanding and generation.  </li> <li> <p>More tokens = richer context, but also higher cost per call.  </p> </li> <li> <p>RAG = Real-Time Knowledge Integration </p> </li> <li>Bridges the gap between a static LLM and ever-changing data sources.  </li> <li> <p>Retrieves and injects relevant documents or records into the LLM prompt.  </p> </li> <li> <p>Conversational vs. Autonomous </p> </li> <li>Conversational: Focus on dialogue flow and preserving context (e.g., \u201cSession Memory\u201d).  </li> <li>Autonomous: Add \u201cAction Blocks\u201d that let the agent call out to external tools or services.</li> </ol> <p>Next up, you'll explore the fundamentals of Copilot Studio!</p> <p>Stay sharp, Recruit - your AI journey is just beginning!</p>"},{"location":"recruit/01-introduction-to-agents/#tactical-resources","title":"\ud83d\udcda Tactical Resources","text":"<p>\ud83d\udd17 Copilot Studio Documentation Home</p> <p></p>"},{"location":"recruit/02-copilot-studio-fundamentals/","title":"\ud83d\udea8 Mission 02: Copilot Studio Fundamentals","text":""},{"location":"recruit/02-copilot-studio-fundamentals/#codename-operation-core-protocol","title":"\ud83d\udd75\ufe0f\u200d\u2642\ufe0f CODENAME: <code>OPERATION CORE PROTOCOL</code>","text":"<p>\u23f1\ufe0f Operation Time Window: <code>~30 minutes \u2013 intel only, no fieldwork required</code> </p>"},{"location":"recruit/02-copilot-studio-fundamentals/#mission-brief","title":"\ud83c\udfaf Mission Brief","text":"<p>Welcome, Recruit. This mission will equip you with foundational intel to understand how Copilot Studio works, and how to build intelligent agents that deliver real business value.</p> <p>Before building your first agent, you need to understand the four key components that make up every custom AI agent: Knowledge, Tools, Topics, and Instructions. You\u2019ll also learn how these elements work together in the Copilot Studio orchestrator.</p>"},{"location":"recruit/02-copilot-studio-fundamentals/#objectives","title":"\ud83d\udd0e Objectives","text":"<p>In this mission, you will:</p> <ul> <li>Learn what Copilot Studio is</li> <li>Learn when and why to use agents</li> <li>Explore the four building blocks of agents</li> <li>Knowledge</li> <li>Tools</li> <li>Topics</li> <li>Instructions</li> <li>Understand how these components work together to create an intelligent, automated agent</li> </ul>"},{"location":"recruit/02-copilot-studio-fundamentals/#what-are-agents-in-copilot-studio","title":"What Are Agents in Copilot Studio?","text":"<p>An agent is a specialized AI assistant you design to handle specific tasks or queries. Unlike a general-purpose chatbot, your agent:</p> <ul> <li>Knows company-specific data (policies, documents, databases)  </li> <li>Carries out real-world tasks (sending messages, creating calendar events, updating records)  </li> <li>Maintains conversational context so it can follow up on previous questions  </li> </ul> <p>Because Copilot Studio is low-code, you can drag and drop prebuilt components\u2014no deep coding skills required. Once your agent is built, people can call on it inside Teams, Slack, or even a custom webpage to get answers or trigger workflows automatically.</p>"},{"location":"recruit/02-copilot-studio-fundamentals/#when-and-why-to-use-copilot-studio","title":"When and Why to Use Copilot Studio","text":"<p>While Microsoft 365 Copilot provides general AI assistance across Office apps, you\u2019ll want a custom agent when:</p>"},{"location":"recruit/02-copilot-studio-fundamentals/#you-need-domain-specific-knowledge","title":"You need domain-specific knowledge","text":"<ul> <li>Out-of-the-box Copilot might not know your company\u2019s internal procedures or data. An agent can query your SharePoint sites, databases, or custom sources to give accurate, up-to-date answers.  </li> </ul>"},{"location":"recruit/02-copilot-studio-fundamentals/#you-want-to-automate-multi-step-workflows","title":"You want to automate multi-step workflows","text":"<ul> <li>For example: \"When someone submits an expense, send it for approval, update the finance tracker, and notify the manager.\" A custom agent can handle every step, triggered by a single command or event.  </li> </ul>"},{"location":"recruit/02-copilot-studio-fundamentals/#you-need-a-contextual-in-tool-experience","title":"You need a contextual, in-tool experience","text":"<ul> <li>Imagine a New Hire Onboarding agent in Teams that guides HR staff through every policy, sends necessary forms, and schedules orientation meetings\u2014right inside your existing collaboration platform.  </li> </ul>"},{"location":"recruit/02-copilot-studio-fundamentals/#four-building-blocks-of-an-agent","title":"Four Building Blocks of an Agent","text":"<p>Every Copilot Studio agent is built from four core components:</p> <ol> <li>Knowledge </li> <li>Tools (Actions) </li> <li>Topics </li> <li>Instructions</li> </ol> <p>Below, we\u2019ll define each building block and show how they work together to make an effective agent.</p>"},{"location":"recruit/02-copilot-studio-fundamentals/#1-knowledge","title":"1. Knowledge","text":"<p>Knowledge is the data and context your agent uses to answer questions accurately. It has two parts:</p>"},{"location":"recruit/02-copilot-studio-fundamentals/#custom-instructions-context","title":"Custom Instructions &amp; Context","text":"<ul> <li> <p>You write a brief description of the agent\u2019s purpose and tone. For example:  </p> <pre><code>You are an IT support agent. You help employees troubleshoot common software issues, provide troubleshooting steps, and escalate urgent tickets.\n</code></pre> </li> <li> <p>During a conversation, the agent remembers previous turns so it can refer back to what was already discussed (for instance, if the user first says, \"My printer is offline,\" then later asks, \"Did you check the ink level?\" the agent recalls the printer context).</p> </li> </ul>"},{"location":"recruit/02-copilot-studio-fundamentals/#knowledge-sources-grounding-data","title":"Knowledge Sources (Grounding Data)","text":"<ul> <li>You connect your agent to up to multiple data sources\u2014SharePoint libraries, documentation sites, wikis, or other databases.  </li> <li>When a user asks a question, the agent pulls relevant excerpts from those sources so answers are grounded in your organization\u2019s actual policies, product manuals, or any proprietary information.  </li> <li>You can even force the agent to only respond with information from those sources, preventing it from guessing or \"hallucinating\" answers.</li> </ul> <p>Example</p> <p>A \"Policy Assistant\" agent might connect to your HR SharePoint site. If a user asks, \"What is our PTO accrual rate?\" the agent retrieves the exact text from the HR policy document rather than relying on a generic AI response.</p>"},{"location":"recruit/02-copilot-studio-fundamentals/#2-tools-actions","title":"2. Tools (Actions)","text":"<p>Tools (Actions) define what the agent can do beyond chatting. Each action is a task the agent executes programmatically, such as:</p> <ul> <li>Sending an email or Teams message  </li> <li>Creating or updating a calendar event  </li> <li>Adding or editing a record in a database (e.g., a SharePoint list or Dataverse table)  </li> <li>Calling a Power Automate flow or REST API  </li> </ul>"},{"location":"recruit/02-copilot-studio-fundamentals/#how-actions-work","title":"How Actions Work","text":"<ul> <li> <p>Define Inputs &amp; Outputs </p> <ul> <li>For example, a Send Email action might require:  <ul> <li><code>RecipientEmailAddress</code> </li> <li><code>SubjectLine</code> </li> <li><code>EmailBody</code> </li> </ul> </li> </ul> </li> <li> <p>Combine Actions into Workflows </p> <ul> <li>Often, fulfilling a user request involves multiple steps.  </li> <li>You can sequence actions so that:          1. The agent retrieves data from a SharePoint list.          2. It generates a summary using the LLM.          3. It sends a Teams message with that summary.  </li> </ul> </li> <li> <p>Connect to External Systems </p> <ul> <li>If you need to update a CRM or call an internal API, create a custom action to handle that.  </li> <li>Copilot Studio can integrate with the Power Platform or any HTTP-based endpoint.</li> </ul> </li> </ul> <p>An \"Expense Helper\" agent could:</p> <ol> <li>Listen for a \"Submit Expense\" request.  </li> <li>Grab the user\u2019s expense details from a form.  </li> <li>Use an \"Add to SharePoint List\" action to store the data.  </li> <li>Trigger a \"Send Email\" action to notify the approver.  </li> </ol>"},{"location":"recruit/02-copilot-studio-fundamentals/#3-topics","title":"3. Topics","text":"<p>Topics define the conversational triggers or entry points for your agent. Each topic corresponds to a piece of functionality or a question category.</p>"},{"location":"recruit/02-copilot-studio-fundamentals/#conversational-triggers","title":"Conversational Triggers","text":"<ul> <li>A topic might be \"Submit IT Ticket,\" \"Check Vacation Balance,\" or \"Create Sales Report.\"  </li> <li>Under the hood, Copilot Studio uses generative orchestration: rather than relying on exact keywords, the AI interprets user intent and picks the right topic based on a short description you provide.  </li> </ul>"},{"location":"recruit/02-copilot-studio-fundamentals/#topic-descriptions","title":"Topic Descriptions","text":"<ul> <li>In each topic, you write a clear, concise description of what that topic covers.</li> </ul> <p>Example of topic description</p> <p>This topic helps users submit an IT support ticket by collecting the issue details, priority, and contact information.</p> <ul> <li>The AI uses that description to decide when to activate this topic, even if the user\u2019s phrasing doesn\u2019t exactly match.</li> </ul>"},{"location":"recruit/02-copilot-studio-fundamentals/#mapping-topics-to-actions","title":"Mapping Topics to Actions","text":"<ul> <li>Each topic is connected to one or more actions or data retrieval steps.  </li> <li>When the AI chooses a topic, it guides the conversation through the sequence you defined (ask follow-up questions, call actions, return results).</li> </ul> <p>Example</p> <p>If a user says, \"I need help setting up my new laptop,\" the AI might match that intent to the \"Submit IT Ticket\" topic. The agent then asks for laptop model, user details, and pushes a ticket into the helpdesk system automatically</p>"},{"location":"recruit/02-copilot-studio-fundamentals/#4-instructions","title":"4. Instructions","text":"<p>Instructions (sometimes called \"Prompts\" or \"System Messages\") guide the LLM\u2019s tone, style, and boundaries. They shape how the agent responds in any situation.</p>"},{"location":"recruit/02-copilot-studio-fundamentals/#role-persona","title":"Role &amp; Persona","text":"<ul> <li>You tell the AI who it is (e.g., \"You are a customer service agent for Contoso Retail\").  </li> <li>This sets the tone\u2014friendly, concise, formal, or casual\u2014depending on your use case.</li> </ul>"},{"location":"recruit/02-copilot-studio-fundamentals/#response-guidelines","title":"Response Guidelines","text":"<ul> <li>Specify any rules the agent must follow, such as:  <ul> <li>\"Always summarize policy information in bullet points.\"  </li> <li>\"If you don\u2019t know the answer, say \u2018I\u2019m sorry, I don\u2019t have that information.\u2019\"  </li> <li>\"Never include confidential data outside of context.\"</li> </ul> </li> </ul>"},{"location":"recruit/02-copilot-studio-fundamentals/#memory-context-rules","title":"Memory &amp; Context Rules","text":"<ul> <li>You can instruct the agent how many turns of conversation to remember.  </li> <li>For example: \"Remember details from this user\u2019s requests for up to three follow-up questions.\"</li> </ul> <p>In a \"Benefits Advisor\" agent, you might include:</p> <p>\"Always reference the latest HR handbook when answering questions. If asked about enrollment deadlines, provide the specific dates from the policy. Keep answers under 150 words.\"</p>"},{"location":"recruit/02-copilot-studio-fundamentals/#how-the-four-building-blocks-work-together","title":"How the Four Building Blocks Work Together","text":"<p>When you assemble Knowledge, Tools, Topics, and Instructions, Copilot Studio\u2019s AI orchestrator creates an agent that:</p> <ol> <li>Listens for a relevant Topic (guided by your topic descriptions).  </li> <li>Applies Instructions to set its tone, decide when to ask follow-up questions, and enforce rules.  </li> <li>Leverages Knowledge Sources to ground its answers in your organization\u2019s data.  </li> <li>Calls Tools (Actions) as needed to perform tasks\u2014sending messages, updating records, or invoking APIs.  </li> </ol> <p>Under the hood, the orchestrator uses a generative planning approach: it decides which steps to take, in what order, to fulfill a user request. If an action fails (for example, an email can\u2019t be sent), the agent follows your exception-handling guidelines (ask a clarifying question or report the error). Because the LLM adapts to conversation context, the agent can maintain memory over multiple turns and incorporate new information as the conversation unfolds.</p> <p>Visual Flow Example: </p> <pre><code>sequenceDiagram\n    participant User\n    participant AI\n    participant Agent\n\n    User-&gt;&gt;AI: \"Show me my PTO balance.\"\n    AI-&gt;&gt;AI: Match topic: \"Check PTO Balance\"\n    Note over AI: Instructions: Apply friendly, concise tone\n    AI-&gt;&gt;Agent: Request user's PTO balance\n    Note right of Agent: Knowledge: Query HR SharePoint list\n    Agent--&gt;&gt;AI: PTO balance = 12 days\n    AI-&gt;&gt;Agent: Send message to user (Teams)\n    Note right of Agent: Action: Deliver notification\n    Agent--&gt;&gt;User: \"Your current PTO balance is 12 days.\"</code></pre>"},{"location":"recruit/02-copilot-studio-fundamentals/#mission-complete","title":"\ud83c\udf89 Mission Complete","text":"<p>You\u2019ve successfully completed your fundamentals briefing. You\u2019ve now learned the four essential building blocks of any agent in Copilot Studio:</p> <ol> <li>Knowledge \u2013 Where the agent looks up factual information and maintains conversation memory.  </li> <li>Tools \u2013 The tasks the agent can perform to make things happen automatically.  </li> <li>Topics \u2013 How the agent recognizes user intent and decides which workflow to run.  </li> <li>Instructions \u2013 The rules, tone, and boundaries that guide every response.</li> </ol> <p>With these components in place, you can build a basic agent that answers questions and executes simple workflows. In the next lesson, we\u2019ll walk through a step-by-step tutorial to create a \"Service Desk\" agent\u2014from connecting your first knowledge source to defining a topic and wiring up an action.</p> <p>Up next: You'll build your first declarative agent for M365 Copilot.</p> <p></p>"},{"location":"recruit/03-create-a-declarative-agent-for-M365Copilot/","title":"\ud83d\udea8 Mission 03: Deploy a Declarative Agent for Microsoft 365 Copilot","text":""},{"location":"recruit/03-create-a-declarative-agent-for-M365Copilot/#codename-operation-copilot-extension","title":"\ud83d\udd75\ufe0f\u200d\u2642\ufe0f CODENAME: <code>OPERATION COPILOT EXTENSION</code>","text":"<p>\u23f1\ufe0f Operation Time Window: <code>~60 minutes</code></p>"},{"location":"recruit/03-create-a-declarative-agent-for-M365Copilot/#mission-brief","title":"\ud83c\udfaf Mission Brief","text":"<p>Welcome to your first field assignment, Agent Maker. You\u2019ve been selected to design, equip, and deploy a Declarative Agent\u2014a specialized operative embedded directly into Microsoft 365 Copilot and Teams.</p> <p>Unlike traditional agents, declarative agents operate with a defined mission (instructions), tools (prompts/connectors), and strategic access to internal intelligence (knowledge sources like SharePoint, Dataverse, and more). Your job is to build this agent using Microsoft Copilot Studio\u2014a no-code command center where your agent\u2019s skills and purpose come to life.</p> <p>Let\u2019s go.</p>"},{"location":"recruit/03-create-a-declarative-agent-for-M365Copilot/#objectives","title":"\ud83d\udd0e Objectives","text":"<p>In this mission, you\u2019ll learn:</p> <ol> <li>Understanding what declarative agents are and how they extend Microsoft 365 Copilot with custom capabilities</li> <li>Comparing Microsoft Copilot Studio vs. Copilot Studio agent builder for building declarative agents</li> <li>Creating a declarative agent using natural language through the conversational creation experience</li> <li>Adding AI prompts as tools to enhance your agent's specialized knowledge and problem-solving abilities</li> <li>Publishing and testing your declarative agent in Microsoft 365 Copilot and Microsoft Teams</li> </ol>"},{"location":"recruit/03-create-a-declarative-agent-for-M365Copilot/#what-is-a-declarative-agent-for-microsoft-365-copilot","title":"\ud83d\udd75\ud83c\udffb\u200d\u2640\ufe0f What is a declarative agent for Microsoft 365 Copilot?","text":"<p>Declarative agents are tailored versions of Microsoft 365 Copilot. You can customize Microsoft 365 Copilot to meet specific business needs by providing it with instructions to support a particular process, ground it with enterprise knowledge, and leverage tools for wider extensibility. This allows organizations to create personalized experiences with greater functionality for their users.</p>"},{"location":"recruit/03-create-a-declarative-agent-for-M365Copilot/#why-would-i-use-microsoft-copilot-studio-to-build-a-declarative-agent","title":"\ud83e\udd14 Why would I use Microsoft Copilot Studio to build a declarative agent?","text":"<p>As a maker, there's a chance you've already explored Copilot Studio agent builder in Microsoft 365 Copilot and so you're probably wondering why build a declarative agent in Microsoft Copilot Studio?</p> <p>Microsoft Copilot Studio offers a comprehensive set of tools and features for declarative agents that go beyond the limitations of Copilot Studio agent builder. Similar to Copilot Studio agent builder, you don't need to know programming or software development to build in Microsoft Copilot Studio. Let's break this down further to understand the differences between Copilot Studio Agent Builder and Copilot Studio for building declarative agents.</p>"},{"location":"recruit/03-create-a-declarative-agent-for-M365Copilot/#feature-comparison","title":"Feature comparison","text":"<p>The following table highlights the differences when building a declarative agent in Copilot Studio agent builder and Copilot Studio.</p> Feature Copilot Studio agent builder in Microsoft 365 Copilot Extend Microsoft 365 Copilot in Copilot Studio Knowledge Web, SharePoint, Teams chats, Outlook emails, Copilot connectors Web search (via Bing), SharePoint, Dataverse, Dynamics 365, Copilot connectors Tools Code interpreter, image generator 1400+ Power Platform connectors, custom connectors, prompt, computer use, REST API, Model Context Protocol Starter prompts Configure prompts for users to get started quickly Configure prompts for users to get started quickly Channel Agent only published to Microsoft 365 Copilot Agent published to Microsoft 365 Copilot and Teams Sharing permissions Users are only viewers Users can be editors or viewers <p>There are more capabilities offered for declarative agents built in Microsoft Copilot Studio which we'll learn about next.</p> <p>Tip</p> <ul> <li>To learn more about Copilot Studio agent builder, head to Copilot Developer Camp: Lab MAB1 - Build your first agent</li> <li>For pro-development of extending a declarative agent beyond Copilot Studio agent builder for Microsoft 365 Copilot, head to Copilot Developer Camp: Lab MAB1 - Build your first agent</li> </ul>"},{"location":"recruit/03-create-a-declarative-agent-for-M365Copilot/#extending-microsoft-365-copilot-with-declarative-agents-built-in-copilot-studio","title":"Extending Microsoft 365 Copilot with declarative agents built in Copilot Studio","text":"<p>Let's expand what we've learnt from the feature comparison table.</p>"},{"location":"recruit/03-create-a-declarative-agent-for-M365Copilot/#customization","title":"Customization","text":"<ul> <li>Detailed Instructions: You can provide detailed instructions and capabilities to define the agent's purpose and behavior precisely.</li> <li> <p>This includes invoking tools simply from using natural language.</p> </li> <li> <p>Enterprise Knowledge Access: Enables access to enterprise knowledge that respect user permissions.</p> </li> <li>SharePoint integration</li> <li>Dataverse integration</li> <li>Dynamics 365 integration</li> <li>Microsoft 365 Copilot connectors enabled by your organization administrator</li> </ul> <p></p>"},{"location":"recruit/03-create-a-declarative-agent-for-M365Copilot/#advanced-capabilities","title":"Advanced Capabilities","text":"<ul> <li>Integration with External Services: Allows you to choose from 1400+ Power Platform connectors that integrate with external services, providing more complex and powerful functionalities.</li> <li>Examples include docusign, ServiceNow, Salesforce, SAP and more</li> <li> <p>Alternatively, you can also leverage Model Context Protocol servers and REST APIs directly within your declarative agent</p> </li> <li> <p>AI prompts: Use a prompt to analyze and transform text, documents, images and data with natural language and AI reasoning.</p> </li> <li>Select the chat model, choose from Basic (Default), Standard, Premium</li> <li> <p>Option to bring-your-own Azure AI Foundry model to ground your prompt in</p> </li> <li> <p>More deployment configuration options: Select channels and define user permissions.</p> </li> <li>Publish to Teams, a familiar user interface for your users for quicker adoption</li> <li>Edit user permissions can be shared to prevent a single point of dependency on the owner of the agent</li> </ul> <p></p> <p>In summary, declarative agents in Microsoft Copilot Studio allow customization of Microsoft 365 Copilot to suit business needs through integration of enterprise knowledge systems, tools to connect to external services or AI GPT models.</p>"},{"location":"recruit/03-create-a-declarative-agent-for-M365Copilot/#lab-03-build-a-declarative-agent-in-microsoft-copilot-studio-for-microsoft-365-copilot","title":"\ud83e\uddea Lab 03: Build a declarative agent in Microsoft Copilot Studio for Microsoft 365 Copilot","text":"<p>We'll next learn how to build a declarative agent for a \"Business-to-Employee\" use case which will act as an IT helpdesk agent.</p> <ul> <li>3.1 Create a declarative agent</li> <li>3.2 Create and add a prompt for your declarative agent</li> <li>3.3 Update instructions and test your declarative agent</li> <li>3.4 Publish your declarative agent to Microsoft 365 Copilot and Teams</li> </ul> <p>Note</p> <p>This lab will outline steps to add a Prompt as a tool. The following lessons will dive into adding knowledge sources and adding other tools available. Keeping it simple for your learning \ud83d\ude0a</p> <p>You do need a Microsoft 365 Copilot user license to publish your declarative agent built in Copilot Studio to Microsoft 365 Copilot.</p>"},{"location":"recruit/03-create-a-declarative-agent-for-M365Copilot/#understanding-business-to-employee-b2e","title":"\ud83d\udc69\ud83c\udffb\u200d\ud83d\udcbc Understanding Business-to-Employee (B2E)","text":"<p>Business-to-Employee (B2E) refers to the interactions and services that a business provides directly to its employees. In the context of an agent, it means using the advanced capabilities of Copilot Studio to support and enhance the work experience of employees within the organization.</p>"},{"location":"recruit/03-create-a-declarative-agent-for-M365Copilot/#use-case-scenario","title":"\u2728 Use case scenario","text":"<p>As an employee</p> <p>I want to get quick and accurate help from the IT helpdesk agent for issues like device problems, network troubleshooting, printer setup</p> <p>So that I can stay productive and resolve technical issues without delays</p> <p>Let's begin!</p>"},{"location":"recruit/03-create-a-declarative-agent-for-M365Copilot/#prerequisites","title":"Prerequisites","text":"<ul> <li>Users and makers must have a license to use Microsoft 365 Copilot.</li> <li>Makers must have permissions to create in and have access to a Copilot Studio environment.</li> </ul>"},{"location":"recruit/03-create-a-declarative-agent-for-M365Copilot/#31-create-a-declarative-agent","title":"3.1 Create a declarative agent","text":"<p>Copilot questions may differ across sessions</p> <p>The Copilot conversational creation experience can vary each time where the provided questions for guidance may be slightly different than previously.</p> <ol> <li> <p>Navigate to https://copilotstudio.microsoft.com/ and sign in using your credentials. Make sure to switch to your environment that you're using for these labs.</p> </li> <li> <p>Select Agents from the menu and select Copilot for Microsoft 365.</p> <p></p> </li> <li> <p>Next, we're going to create a declarative agent by selecting + Add agent.</p> <p></p> </li> <li> <p>We'll then see the conversational creation experience load where we can chat in natural language with Copilot to describe the declarative agent we want to build, and use the provided questions for guidance.</p> <p>Let's enter a detailed description that outlines the following,    - the task of the agent    - what type of inquiries it can handle    - the format of its response    - the goal of the agent  </p> <pre><code>You are a highly skilled and experienced IT professional specializing in a wide range of computer systems, networking, and cybersecurity. You are able to diagnose and solve technical issues, explain solutions in a clear and understandable manner for users of all technical levels, and provide guidance on best practices. You should be concise and informative, using step-by-step instructions with bullet points when appropriate. Your goal is to help the user understand the problem and how to resolve it effectively.\n</code></pre> <p></p> </li> <li> <p>After submitting the prompt, a noticeable update will appear on the right hand side pane with the details and instructions of the agent as defined by the prompt. Next you'll be asked to confirm the name of your agent and Copilot will have suggested a name.</p> <p>Either enter <code>yes</code> to accept the suggested name or enter a different name such as the following,</p> <pre><code>Contoso Tech Support Pro\n</code></pre> <p></p> <p>Reminder: Copilot questions may differ across sessions</p> <p>The Copilot conversational creation experience can vary each time where the provided questions for guidance may be slightly different than previously.</p> </li> <li> <p>The name of the agent has now been updated as seen on the right hand side pane. We're now asked to refine the instructions for the agent. The instructions on the right hand side pane is already suitable as it covers the topics we want - refer to yellow highlighted text in screenshot below. Instead, we'll expand on how it should format its response and the tone. We'll enter the following,</p> <pre><code>Concise and Informative:\n- Bullet Points: Use bullet points for clarity and to break down information into digestible parts.\n- Summarize: Provide a brief summary of the solution at the end of the explanation.\n\nUser-Friendly Communication:\n- Empathy: Show empathy and understanding of the user's frustration or confusion.\n- Encouragement: Encourage users by acknowledging their efforts and progress.\n\nInteractive and Engaging:\n- Ask for Feedback: After providing a solution, ask if the user needs further assistance or if the solution worked.\n</code></pre> <p></p> </li> <li> <p>Next we'll be asked if we want to add any publicly accessible websites or knowledge. I'll respond with <code>No</code> as we will only be adding a prompt for our declarative agent in this lab. Subsequent labs in future lessons will cover knowledge sources.</p> <p></p> </li> <li> <p>We'll then see a response from Copilot that we have now finished configuring our agent using the Copilot conversational creation experience. Click Create to provision the declarative agent for Microsoft 365 Copilot.</p> <p></p> <p>Reminder: Copilot questions may differ across sessions</p> <p>The Copilot conversational creation experience can vary each time where the provided questions for guidance may be slightly different than previously.</p> </li> <li> <p>Once the agent has been provisioned, you'll see the details of the agent which contains the description and the instructions defined during the Copilot conversational creation experience.</p> <p></p> <p>Scroll down the pane and you'll also see the capabilities of adding knowledge, enabling web search (via Bing), starter prompts and the publish details of the declarative agent for Microsoft 365 Copilot. The starter prompts will also be displayed in the test pane on the right hand side. Users can select these starter prompts to begin interacting with the agent.</p> <p></p> </li> <li> <p>In the Details section of the agent, you have the ability to change the agent icon as well. Select Edit.</p> <p></p> <p>Here you can change the icon and the background color. Select Save and then select Save again to update the details of the agent.</p> <p></p> </li> <li> <p>Let's do a quick test of the agent we've created. Select one of the Starter Prompts in the test pane on the right hand side.</p> <p></p> </li> <li> <p>Our agent will then respond. Notice how it adhered to the instructions by providing bullet points into digestible parts, and used empathy in its response.</p> <p></p> <p>If you scroll to the bottom of the message, notice how it also asked for feedback after providing a solution as instructed.</p> <p></p> </li> </ol> <p>In a few minutes you've added a declarative agent for Microsoft 365 Copilot in Copilot Studio \ud83d\ude4c\ud83c\udffb</p> <p>Next we'll learn how to add a tool to our agent, we'll create a prompt.</p>"},{"location":"recruit/03-create-a-declarative-agent-for-M365Copilot/#32-create-and-add-a-prompt-for-your-declarative-agent","title":"3.2 Create and add a prompt for your declarative agent","text":"<ol> <li> <p>Scroll down to the Tools section and select + Add tool</p> <p></p> </li> <li> <p>The Tools modal will appear and a list of Power Platform connectors is displayed. To add a Prompt, select + New tool.</p> <p></p> </li> <li> <p>A list of other tools is displayed - Prompt, Custom connector, REST API and Model Context Protocol. If your organization meets the requirements for Computer Use, this will also appear in the list. Select Prompt.</p> <p></p> </li> <li> <p>Enter a name for the prompt. Let's name our prompt <code>IT Expert</code>.</p> <p></p> </li> <li> <p>Select the chevron icon next to the Model to see the different chat models you can choose from. By default, the Basic GPT-4.1 mini model is selected and you also have the option to bring-your-own-model using Azure AI Foundry Models. We'll stick with the selected default model.</p> <p></p> </li> <li> <p>Next, we'll provide our prompt with instructions. There's 3 methods that you can choose from</p> <ul> <li>Use Copilot to generate instructions for you based on your description of what you want the prompt to do.</li> <li>Use a preset template from the prompt library to create a prompt.</li> <li>Manually enter your own instructions.</li> </ul> </li> <li> <p>Let's first try using Copilot to generate instructions based on a description entered. Enter the following into the Copilot field and submit.</p> <pre><code>I need an IT expert that can help answer questions related to networking, computer systems, user devices and anything else IT related\n</code></pre> <p></p> </li> <li> <p>Copilot will then begin to generate a prompt for us.</p> <p></p> </li> <li> <p>The Copilot generated draft instructions will then appear.</p> <p></p> </li> <li> <p>Scroll down to the bottom of the instructions and you'll see the user input parameter already defined by Copilot. You then have the option to</p> <ul> <li>Keep the draft instructions generated.</li> <li>Refresh the draft instructions using Copilot.</li> <li> <p>Clear the draft instructions.</p> <p>Clear the draft instructions by selecting the trash bin icon and we'll next try the prompt library.</p> <p></p> </li> </ul> </li> <li> <p>Select the prompt template link.</p> <p></p> </li> <li> <p>You'll see a list of prompt templates to choose from. These are from the Power Platform Prompt library.</p> <p></p> </li> <li> <p>Search for the <code>IT expert</code> prompt and select it.</p> <p></p> </li> <li> <p>The prompt will then be added as the instructions with the input parameter as defined by the prompt template. Similar to the approach we took when providing instructions for our agent during the conversational creation experience with Copilot, this prompt template outlines</p> <ul> <li>a task,</li> <li>what type of inquiries it can handle,</li> <li>and the format of its response and the goal of the prompt.</li> </ul> <p></p> </li> <li> <p>Clear the instructions and we'll next try manually entering the instructions. We'll use the IT Expert prompt from the Power Platform Prompt library. Copy and paste the prompt.</p> <pre><code>I want you to act as an IT Expert. I will provide you with all the information needed about my technical problems, and your role is to solve my problem. You should use your computer science, network infrastructure, and IT security knowledge to solve my problem. Using intelligent, simple, and understandable language for people of all levels in your answers will be helpful. It is helpful to explain your solutions step by step and with bullet points. Try to avoid too many technical details, but use them when necessary. I want you to reply with the solution, not write any explanations. My problem is [Problem]\n</code></pre> <p></p> </li> <li> <p>Next, we can define the user input parameters of our prompt. These can be text and images, and sample data to test with. There's also the capability to ground the prompt with knowledge from Dataverse tables. For this exercise, we only have one user input to define which is the problem input. This is currently a placeholder in our prompt as <code>[Problem]</code>. We'll now configure this input either by entering the <code>/</code> character or selecting +Add content and then select Text.</p> <p></p> </li> <li> <p>We can now enter a name for our input parameter and sample data.</p> <p>Enter the following as the name</p> <pre><code>problem input\n</code></pre> <p>Enter the following as the sample data</p> <pre><code>My laptop gets an error with a blue screen\n</code></pre> <p>Then select Close.</p> <p></p> </li> <li> <p>The problem input parameter will now be added to the instructions with the configured sample data. We can now test our prompt!</p> <p></p> </li> <li> <p>Select Test to the test the prompt.</p> <p></p> </li> <li> <p>The response will then display. Notice how the response provides headings with bullet points as per the instructions. Scroll down and review the remainder of the model response.</p> <p></p> </li> <li> <p>Before we save our prompt, let's learn about the settings that can be configured for this prompt. Select the ellipsis (...) icon.</p> <p></p> </li> <li> <p>Here we'll see three settings that can be configured.</p> <ul> <li>Temperature: Lower temperatures lead to predictable results, while higher temperatures allow more diverse or creative responses.</li> <li>Record retrieval: Specify the number of records retrieved for your knowledge sources.</li> <li>Include links in the response: When selected, the response includes link citations for the retrieved records.</li> </ul> <p>Select the X icon to exit from Settings.</p> <p></p> </li> <li> <p>Select Save to save the prompt.</p> <p></p> </li> <li> <p>Next, select Add to agent to add the prompt to our declarative agent.</p> <p></p> </li> <li> <p>The prompt will now appear under Tools \ud83d\ude4c\ud83c\udffb</p> <p></p> </li> </ol> <p>We'll next update our instructions to invoke the prompt and test our declarative agent.</p>"},{"location":"recruit/03-create-a-declarative-agent-for-M365Copilot/#33-update-instructions-and-test-your-declarative-agent","title":"3.3 Update instructions and test your declarative agent","text":"<ol> <li> <p>Scroll up to the Details section and select Edit. This will enable the fields to be editable.</p> <p></p> </li> <li> <p>We can now update our instructions to invoke our prompt by referencing the name of the prompt. Clear the instructions, then copy and paste the following.</p> <pre><code>- When a user asks questions about their device, run the \"IT Expert\" prompt. Use their question as the problem input of the \"IT Expert\" prompt.\n</code></pre> <p>Notice how the final sentence is instructing the agent to use the question asked by the user as the value for the problem input parameter. The agent will use the question as the problem input for the prompt. Next, select Save.</p> <p></p> </li> <li> <p>We're now ready to test our updated instructions of our declarative agent. Select the refresh icon in the test pane.</p> <p></p> </li> <li> <p>Next, enter the following prompt below and submit.</p> <pre><code>Can you help me, my laptop is encountering a blue screen\n</code></pre> <p></p> </li> <li> <p>The agent invokes the prompt and responds, with a citation to the agent.</p> <p></p> </li> </ol> <p>Let's now publish our declarative agent \ud83d\ude03</p>"},{"location":"recruit/03-create-a-declarative-agent-for-M365Copilot/#34-publish-your-declarative-agent-to-microsoft-365-copilot-and-teams","title":"3.4 Publish your declarative agent to Microsoft 365 Copilot and Teams","text":"<ol> <li> <p>Select Publish.</p> <p>Reminder: To publish a declarative agent built in Copilot Studio to Microsoft 365 Copilot and Teams, you need a Microsoft 365 Copilot user license.</p> <p></p> </li> <li> <p>A modal will appear which displays the Channels and publishing details that can be updated.</p> </li> <li> <p>Channels: The agent will be published to Microsoft 365 Copilot and Microsoft Teams.</p> </li> <li> <p>Agent app information: This is what will be displayed when the user adds the agent to Microsoft 365 Copilot or in Microsoft Teams. These are fields that can be updated as needed. For example, you can update the Short description, Long description, Developer name with your name.</p> <p>If you don't see all the fields displayed on your browser, try zooming out e.g. 75%</p> <p></p> </li> <li> <p>Select Publish. Copilot Studio will then begin publishing the agent.</p> <p></p> </li> <li> <p>When publishing is completed, we'll see the Availability options of the agent.</p> Availability option Description Share Link Copy the link to distribute it with shared users to open the agent in Microsoft 365 Copilot Show to my teammates and shared users Lets you grant access to others to participate in authoring the agent, or to security groups to grant them access to use the agent in Microsoft 365 Chat or Teams. Show to everyone in my org Submit to the tenant admin to add to the organizational catalog for all tenant users to add the agent. The agent will show under Built by your org in Microsoft 365 Copilot and in Teams Download as a .zip Download as a zip file to upload as a custom app in Teams <p></p> </li> <li> <p>Let's take a look at sharing the agent. Select Show to my teammates and shared users. A pane will appear where you can search for users you want to to share the agent with either by entering their name, an email or a security group. You can review this list anytime to edit who has access to the agent.</p> <p>There's also two checkboxes:   - Send an email invitation to new users - new users will receive an email invitation.   - Visible Built with Power Platform - agent becomes available in the Built with Power Platform section of the Teams app store.</p> <p>For more details, refer to Connect and configure an agent for Teams and Microsoft 365.</p> <p>Select Cancel or the X icon to exit from the pane.</p> <p></p> </li> <li> <p>Select Copy and in a new browser tab, paste the link.</p> <p></p> </li> <li> <p>Microsoft 365 Copilot will load and a modal will appear with the agent app details.    Notice how the developer name, the short description and long description is displayed. These are from the publishing details updated in an earlier step.</p> <p>Select Add.</p> <p></p> </li> <li> <p>Our declarative agent will load next. We can see the starter prompts to select from which quickly enables users to seek immediate help.</p> <p>Let's select the Hardware Problem prompt which will automatically prepopulate the message Copilot field. Submit the question to Copilot.</p> <p></p> </li> <li> <p>The agent will then invoke our IT Expert prompt and we'll see the model response returned as a message in our declarative agent.</p> <p></p> </li> <li> <p>But how do we know the declarative agent invoked the prompt? \ud83d\udc40 Well, here's a tip!</p> <p>You can test and debug agents in Microsoft 365 Copilot by enabling developer mode.</p> <p>Enter the following in the message Copilot field and submit.</p> <pre><code>-developer on\n</code></pre> <p>A confirmation message will appear to let you know developer mode is now enabled.</p> <p></p> </li> <li> <p>Submit the following question to invoke the prompt.</p> <pre><code>Can you help me, my laptop is encountering a blue screen\n</code></pre> <p></p> </li> <li> <p>We'll see a model response from our IT Expert prompt again returned as a message. Scroll down to the bottom of the message and a card with debug information is displayed.</p> <p>Expand Agent Debug Info by selecting it.</p> <p></p> </li> <li> <p>Here you'll find information on the agent metadata that occurred at runtime. In our use case, we'll be focusing on the Actions section</p> <ul> <li>Matched actions highlight the current status of functions found during the app's search.</li> <li>Selected actions highlight the current status of functions chosen to run based on the app's decision-making process.</li> </ul> <p>So here we can see the agent orchestrator chose to invoke the IT Expert prompt as per the instructions of our declarative agent. This is further outlined in the Executed Actions section which also tells us that it successfully invoked the prompt.</p> <p></p> </li> <li> <p>To turn off developer mode, enter the following in the message Copilot field and submit.</p> <pre><code>-developer off\n</code></pre> <p>A confirmation message will appear to let you know developer mode is disabled. Cool, now you know how to verify whether your declarative agent in Microsoft 365 Copilot invoked your prompt \ud83c\udf1e</p> <p></p> </li> <li> <p>We'll now test our agent in Microsoft Teams. Navigate to Apps using the left hand side menu and select Teams under the Apps section.</p> <p></p> </li> <li> <p>Teams will then load in a new browser tab and you'll see Microsoft 365 Copilot load by default, with the right hand side pane listing all of your available agents, including the Contoso Tech Support Pro declarative agent.</p> <p></p> </li> <li> <p>Select Apps on the left hand side menu. Either search for Contoso Tech Support Pro or scroll down and select the agent.</p> <p></p> </li> <li> <p>We'll then see our agent load. The agent can be pinned to the menu by right clicking on the app and select Pin.</p> <p></p> </li> <li> <p>Let's next test our agent. Enter the following prompt and submit.</p> <pre><code>Can you help me, my laptop is encountering a blue screen\n</code></pre> <p></p> </li> <li> <p>A model response from our prompt will then be displayed.</p> <p></p> </li> </ol> <p>In a few minutes, you've learnt how to publish your declarative agent and test it in Microsoft 365 Copilot and in Teams \ud83d\ude0a</p>"},{"location":"recruit/03-create-a-declarative-agent-for-M365Copilot/#mission-complete","title":"\u2705 Mission Complete","text":"<p>Congratulations! \ud83d\udc4f\ud83c\udffb You've built a declarative agent in Copilot Studio where you added a Prompt, instructed the agent to use the Prompt and how to test + publish your agent to Microsoft 365 Copilot and Teams.</p> <p>Your agent is now active duty\u2014ready to assist, troubleshoot, and serve internal users on-demand.</p> <p>This is the end of Lab 03 - Build a declarative agent in Microsoft Copilot Studio for Microsoft 365 Copilot, select the link below to move to the next lesson.</p> <p>\u23ed\ufe0f Move to Creating a new Solution lesson</p> <p>Until next time, stay sharp. The future of enterprise work runs through agents\u2014and now you know how to build one.</p>"},{"location":"recruit/03-create-a-declarative-agent-for-M365Copilot/#tactical-resources","title":"\ud83d\udcda Tactical Resources","text":"<p>\ud83d\udd17 Build declarative agent in Microsoft Copilot Studio for Microsoft 365 Copilot</p> <p>\ud83d\udd17 Add prompts</p> <p>\ud83d\udd17 Share agents with other users</p> <p>\ud83d\udcfa Build prompts for your agent</p> <p></p>"},{"location":"recruit/04-creating-a-solution/","title":"\ud83d\udea8 Mission 04: Creating a Solution for Your Agent","text":""},{"location":"recruit/04-creating-a-solution/#codename-operation-ctrl-alt-package","title":"\ud83d\udd75\ufe0f\u200d\u2642\ufe0f CODENAME: <code>OPERATION CTRL-ALT-PACKAGE</code>","text":"<p>\u23f1\ufe0f Operation Time Window: <code>~45 minutes</code></p>"},{"location":"recruit/04-creating-a-solution/#mission-brief","title":"\ud83c\udfaf Mission Brief","text":"<p>Agent Maker, welcome to your next tactical operation. In this mission, you\u2019ll learn to assemble a Solution - the official deployment vehicle for your IT Helpdesk Agent built with Microsoft Copilot Studio. Think of this as creating a digital briefcase that holds your agent and it's artifacts.</p> <p>Every agent needs a well-structured home. That\u2019s what a Power Platform solution provides - order, portability, and readiness for production.</p> <p>Let\u2019s pack up.</p>"},{"location":"recruit/04-creating-a-solution/#objectives","title":"\ud83d\udd0e Objectives","text":"<p>In this mission, you\u2019ll learn:</p> <ol> <li>Understanding what Power Platform solutions are and their role in agent development</li> <li>Learning the benefits of using solutions for organizing and deploying agents</li> <li>Exploring solution publishers and their importance in component management</li> <li>Understanding the Power Platform solution lifecycle from development to production</li> <li>Creating your own solution publisher and custom solution for your IT Helpdesk Agent</li> </ol>"},{"location":"recruit/04-creating-a-solution/#solution-whats-that","title":"\ud83d\udd75\ud83c\udffb\u200d\u2640\ufe0f Solution? What's that?","text":"<p>In Microsoft Power Platform, solutions are like containers or packages that hold all the parts of your apps or agents - these could be tables, forms, flows, and custom logic. Solutions are essential for Application Lifecycle Management (ALM), they enable you to manage your app and agents from idea to development, testing, deployment, and updates.</p> <p>In Copilot Studio, every agent you create is stored in a Power Platform solution. By default, agents are created in the Default solution, unless you create a new custom solution to create your agent in. This is what we'll learn \ud83e\udd13 in this lesson and in the hands-on lab.</p> <p>Solutions traditionally have been created in the Power Apps maker portal - a web based interface where you can build and customize apps, Dataverse, flows, explore AI components and more.</p> <p></p> <p>In Copilot Studio, there is now the Solution Explorer where you can manage your solutions directly. You no longer need to switch to the Power Apps maker portal to manage your solutions, it can be done right inside Copilot Studio \ud83e\ude84</p> <p>This means you can do the usual solution-related tasks:</p> <ul> <li>Create a solution - custom solutions enable agents to be exported and imported between environments.</li> <li>Set your preferred solution - choose the solution agents, apps, etc will be created in by default.</li> <li>Add or remove components - your agent could be referencing other components such as environment variables or cloud flows. Therefore these components needed to be included in the solution.</li> <li>Export solutions - to move solutions to another target environment.</li> <li>Import solutions - import solutions created elsewhere, including upgrading or updating solutions.</li> <li>Create and manage solution pipelines - automate the deployment of solutions between environments.</li> <li>Git integration - enables developers to connect solutions with Git repositories for version control, collaboration and ALM. Intended to be used in developer environments only.</li> </ul> <p></p> <p>There are two types of solutions:</p> <ul> <li>Unmanaged solutions - used during development. You can freely edit and customize as needed.</li> <li>Managed solutions - used when you're ready to deploy your app to testing or production. These are locked down to prevent accidental changes.</li> </ul>"},{"location":"recruit/04-creating-a-solution/#why-should-i-use-a-solution-for-my-agent","title":"\ud83e\udd14 Why should I use a Solution for my agent?","text":"<p>Think of Solutions as a toolbox. When you need to fix or build something (an agent) in a different location (environment), you gather all the necessary tools (components) and put them in your toolbox (Solution). You can then carry this toolbox to the new location (environment) and use the tools (components) to complete your work, or add new tools (components) to customize your agent or project you're building.</p> <p>Elaiza, your friendly cloud advocate popping in here \ud83d\ude4b\ud83c\udffb\u200d\u2640\ufe0f to share some words:</p> <p>We have a saying in New Zealand, \"Be a tidy Kiwi!\" which is a call to action for New Zealanders \ud83e\udd5d to take responsibility for their environment by disposing of litter properly and keeping public spaces clean. We can use the same context for agents by keeping everything related to your agent organized and portable, and it'll help you maintain a tidy environment.</p> <p>It's good practice to create an agent in a dedicated solution in your source (developer) environment. Here's why solutions are valuable:</p> <p>\ud83e\udde9 Organized development</p> <ul> <li> <p>You're keeping your agent separate from the Default solution which contains everything in the environment. All your agent components are in one place \ud83c\udfaf</p> </li> <li> <p>Everything you need for your agent is in a solution, making it easier to export and import to a target environment \ud83d\udc49\ud83c\udffb this is a healthy habit of ALM.</p> </li> </ul> <p>\ud83e\udde9 Safe deployment</p> <ul> <li>You can export your app or agent as a managed solution and deploy it to other target environments (such as testing or production) without risking accidental edits.</li> </ul> <p>\ud83e\udde9 Version control</p> <ul> <li> <p>You can create patches (target fixes), updates (a more comprehensive change) or upgrades (replacing a solution - usually major changes and introducing new features).</p> </li> <li> <p>Helps you roll out changes in a controlled way.</p> </li> </ul> <p>\ud83e\udde9 Dependency management</p> <ul> <li>Solutions track which parts depend on others. This prevents you from breaking things when you make changes.</li> </ul> <p>\ud83e\udde9 Team collaboration</p> <ul> <li>Developers and makers can work together using unmanaged solutions in development, then hand off a managed solution for deployment.</li> </ul>"},{"location":"recruit/04-creating-a-solution/#understanding-solution-publishers","title":"\ud83e\udeaa Understanding Solution Publishers","text":"<p>A Solution Publisher in Power Platform is like a label or brand that identifies who created or owns a solution. It\u2019s a small but important part of managing your apps, agents and flow customizations, especially when working in teams or across environments.</p> <p>When you create a solution, you must choose a publisher. This publisher defines:</p> <ul> <li> <p>A prefix that gets added to all custom components (think tables, fields, and flows).</p> </li> <li> <p>A name and contact info for the organization or person who owns the solution.</p> </li> </ul>"},{"location":"recruit/04-creating-a-solution/#why-is-it-important","title":"\ud83e\udd14 Why is it important?","text":"<ol> <li> <p>Easy identification - the prefix (Example - <code>new_</code> or <code>abc_</code>) helps you quickly identify which components belong to which solution or team.</p> </li> <li> <p>Avoids conflicts - if two teams create a column called status, their prefixes (<code>teamA_status</code>, <code>teamB_status</code>) prevent naming collisions.</p> </li> <li> <p>Supports ALM - when moving solutions between environments (Dev \u2192 Test \u2192 Prod), the publisher helps track ownership and maintain consistency.</p> </li> </ol>"},{"location":"recruit/04-creating-a-solution/#example","title":"\u2728 Example","text":"<p>Let\u2019s say you create a publisher called Contoso Solutions with the prefix <code>cts_</code>.</p> <p>If you add a custom column called Priority, it will be stored as <code>cts_Priority</code> in the solution.</p> <p>Anyone who comes across the column at a solution level regardless of what environment they're in, they can easily identify it as a column that's associated to Contoso Solutions.</p>"},{"location":"recruit/04-creating-a-solution/#power-platform-solution-lifecycle","title":"\ud83e\udded Power Platform Solution lifecycle","text":"<p>So now you understand the purpose of a Solution, let's next learn about the lifecycle.</p> <p>1. Create Solution in Development environment - start by creating a new solution in your Development environment.</p> <p>2. Add Components - add apps, flows, tables, and other elements to your solution.</p> <p>3. Export as Managed solution - package your solution for deployment by exporting it as a Managed solution.</p> <p>4. Import to Test environment - test your solution in a separate Test environment to ensure everything works as expected.</p> <p>5. Import to Production environment - deploy the tested solution to your live Production environment.</p> <p>6. Apply Patches, Updates or Upgrades - make improvements or fixes using patches, updated, or upgrades. \ud83d\udd01 Repeat the cycle!</p>"},{"location":"recruit/04-creating-a-solution/#example_1","title":"\u2728 Example","text":"<p>Imagine you're building an IT helpdesk agent to help employees with issues such as device problems, network troubleshooting, printer setup and more.</p> <ul> <li> <p>You start in a Development environment using an unmanaged solution.</p> </li> <li> <p>Once it's ready, you export it as a managed solution and import it into a target environment such as a System Test or User Acceptance Testing (UAT) environment.</p> </li> <li> <p>After testing, you move it to the Production environment - all without touching the original development version.</p> </li> </ul>"},{"location":"recruit/04-creating-a-solution/#lab-04-create-a-new-solution","title":"\ud83e\uddea Lab 04: Create a new Solution","text":"<p>We're now going to learn</p> <ul> <li>How to create a Solution publisher</li> <li>How to create a Solution</li> </ul> <p>We're going to stick with the example from earlier, where we're going to create a solution in the dedicated Copilot Studio environment to build our IT helpdesk agent in.</p> <p>Let's begin!</p>"},{"location":"recruit/04-creating-a-solution/#prerequisites","title":"Prerequisites","text":""},{"location":"recruit/04-creating-a-solution/#security-role","title":"Security role","text":"<p>In Copilot Studio, what you can do in the solution explorer depends on your user security role. If you don\u2019t have permission to manage solutions in the Power Apps admin center, you won\u2019t be able to do those tasks in Copilot Studio either.</p> <p>To make sure everything works smoothly, check that you have the right security roles and permissions. Or if you don't manage environments in your organization, ask your IT administrator (or the equivalent) team who manages your tenant/environments.</p> <p>The following are the security roles that enables users to create a solution in their environment.</p> Security role Description Environment Maker Provides the necessary permissions to create, customize, and manage resources within a specific environment, including solutions System Customizer Wider permissions than Environment Maker, including the ability to customize the environment and manage security roles System Administrator Highest level of permissions and can manage all aspects of the environment, including creating and assigning security roles"},{"location":"recruit/04-creating-a-solution/#developer-environment","title":"Developer environment","text":"<p>Make sure you switch to your dedicated developer environment, refer to Lesson 00 - Course Setup - Step 3: Create new developer.</p> <ol> <li> <p>On the upper right, select the Cog wheel icon and switch from the default environment to your environment, for example Adele Vance's environment.</p> <p></p> </li> </ol>"},{"location":"recruit/04-creating-a-solution/#41-create-a-solution-publisher","title":"4.1 Create a Solution publisher","text":"<ol> <li> <p>Using the same Copilot Studio environment used in the previous lesson, select the ellipsis icon (. . .) on the left hand side menu in Copilot Studio. Select Solutions under the Explore header.</p> <p></p> </li> <li> <p>The Solution Explorer in Copilot Studio will load. Select + New solution</p> <p></p> </li> <li> <p>The New solution pane will appear where we can define the details of our solution. First, we need to create a new publisher. Select + New publisher.</p> <p> </p> </li> <li> <p>The Properties tab of the New publisher pane will appear with required and non-required fields to be populated in the Properties tab. This is where we can outline the details of the publisher which will be used as the label or brand that identifies who created or owns the solution.</p> Property Description Required Display name Display name for the publisher Yes Name The unique name and schema name for the publisher Yes Description Outlines the purpose of the solution No Prefix Publisher prefix which will be applied to newly created components Yes Choice value prefix Generates a number based on the publisher prefix. This number is used when you add options to choices and provides an indicator of which solution was used to add the option. Yes <p>Copy and paste the following as the Display name,</p> <pre><code>Contoso Solutions\n</code></pre> <p>Copy and paste the following as the Name,</p> <pre><code>ContosoSolutions\n</code></pre> <p>Copy and paste the following as the Description,</p> <pre><code>Copilot Studio Agent Academy\n</code></pre> <p>Copy and paste the following for the Prefix,</p> <pre><code>cts\n</code></pre> <p>By default, the Choice value prefix will display an integer value. Update this integer value to the nearest thousand. For example, in my screenshot below, it was initially <code>77074</code>. Update this from <code>77074</code> to <code>77000</code>.</p> <p> </p> </li> <li> <p>If you want to provide the contact details for the Solution, select the Contact tab and populate the following columns displayed.</p> <p></p> </li> <li> <p>Select the Properties tab and select Save to create the Publisher.</p> <p></p> </li> <li> <p>The New publisher pane will close and you'll be brought back to the New solution pane with the newly created Publisher selected.</p> <p> </p> </li> </ol> <p>High five, you've now created a Solution Publisher! \ud83d\ude4c\ud83c\udffb We'll next learn how to create a new custom solution.</p>"},{"location":"recruit/04-creating-a-solution/#42-create-a-new-solution","title":"4.2 Create a new Solution","text":"<ol> <li> <p>Now that we've created our solutions, we can now complete the rest of the form in the New solution pane.</p> <p>Copy and paste the following as the Display name,</p> <pre><code>Contoso Helpdesk Agent\n</code></pre> <p>Copy and paste the following as the Name,</p> <pre><code>ContosoHelpdeskAgent\n</code></pre> <p>Since we're creating a new solution, the Version number by default will be <code>1.0.0.0</code>.</p> <p>Tick the Set as your preferred solution checkbox.</p> <p> </p> </li> <li> <p>Expand the More options to see additional details that can be provided in a solution.</p> <p></p> </li> <li> <p>You'll see the following,</p> <ul> <li> <p>Installed on - the date of when the Solution was installed.</p> </li> <li> <p>Configuration page - developers set up an HTML web resource to help users interact with their app, agent or tool where it'll appear as a web page in the Information section with instructions or buttons. It\u2019s mostly used by companies or developers who build and share solutions with others.</p> </li> <li> <p>Description - describes the solution or a high level description of the configuration page.</p> </li> </ul> <p>We'll leave these blank for this lab.</p> <p>Select Create.</p> <p></p> </li> <li> <p>The solution for Contoso Helpdesk Agent has now been created. There will be zero components until we create an agent in Copilot Studio.</p> <p>Select the back arrow icon to return to the Solution Explorer.</p> <p></p> </li> <li> <p>Notice how the Contoso Helpdesk Agent now displays as the Current preferred solution since we ticked the Set as your preferred solution checkbox earlier.</p> <p></p> </li> </ol>"},{"location":"recruit/04-creating-a-solution/#mission-complete","title":"\u2705 Mission Complete","text":"<p>Congratulations! \ud83d\udc4f\ud83c\udffb You've created a Publisher and used it in your newly created Solution to build your agent in!</p> <p>Well done, Agent Maker. A tidy digital footprint is the first step toward operability at scale. Now you have the tools and the mindset for sustainable, enterprise-ready agent development.</p> <p>This is the end of Lab 04 - Creating a Solution, select the link below to move to the next lesson. Your solution created in this lab will be used in the next lesson's lab.</p> <p>\u23ed\ufe0f Move to Get started quickly with pre-built agents lesson</p>"},{"location":"recruit/04-creating-a-solution/#tactical-resources","title":"\ud83d\udcda Tactical Resources","text":"<p>\ud83d\udd17 Create a solution</p> <p>\ud83d\udd17 Create and manage solutions in Copilot Studio</p> <p>\ud83d\udd17 Share agents with other users</p> <p>\ud83d\udd17 Summary of resources available to predefined security roles</p> <p>\ud83d\udd17 Upgrade or update a solution</p> <p>\ud83d\udd17 Overview of pipelines in Power Platform</p> <p>\ud83d\udd17 Overview of Git integration in Power Platform</p> <p></p>"},{"location":"recruit/05-using-prebuilt-agents/","title":"\ud83e\uddf0 Mission 05: Using a Pre-Built Agent","text":""},{"location":"recruit/05-using-prebuilt-agents/#codename-operation-safe-travels","title":"\ud83d\udd75\ufe0f\u200d\u2642\ufe0f CODENAME: <code>OPERATION SAFE TRAVELS</code>","text":"<p>\u23f1\ufe0f Operation Time Window: <code>~30 minutes</code></p>"},{"location":"recruit/05-using-prebuilt-agents/#mission-brief","title":"\ud83c\udfaf Mission Brief","text":"<p>Welcome to your next mission in the Copilot Studio Agent Academy. You're about to explore the world of pre-built agents\u2014intelligent, purpose-driven agents created by Microsoft to accelerate your deployment and reduce time to value.</p> <p>Rather than building from scratch, pre-built agents (also called agent templates) give you a head start by providing ready-to-use scenarios that you can customize and deploy in minutes.</p> <p>In this mission, you\u2019ll deploy the Safe Travels agent\u2014an agent that helps your users prepare for business travel, understand company policies, and streamline planning.</p>"},{"location":"recruit/05-using-prebuilt-agents/#objectives","title":"\ud83e\udded Objectives","text":"<p>Your goals for this mission are:</p> <ol> <li>Understand what pre-built agents are and why they matter  </li> <li>Deploy the Safe Travels agent template  </li> <li>Customize the agent\u2019s responses and content  </li> <li>Test and publish the agent  </li> </ol>"},{"location":"recruit/05-using-prebuilt-agents/#what-are-pre-built-agents","title":"\ud83e\udde0 What Are Pre-Built Agents?","text":"<p>Pre-built agents are turnkey AI agents created by Microsoft that:</p> <ul> <li>Address common business needs (like travel, HR, IT support)</li> <li>Include fully functioning topics, trigger phrases, instructions and sample knowledge.</li> <li>Can be edited, extended, and grounded with your own data</li> </ul> <p>These agents are perfect for getting started quickly or learning how agents are structured.</p>"},{"location":"recruit/05-using-prebuilt-agents/#step-by-step-instructions","title":"\ud83d\udee0\ufe0f Step-by-Step Instructions","text":""},{"location":"recruit/05-using-prebuilt-agents/#step-1-launch-copilot-studio","title":"Step 1: Launch Copilot Studio","text":"<ol> <li>Navigate to https://copilotstudio.microsoft.com</li> <li>Sign in with your Microsoft 365 work or school account</li> </ol> <p>Warning</p> <p>You must be in a tenant where Copilot Studio is enabled. If you don\u2019t see Copilot Studio, revisit Mission 00 to complete your setup.</p>"},{"location":"recruit/05-using-prebuilt-agents/#step-2-choose-the-safe-travels-agent-template","title":"Step 2: Choose the Safe Travels Agent Template","text":"<ol> <li>From the Copilot Studio homepage, click + Create </li> <li>Scroll down to the Start with an agent template section</li> <li>Find and select Safe Travels </li> <li>Notice that the template comes pre-loaded with a description, instructions and knowledge. </li> <li>Click Create </li> </ol> <p>This will create a new agent in your environment based on the Safe Travels configuration.</p>"},{"location":"recruit/05-using-prebuilt-agents/#step-3-customize-the-agent","title":"Step 3: Customize the Agent","text":"<p>Now that the agent is created, let\u2019s tailor it to your organization:</p> <ol> <li>Select Enabled generative AI to turn on the generative AI feature so that it can use the instructions provided in the template. </li> <li>Now we'll equip the agent with an additional knowledge source so it can answer questions about Europe travel. To do this, scroll down to the knowledge section and select Add knowledge </li> <li>Select Public websites </li> <li>In the text input, paste https://european-union.europa.eu/ and select Add </li> <li>Select Add to agent </li> </ol>"},{"location":"recruit/05-using-prebuilt-agents/#step-4-test-and-publish","title":"Step 4: Test and Publish","text":"<ol> <li>Click Test in the top-right to launch the test window  </li> <li>Try phrases like:</li> <li>\u201cDo I need a visa to travel from the US to Amsterdam?\u201d</li> <li>\u201cHow long does it take to get a US Passport?\u201d</li> <li>\u201cWhere is the closest US embassy in Valencia, Spain?\u201d</li> <li>Confirm the agent responds with accurate and helpful information and observe the Activity Map to see where it retrieved the information. </li> <li>When ready, click Publish </li> <li>Select Publish again in the dialog box </li> <li>Optionally, add the agent to Microsoft Teams using the built-in Channels feature</li> </ol>"},{"location":"recruit/05-using-prebuilt-agents/#mission-complete","title":"\u2705 Mission Complete","text":"<p>You've now successfully:</p> <ul> <li>Deployed a Microsoft pre-built agent  </li> <li>Customized the agent</li> <li>Tested and published your own version of the Safe Travels agent template</li> </ul> <p>\ud83e\uddf3 Bonus Objective</p> <p>Try grounding the Safe Travels agent with a SharePoint site or FAQ file to make it more relevant to your company\u2019s travel policies.</p> <p>Your next mission will focus on creating a custom agent from scratch.</p> <p></p>"},{"location":"recruit/06-create-agent-from-conversation/","title":"\ud83d\udea8 Mission 06: Create a custom agent using natural language with Copilot and grounding it with your data","text":""},{"location":"recruit/06-create-agent-from-conversation/#codename-operation-agent-forge","title":"\ud83d\udd75\ufe0f\u200d\u2642\ufe0f CODENAME: <code>OPERATION AGENT FORGE</code>","text":"<p>\u23f1\ufe0f Operation Time Window: <code>~75 minutes</code></p>"},{"location":"recruit/06-create-agent-from-conversation/#mission-brief","title":"\ud83c\udfaf Mission Brief","text":"<p>Welcome back, Agent Maker. This mission puts you in the command seat of the most powerful capability in Copilot Studio - creating a custom agent from scratch using only natural language\u2026 and supercharging it with your own data.</p> <p>This isn\u2019t just another chatbot. You\u2019re building a knowledge empowered digital coworker - one that can reason, respond, and reference real enterprise info.</p> <p>Your weapon of choice? Natural language. Your mission? Design, train, and test a fully customized helpdesk agent that answers IT questions using SharePoint, uploaded files, or company URLs.</p> <p>Let\u2019s build your agent from the ground up.</p>"},{"location":"recruit/06-create-agent-from-conversation/#objectives","title":"\ud83d\udd0e Objectives","text":"<p>In this mission, you\u2019ll learn:</p> <ol> <li>Understanding what custom agents are and how they differ from pre-built templates</li> <li>Creating agents using natural language prompts and conversational design with Copilot</li> <li>Grounding agents with enterprise knowledge sources including SharePoint, documents, and websites</li> <li>Learning about generative orchestration and how agents dynamically search and respond using multiple data sources</li> <li>Building and testing a fully functional IT helpdesk agent that can answer questions from your own data</li> </ol>"},{"location":"recruit/06-create-agent-from-conversation/#what-is-a-custom-agent","title":"\ud83e\udd14 What is a custom agent?","text":"<p>A custom agent is a chatbot or virtual assistant that you create and design in Copilot Studio to help users with specific tasks or questions. It's called custom because:</p> <ul> <li>You decide the purpose - help users request vacation time, check order status, provide assistance with IT related questions.</li> <li>You define the conversation - what the agent says and how it should respond.</li> <li>You ground it with your own data  - connect to your enterprise data through the built-in supported knowledge resources.</li> <li>You connect it to your own systems or applications -  choose from connectors, flows, REST APIs and model context protocol servers.</li> </ul> <p>Note</p> <p>Think of it this way: you are building your own digital helper that can talk to users and complete tasks for them such as answering questions, collecting information required by a process, or connecting to your enterprise data.</p>"},{"location":"recruit/06-create-agent-from-conversation/#what-can-a-custom-agent-do","title":"\ud83e\udd16 What can a custom agent do?","text":"<p>A custom agent can fulfill the following:</p> <ul> <li>Ask users for information such as names, dates, or preferences.</li> <li>Save that information to a database or table.</li> <li>Look up data based on the questions asked and answer them.</li> <li>Work autonomously without users directly interacting with the agent.</li> <li>Trigger actions either on-demand through direct user interaction or autonomously such as sending emails or creating records.</li> </ul>"},{"location":"recruit/06-create-agent-from-conversation/#why-use-a-custom-agent","title":"\ud83d\udc69\ud83c\udffb\u200d\ud83d\udcbb  Why use a custom agent?","text":"<ul> <li>Saves time by automating repetitive tasks.</li> <li>Gives users a friendly, guided experience.</li> <li>Tailor it to your business or project needs.</li> </ul>"},{"location":"recruit/06-create-agent-from-conversation/#example","title":"\u2728 Example","text":"<p>You build a custom agent that helps employees request vacation leave.</p> <p>It asks for their name, vacation dates, and their manager\u2019s name, then saves the information into the designated system that managed vacation requests, such as a SharePoint list.</p> <p>Now, instead of navigating to the SharePoint list and creating a new item, employees simply chat with the agent instead.</p>"},{"location":"recruit/06-create-agent-from-conversation/#use-natural-language-to-create-agents","title":"\ud83d\udde3\ufe0f Use natural language to create agents","text":"<p>Previously you learnt how to quickly build agents in Copilot Studio using prebuilt agent templates in Lesson 05 - Get started quickly with pre-built agents. In this lesson, we'll dive into the conversational creation experience with Copilot. Copilot Studio makes it easy to build agents by chatting with Copilot, just like having a conversation.</p> <p>In Copilot Studio, you don\u2019t need to write code to create an agent. Instead, you describe what you want your agent to do in plain language, and Copilot helps you build it step by step through a chat-like experience.</p>"},{"location":"recruit/06-create-agent-from-conversation/#but-im-new-to-describing-what-i-want-what-do-i-do","title":"\ud83c\udf31 But I'm new to \"describing what I want\" - what do I do?","text":"<p>Describing in natural language to create a custom agent might be a new concept for you. Whenever you use Copilot across Microsoft products and services, you are using natural language in the form of a prompt.</p> <p>A prompt is the message or instruction you give to an AI agent to tell it what you want it to do. Think of it as giving directions to an assistant. The clearer your instructions are, the easier it is for your assistant to understand and act on them.</p>"},{"location":"recruit/06-create-agent-from-conversation/#why-prompts-matter","title":"\ud83e\ude84 Why Prompts matter","text":"<ul> <li>They guide the agent\u2019s behavior.</li> <li>They help the agent understand what kind of conversation to have.</li> <li>A good prompt makes the agent more helpful and accurate.</li> </ul>"},{"location":"recruit/06-create-agent-from-conversation/#tips-for-writing-a-good-prompt","title":"\ud83d\udcdd Tips for writing a good prompt","text":"<ul> <li>Be clear and specific - say exactly what you want the agent to do.</li> <li>Think like the user - what will the user say? What should the agent reply?</li> <li>Include examples - if possible, give a sample interaction.</li> </ul>"},{"location":"recruit/06-create-agent-from-conversation/#example_1","title":"\u2728 Example","text":"<p>Let's say the HR team needs an agent to help with vacation requests.</p> <p>The prompt could be,</p> <pre><code>\u201cI want to build an agent that helps users submit a vacation request. When a user says they want to request time off, the agent should ask for their name, the start date of their vacation, the end date of their vacation, and their manager\u2019s name. Once the user provides this information, the agent should save it to a SharePoint list called \u2018Vacation Requests\u2019 and post a notification in a dedicated Microsoft Teams channel.\u201d\n</code></pre> <p>Why this prompt works:</p> <ul> <li>Clearly states the goal - submit a vacation request</li> <li>Describes the user interaction - what the user says and what the agent should ask</li> <li>Lists the required data - name, start date, end date, manager</li> <li>Mentions where the data goes - a SharePoint list called Vacation Requests</li> </ul>"},{"location":"recruit/06-create-agent-from-conversation/#ok-ive-created-my-agent-how-do-i-next-ground-it-with-knowledge","title":"\ud83d\udd2e OK, I've created my agent... how do I next ground it with knowledge?","text":"<p>In Copilot Studio, knowledge sources are places where your agent can find information to give better answers. When you add these sources, your agent can pull in your enterprise data from places like Power Platform, Dynamics 365, websites, and other systems or services your company uses.</p> <p>These sources work together with AI to help your agent respond more accurately to user questions, this is achieved through what is known as generative orchestration.</p>"},{"location":"recruit/06-create-agent-from-conversation/#what-is-generative-orchestration-in-the-context-of-agents","title":"\ud83c\udf3f What is generative orchestration in the context of agents?","text":"<p>Generative orchestration means the agent uses AI to dynamically decide how to answer a question by combining its built-in language skills with information from your added knowledge sources.</p> <p>When a user asks a question, the agent:</p> <ul> <li>Understands the question using AI.</li> <li>Can ask users for missing information by generating questions on the fly.</li> <li>Selects the most relevant knowledge sources.</li> <li>Searches those sources for answers.</li> <li>Generates a natural, helpful response using the information it found.</li> </ul>"},{"location":"recruit/06-create-agent-from-conversation/#why-knowledge-sources-matter","title":"\ud83c\udfe6 Why knowledge sources matter?","text":"<ol> <li> <p>Smarter answers - when you add knowledge sources, your agent can give better, more accurate answers using real data from your organization.</p> </li> <li> <p>Less manual work - you don\u2019t have to write every possible response. The agent can search through your added sources and respond automatically.</p> </li> <li> <p>Use trusted information - your agent can pull answers from systems you already use such as Dataverse, SharePoint, or company websites so that users have reliable information from a source of truth.</p> </li> <li> <p>Works with generative AI - knowledge sources and AI help your agent understand questions and respond naturally, even if the question wasn't pre-programmed or added as a starter prompt.</p> </li> <li> <p>Flexible and expandable - you can add knowledge sources anytime during set up or at later point in time, your agent grows smarter as your needs change.</p> </li> </ol>"},{"location":"recruit/06-create-agent-from-conversation/#example_2","title":"\u2728 Example","text":"<p>Imagine you build an agent to help employees with HR questions. You add your company\u2019s HR policy document and SharePoint site as knowledge sources.</p> <p>When an employee asks, \u201cHow many vacation days am I entitled to?\u201d, the agent uses generative orchestration to search those sources and reply with the correct policy without you having to write that answer manually. This saves you time in having to account for every possible question an employee may ask regarding their entitlements.</p>"},{"location":"recruit/06-create-agent-from-conversation/#types-of-knowledge-sources-that-can-be-added","title":"Types of knowledge sources that can be added","text":"<ol> <li> <p>Public websites</p> <ul> <li>What it does: Searches specific websites (like your company\u2019s site) using Bing.</li> <li>Why it\u2019s useful: Great for pulling in public-facing info like FAQs or product details.</li> </ul> </li> <li> <p>Documents</p> <ul> <li>What it does: Uses documents that you upload directly to your agent, such as PDFs or Word files. These uploaded files are stored securely in Dataverse.</li> <li>Why it's useful: Enables your agent to answer questions based on internal guides, manuals or policies.</li> </ul> </li> <li> <p>SharePoint</p> <ul> <li>What it does: Connects to SharePoint folders or files using Microsoft Graph Search.</li> <li>Why it's useful: Ideal for accessing team documents, HR policies, or project files stored in SharePoint.</li> </ul> </li> <li> <p>Dataverse</p> <ul> <li>What it does: Uses structured data from your Dataverse environment tables and rows, and can apply synonyms and glossary definitions for tables and columns for improving agent responses.</li> <li>Why it's useful: When you need to look up enterprise data stored in Dataverse such as customer information.</li> </ul> </li> <li> <p>Real-time knowledge with connectors</p> <ul> <li>What it does: Lets your agent access live data from other enterprise systems such as Salesforce, ServiceNow, Dynamics 365, AzureSQL, Databricks, and more during a conversation, using the user's own permissions.</li> <li>Why it's useful: It provides up to date, secure, and accurate responses without storing or duplicating data, making your agent smarter and safer.</li> </ul> </li> <li> <p>Azure AI Search</p> <ul> <li>What it does: Allows your agent to search through large sets of documents stored in Azure using semantic and vector search to understand user questions.</li> <li>Why it's useful: Delivers accurate, trustworthy answers from complex data sources, supports citations, and scales well for large document collections with secure access controls.</li> </ul> </li> </ol>"},{"location":"recruit/06-create-agent-from-conversation/#note-on-security","title":"\ud83d\udd12 Note on security","text":""},{"location":"recruit/06-create-agent-from-conversation/#knowledge-source-authentication","title":"Knowledge source authentication","text":"<p>Some sources such as SharePoint and Dataverse require user authentication. This means the agent will only reference data in its response that the user is allowed to see. Whereas other sources may have additional configuration required for the agent to connect to it such as Azure AI Search which requires an Azure account and specifying an authentication type.</p>"},{"location":"recruit/06-create-agent-from-conversation/#improving-your-agents-responses-in-copilot-studio","title":"Improving your agent's responses in Copilot Studio","text":"<p>After your agent is provisioned from the conversational creation experience, you'll want to test your agent against the instructions Copilot generated from your prompt. Improving your agent\u2019s responses in Copilot Studio is all about making sure it understands your goals clearly and has the right information to work with.</p> <ol> <li> <p>Refine the agent instructions - this is where you tell your agent how it should behave. Use clear, specific language.</p> <p>For example:</p> <p>\u2705 \u201cAct like a friendly customer support agent who explains things simply.\u201d</p> <p>\u274c \u201cBe helpful.\u201d (Too vague)</p> </li> <li> <p>Check the tone and language - make sure the agent\u2019s tone matches your audience.</p> <p>You can set it to be:</p> <ul> <li>Friendly and casual.</li> <li>Professional and concise.</li> <li>Supportive and patient.</li> </ul> </li> <li> <p>Add or update knowledge sources - if your agent needs to answer questions about a topic, make sure it has access to the right information.</p> <ul> <li>Add links to websites, documents, or FAQs.</li> <li>Keep the content up to date.</li> <li>Use clear, well-structured information.</li> </ul> </li> <li> <p>Use Topics and Triggers - If your agent needs to handle specific tasks or conversations, you can create topics with trigger phrases. This helps guide the conversation more precisely. We'll learn more about this in the following lesson.</p> </li> <li> <p>Test with real questions - try asking your agent the kinds of questions users might ask.</p> <p>If the answers aren\u2019t great:</p> <ul> <li>Adjust the system instructions.</li> <li>Add more examples or knowledge.</li> <li>Rephrase your questions to see how it responds.</li> </ul> </li> <li> <p>Review and iterate - improving an agent is an ongoing process!</p> <p>After publishing:</p> <ul> <li>Collect feedback from users.</li> <li>Watch for common questions or confusion.</li> <li>Keep refining the agent\u2019s setup.</li> </ul> </li> </ol>"},{"location":"recruit/06-create-agent-from-conversation/#lab-06-create-a-custom-agent-in-copilot-studio","title":"\ud83e\uddea Lab 06: Create a custom agent in Copilot Studio","text":"<p>We're now going to learn how to create a custom agent that can chat over your data</p> <ul> <li>6.1 Use natural language to create an agent with Copilot</li> <li>6.2 Add an internal knowledge source using a SharePoint site</li> <li>6.3 Add an internal knowledge source by uploading a document</li> <li>6.4 Test agent</li> </ul>"},{"location":"recruit/06-create-agent-from-conversation/#use-case","title":"\u2728 Use case","text":"<p>We'll use the same use case from Lesson 03 - Create a declarative agent for Microsoft 365 Copilot</p> <p>As an employee</p> <p>I want to get quick and accurate help from the IT helpdesk agent for issues like device problems, network troubleshooting, printer setup</p> <p>So that I can stay productive and resolve technical issues without delays</p> <p>Let's begin!</p>"},{"location":"recruit/06-create-agent-from-conversation/#prerequisites","title":"\u2728 Prerequisites","text":"<ul> <li>SharePoint site</li> </ul> <p>We'll be using the Contoso IT SharePoint site from Lesson 00 - Course Setup - Step 3: Create new SharePoint site.</p> <p>If you have not set up the Contoso IT SharePoint site, please head back to Lesson 00 - Course Setup - Step 3: Create new SharePoint site.</p> <ul> <li>Solution</li> </ul> <p>We'll be using the Contoso Helpdesk Agent solution from Lesson 04 - Creating a Solution for your agent.</p> <p>If you have not set up the Contoso Agent solution, please head back to Lesson 04 - Creating a Solution for your agent.</p>"},{"location":"recruit/06-create-agent-from-conversation/#61-use-natural-language-to-create-an-agent-with-copilot","title":"6.1 Use natural language to create an agent with Copilot","text":"<p>Copilot questions may differ across sessions</p> <p>The Copilot conversational creation experience can vary each time where the provided questions for guidance may be slightly different than previously.</p> <ol> <li> <p>Navigate to the Home page of Copilot Studio and in the field, enter the following prompt which describes the IT help desk agent. The prompt includes the goal of the agent, the context, the expected tasks and format of the agent's response.</p> <pre><code>You are an IT help desk agent. Your goal is to assist users with their IT issues. You can access information from our company's knowledge base at https://support.microsoft.com/en-us. Your responses should be polite and helpful. If a user reports a slow computer, ask about the age of the device, current software versions, and if they've recently installed any new programs. If a user is experiencing trouble logging into their email, guide them through password reset procedures. You should be concise and informative, using step-by-step instructions with bullet points when appropriate.\n</code></pre> <p></p> </li> <li> <p>The conversational creation experience with Copilot will next load. You'll see Copilot is in progress of responding to you.</p> <p></p> </li> <li> <p>Copilot confirms the agent has been set up with the instructions provided, and is asking for confirmation on the name of the agent. We'll ask Copilot to name our agent as,</p> <pre><code>Contoso Helpdesk Agent\n</code></pre> <p></p> </li> <li> <p>Copilot performs the request and we'll see that the name of the agent has been updated in the agent pane. Copilot next asks us to refine the instructions. It's asking how we should respond to particular issues and we'll request that it acknowledges the issue, provide examples of topics to answer, and format the response as bullet points.</p> <p>Copy and paste the following, and submit the request to Copilot.</p> <pre><code>Prioritize urgent requests. Examples of IT issues or scenarios to help with: device problems, network connectivity, log in issues. When troubleshooting, first acknowledge their issue and respond with empathy, then provide step by step guidance using bullet points and ask if they require further assistance.\n</code></pre> <p></p> </li> <li> <p>The instructions of the agent will be updated after Copilot has received the request. Notice how on the right hand side pane, that starter prompts have now appeared. These were formed based on our instructions.</p> <p>Next, Copilot is asking for public websites to ground the agent's knowledge.</p> <p>Copy and paste the following, and submit the request to Copilot.</p> <pre><code>https://support.microsoft.com\n</code></pre> <p></p> </li> <li> <p>The public website will be added as a knowledge source. Copilot is asking if additional knowledge sources are to be added. We don't need to add additional public websites.</p> <p>Copy and paste the following, and submit the request to Copilot.</p> <pre><code>Proceed with setup\n</code></pre> <p></p> </li> <li> <p>Copilot confirms the setup of our Contoso Helpdesk Agent is complete but we'll add one more modification, we're going to request that our agent does not answer HR related questions. This lets our agent know that it should not answer HR related questions asked by users.</p> <p>Copy and paste the following, and submit the request to Copilot.</p> <pre><code>Do not provide assistance to questions related to HR, examples are: What is my vacation leave balance? How many sick days do I have? What's the URL to our payroll portal? \n</code></pre> <p></p> </li> <li> <p>The instructions will be updated to not provide assistance with questions related to HR. We don't need to make further updates, our agent is ready to be created.</p> <p></p> </li> <li> <p>Before we create our agent, let's do a couple of things.</p> <p>First, select the Configure tab to view the agent details defined from our conversation with Copilot. This is where you'll see the Name, Description, Instructions, Knowledge and Suggested/Starter prompts.</p> <p></p> </li> <li> <p>Secondly, let's test our agent. Copy and paste the following, and submit the question to our agent.</p> <pre><code>How can I check the warranty status of my Surface?\n</code></pre> <p></p> </li> <li> <p>The response to the question will then display where the answers are in the format of a step-by-step guide using bullet points. Great, our agent works! \ud83d\ude4c\ud83c\udffb</p> <p></p> </li> <li> <p>Lastly, we'll double check the solution that our agent will be created in, is the solution we created and selected as the preferred solution in Lesson 04 - Create a new solution.</p> <p>Select the ellipsis icon (...) and select Update Advanced Settings.</p> <p></p> </li> <li> <p>The Advanced Settings modal will appear and we can see our solution created from earlier is selected by default. This is due to selecting our solution as the preferred solution in Lesson 04 - Create a new solution.</p> <p>Select Cancel.</p> <p></p> </li> <li> <p>Let's now create our custom agent! Select Create.</p> <p></p> </li> <li> <p>Copilot Studio will begin provisioning our agent.</p> <p></p> </li> <li> <p>Once our agent has been provisioned, we can see the details of the agent reflect what we requested during our Copilot conversational creation experience. Scroll down to review the agent where you'll see the name, description, instructions, the knowledge sources and the suggested prompts. The orchestration mode is enabled by default and the default model is used for the response model of the agent.</p> <p></p> <p></p> <p></p> </li> <li> <p>Let's now test our newly created agent. In the Test pane on the right hand side, select the Activity Map icon.</p> <p></p> </li> <li> <p>Enter the following question in the Test pane.</p> <pre><code>How do I find my Windows 11 product key?\n</code></pre> <p></p> </li> <li> <p>The Activity map will then load which shows us in real-time what path the agent is processing. In this scenario, our agent has understood the question and searches the knowledge sources. Currently we have one source which is the public website we added earlier using Copilot, which is what the agent is reviewing.</p> <p></p> </li> <li> <p>Our agent then responds with answers that are outlined as bullet points, as defined in the instructions. The response has references to the web pages that the agent formed its response from. This enables users to verify the source of the answer.</p> <p></p> </li> <li> <p>You can also review the response and its sources by scrolling down the Knowledge modal in the Activity map.</p> <p></p> </li> </ol> <p>Congratulations! You've built your first custom agent with Copilot in Copilot Studio \ud83d\ude4c\ud83c\udffb</p>"},{"location":"recruit/06-create-agent-from-conversation/#62-add-an-internal-knowledge-source-using-a-sharepoint-site","title":"6.2 Add an internal knowledge source using a SharePoint site","text":"<p>Previously with Copilot, we added a public website as an external knowledge source for our agent during the conversational creation experience. We're now going to add an internal knowledge source using a SharePoint site. This will be the SharePoint site you created during Lesson 00 - Course Setup.</p> <ol> <li> <p>Select + Add knowledge.</p> <p></p> </li> <li> <p>Select SharePoint.</p> <p></p> </li> <li> <p>Paste in the address of the SharePoint site created in Lesson 00 - Course Setup in the SharePoint URL field and select Add.</p> <p></p> </li> <li> <p>Update the name of the SharePoint site to <code>Contoso IT</code> and select Add.</p> <p></p> </li> <li> <p>The SharePoint site has now been added as a knowledge source with a status of Ready. The Status column will show whether the knowledge source has been loaded/connected to successfully, or if there is an issue.</p> <p></p> </li> </ol>"},{"location":"recruit/06-create-agent-from-conversation/#63-add-an-internal-knowledge-source-by-uploading-a-document","title":"6.3 Add an internal knowledge source by uploading a document","text":"<p>We'll now add another internal knowledge source by uploading a document directly to our agent.</p> <ol> <li> <p>Select Add knowledge.</p> <p></p> </li> <li> <p>Select Upload file or Select to browse.</p> <p></p> </li> <li> <p>Download this sample file and select it in your File Explorer. Select Open.</p> <p></p> </li> <li> <p>The file has been selected for upload. Select Add to agent next.</p> <p></p> </li> <li> <p>The document will be in the process of being added to the agent. Wait until the upload has completed, do not close the browser window. The status of the document will initially show as In progress, wait until the status has been updated to Ready before testing your agent.</p> <p></p> </li> </ol> <p>Let's now test our agent!</p>"},{"location":"recruit/06-create-agent-from-conversation/#64-test-agent","title":"6.4 Test agent","text":"<p>We'll test our three knowledge sources by asking questions to our Contoso Helpdesk Agent.</p> <ol> <li> <p>Select the refresh icon in the test pane, followed by selecting the activity map icon.</p> <p></p> </li> <li> <p>Enter the following question to test our public website (external) knowledge source.</p> <pre><code>How can I find the serial number on my Surface device?\n</code></pre> <p></p> </li> <li> <p>You'll next see the agent reviewing the knowledge sources and providing a response using the website knowledge source.</p> <p></p> </li> <li> <p>A response will be returned an notice how there are references to the web page it formed its answer from. If you scroll down the knowledge modal in the activity map, you'll see the other knowledge sources the agent searched, which is the SharePoint site and the uploaded file.</p> <p>However these were not used as in the Referenced sources section, the website knowledge source was only referenced. The answer was grounded using the website knowledge source. If you select the references, you'll be directed to the web page.</p> <p></p> </li> <li> <p>Let's now test both our SharePoint site knowledge source and document knowledge source in a single message. Enter the following question.</p> <pre><code>How can I access our company Contoso VPN? How do guests connect to the Contoso Guest wifi?\n</code></pre> <p></p> </li> <li> <p>Once again you'll see the agent reviewing the three knowledge sources to generate a response to the questions our single message. The agent responds to both questions in a single message, and separately references the SharePoint page and document of where it generated its response from.</p> <p>In the knowledge modal in the activity map, you'll see the SharePoint site and document used as the reference sources. You have full visibility of what knowledge sources were used to answer both questions.</p> <p></p> </li> <li> <p>It's always good to verify the generated response is correct. Select the SharePoint site reference and the FAQs SharePoint page will load where you can scroll down to review the VPN instructions.</p> <p></p> </li> <li> <p>Next, select the document reference and a modal will appear with the text from the document that reflects the answer.</p> <p></p> </li> </ol> <p>The agent can answer multiple questions in a single message, and search the knowledge sources + reference the knowledge sources in its response. Make sure to always verify the response is correct by reviewing the references.</p>"},{"location":"recruit/06-create-agent-from-conversation/#mission-complete","title":"\u2705 Mission Complete","text":"<p>Congratulations! \ud83d\udc4f\ud83c\udffb You've learnt how to use natural language to create your own custom agent that can chat over your data from three different knowledge sources \ud83d\ude4c\ud83c\udffb</p> <p>This is the end of Lab 06 - Create an agent with Copilot, select the link below to move to the next lesson. Your custom agent created in this lab will be used in the next lesson's lab.</p> <p>\u23ed\ufe0f Move to Add a new Topic with trigger lesson</p> <p>Welcome to the elite. You now know how to forge digital agents that speak your language, reference your data, and support your team. Keep going\u2014your mission\u2019s just getting started.</p>"},{"location":"recruit/06-create-agent-from-conversation/#tactical-resources","title":"\ud83d\udcda Tactical Resources","text":"<p>\ud83d\udd17 Quickstart: Create and deploy an agent</p> <p>\ud83d\udd17 Create and delete agents</p> <p>\ud83d\udd17 Key concepts - Authoring agents</p> <p>\ud83d\udcfa Create a custom agent using natural language</p> <p>\ud83d\udcfa Add knowledge to your agents</p> <p></p>"},{"location":"recruit/07-add-new-topic-with-trigger/","title":"\ud83d\udea8 Mission 07: Add new topic with trigger and nodes","text":""},{"location":"recruit/07-add-new-topic-with-trigger/#codename-operation-stay-on-topic","title":"\ud83d\udd75\ufe0f\u200d\u2642\ufe0f CODENAME: <code>OPERATION STAY ON TOPIC</code>","text":"<p>\u23f1\ufe0f Operation Time Window: <code>~60 minutes</code></p>"},{"location":"recruit/07-add-new-topic-with-trigger/#mission-brief","title":"\ud83c\udfaf  Mission Brief","text":"<p>You\u2019ve built an agent. It listens, learns, and answers questions - but now it\u2019s time to get more tactical. In this mission, you\u2019ll go deep under the hood and teach your agent how to respond to specific prompts with precision.</p> <p>With Topics and Triggers, your agent can:</p> <ul> <li> <p>Recognize intent</p> </li> <li> <p>Route conversations with logic</p> </li> <li> <p>Gather and store variables</p> </li> <li> <p>Trigger flows and take action</p> </li> </ul> <p>You\u2019re not just building dialogue, you\u2019re wiring up its decision making cortex. Welcome to the Neural Nexus.</p>"},{"location":"recruit/07-add-new-topic-with-trigger/#objectives","title":"\ud83d\udd0e Objectives","text":"<p>In this mission, you\u2019ll learn:</p> <ol> <li>Understanding what topics are and their role in creating structured conversations for your agent</li> <li>Learning the anatomy of topics including trigger phrases and conversation nodes</li> <li>Exploring different types of conversation nodes and how to use Power Fx for dynamic logic</li> <li>Creating custom topics from scratch to handle specific user requests and tasks</li> <li>Building a functional topic that connects to SharePoint data using connectors and tools</li> </ol>"},{"location":"recruit/07-add-new-topic-with-trigger/#what-is-a-topic","title":"\ud83e\udd14 What is a Topic?","text":"<p>A topic is a structured conversation that helps your agent respond to specific user questions or tasks. Think of a topic as a mini-conversation or task that your agent can handle. Each topic is designed to respond to a specific user question or request.</p>"},{"location":"recruit/07-add-new-topic-with-trigger/#purpose-of-a-topic","title":"\ud83c\udf0c Purpose of a topic","text":"<p>There are three common purposes for topics based on what users need:</p> <p>Informational - answers questions such as the following:</p> <ul> <li><code>What is \u2026?</code></li> <li><code>When will \u2026?</code></li> <li><code>Why \u2026?</code></li> <li><code>Can you tell me \u2026?</code></li> </ul> <p>Task completion - helps users do something:</p> <ul> <li><code>\"I want to \u2026\"</code></li> <li><code>\"How do I \u2026?\"</code></li> <li><code>\"I need \u2026?\"</code></li> </ul> <p>Troubleshooting - solves problems:</p> <ul> <li><code>Something isn\u2019t working \u2026</code></li> <li><code>I'm encountering an error message \u2026</code></li> <li><code>I\u2019m seeing something unexpected \u2026?</code></li> </ul> <p>You can also create topics for ambiguous questions like <code>I need help</code>, which ask users for more details before continuing.</p>"},{"location":"recruit/07-add-new-topic-with-trigger/#why-are-topics-useful","title":"\ud83d\udc26 Why are topics useful?","text":"<p>Topics help you,</p> <ul> <li> <p>Organize your agent's knowledge.</p> </li> <li> <p>Make conversations feel natural.</p> </li> <li> <p>Solve user problems effectively.</p> </li> </ul>"},{"location":"recruit/07-add-new-topic-with-trigger/#types-of-topics","title":"\ud83e\udeba Types of topics","text":"<ol> <li> <p>System topics - these are built-in and handle common events such as:</p> <ul> <li>Starting a conversation</li> <li>Ending a conversation</li> <li>Handling errors</li> <li>Asking users to sign in</li> <li>Escalating to a human agent</li> </ul> </li> <li> <p>Custom topics - you create these to handle specific tasks or questions such as:</p> <ul> <li>Employee leave request</li> <li>Request new or replacement device</li> </ul> </li> </ol> <p></p>"},{"location":"recruit/07-add-new-topic-with-trigger/#anatomy-of-a-topic","title":"\ud83e\uddec Anatomy of a topic","text":"<p>Each topic usually contains the following.</p>"},{"location":"recruit/07-add-new-topic-with-trigger/#trigger-phrases","title":"\ud83d\udde3\ufe0f Trigger phrases","text":"<p>These are words or sentences users might say to start the topic.</p> <p>Examples:</p> <p>For a leave request topic, trigger phrases could be</p> <ul> <li><code>I want to take vacation leave</code></li> <li><code>Request vacation</code></li> <li><code>Apply for time off</code></li> <li><code>How do I submit a leave request?</code></li> </ul> <p>For a request device topic, trigger phrases could be</p> <ul> <li><code>I need a new device</code></li> <li><code>Can I request a device?</code></li> <li><code>Can you help me with a device request</code></li> </ul>"},{"location":"recruit/07-add-new-topic-with-trigger/#conversation-nodes","title":"\ud83d\udcac Conversation nodes","text":"<p>A topic is made up of nodes which are steps the agent follows once the topic is triggered. You connect these steps to build a conversation flow that your agent follows when interacting with users.</p> <p>Think of these as instructions or actions such as the following:</p> <ul> <li>Asking the user questions</li> <li>Sending messages</li> <li>Calling an external service such as leave management system</li> <li>Setting or checking variables</li> <li>Using conditions to branch the conversation</li> <li>Directing to another topic</li> </ul> <p></p> <p>The following are the main types of nodes you can add to an agent:</p>"},{"location":"recruit/07-add-new-topic-with-trigger/#send-a-message","title":"Send a message","text":"<ul> <li>Purpose - sends a message to the user.</li> <li>Example - <code>Thanks for your request! I'll help you with that.</code></li> </ul> <p>This node lets your agent send messages to users, which can be simple text or rich content like images, videos, cards, quick replies and adaptive cards.</p> <p>You can personalize messages using variables, add multiple message variations for variety, and even customize speech output for voice-enabled channels.</p> <p>Tip</p> <p>Think of it as a \"say something\" block that helps your agent communicate clearly and interactively with users.</p>"},{"location":"recruit/07-add-new-topic-with-trigger/#ask-a-question","title":"Ask a question","text":"<ul> <li>Purpose - asks the user a question and waits for their answer.</li> <li>Example - <code>What are your vacation dates?</code></li> </ul> <p>This node is used to ask users for specific information during a conversation and store their responses in variables for later use.</p> <p>You can customize the type of question like text input or use entities for a defined list of values a user selects from, and define how the agent should behave if the user gives an invalid answer or skips the question.</p> <p>It also supports rich content like images and quick replies, and lets you fine-tune validation, reprompting, and interruption settings to make the conversation flow smoothly.</p> <p>Tip</p> <p>Think of it as an \"ask and listen\" block that helps your agent interact with users in a structured way that you define.</p>"},{"location":"recruit/07-add-new-topic-with-trigger/#ask-with-adaptive-card","title":"Ask with adaptive card","text":"<ul> <li>Purpose - send a rich, interactive card using JSON.</li> <li>Example - a card that displays a calendar date picker for a user to select a date.</li> </ul> <p>This node shows rich, interactive cards that users can fill out and submit such as forms with text boxes, buttons, and images. It captures the user's input and stores it in variables, which your agent can use later in the conversation.</p> <p>Tip</p> <p>Think of it as a customizable \"form builder\" block that makes your agent more engaging and capable of collecting detailed information from users.</p>"},{"location":"recruit/07-add-new-topic-with-trigger/#add-a-condition","title":"Add a condition","text":"<ul> <li>Purpose - add logic to the conversation. It checks something and decides what to do next.</li> <li>Example - if the user says <code>Yes</code>, go to the next step. If <code>No</code>, end the conversation.</li> </ul> <p>This node creates decision points in your agent's conversation flow by checking if a variable meets certain criteria. Based on whether the condition is true or false, the agent follows different paths.</p> <p>Tip</p> <p>Think of it as an \"if-else\" block that helps your agent make decisions depending on user input or stored data in variables.</p>"},{"location":"recruit/07-add-new-topic-with-trigger/#variable-management","title":"Variable management","text":"<ul> <li>Purpose - stores or clears information (called variables) during the conversation.</li> <li>Example - saves the date the user selected in the Ask a question node that displays an adaptive card.</li> </ul> <p>This node lets you store and manage information during a conversation, it could be a user's name, answer, or preferences. You can use different types of variables such as text, numbers, or dates, and they can be scoped to a single topic, shared across topics (global), or even pulled from the system or environment.</p> <p>Tip</p> <p>Think of it as a \"memory box\" that helps your agent remember information and use them as the conversation continues with the user.</p>"},{"location":"recruit/07-add-new-topic-with-trigger/#topic-management","title":"Topic management","text":"<ul> <li>Purpose - moves the conversation to another topic or step within the topic, transfer the conversation, or end the topic or conversation.</li> <li>Example - redirect to a \"Leave Policy\" topic.</li> </ul> <p>This node allows your agent to jump from one topic to another without restarting the conversation, end the topic, transfer or end the conversation, or go to a different step within the same topic. It helps guide users through different parts of the conversation flow by smoothly transitioning between topics, and you can pass variables between them to keep context.</p> <p>Tip</p> <p>Think of it as a \"go to another section/step\" block that helps your agent be flexible in chatting with users.</p>"},{"location":"recruit/07-add-new-topic-with-trigger/#add-a-tool","title":"Add a tool","text":"<ul> <li>Purpose - connects to tools such as connectors, agent flows, prompts, custom search, search query, skills, model context protocol.</li> <li>Example - Agent flow executed after user submits their vacation leave request.</li> </ul> <p>This node gives your agent capabilities to interact with external systems or perform specific tasks, such as sending emails, checking weather, or accessing databases. You can add tools using built-in connectors, custom APIs, agent flows, prompts, or connect to Model Context Protocol (MCP) servers, and even graphical user interface automation for desktop apps through the computer use tool.</p> <p>Tip</p> <p>Think of tools as \"action blocks\" that give your agent superpowers to do things beyond chatting, such as calling an API, running a process, or collecting user input automatically.</p>"},{"location":"recruit/07-add-new-topic-with-trigger/#generative-answers-node","title":"Generative answers node","text":"<ul> <li>Purpose - uses a large language model to generate natural, human-like responses based on the user's question and any connected data.</li> <li>Example - uses the connected knowledge source that contains information on vacation leave entitlements to answer user questions regarding vacation requests.</li> </ul> <p>This node enables your agent to respond to user questions using information from various knowledge sources, like websites, documents, SharePoint, or custom data. It can be used as a fallback when no matching topic is found, or within a topic to provide more detailed, dynamic answers based on specific sources you've configured your agent to use.</p> <p>Tip</p> <p>Think of it as a \"smart answer block\" that helps your agent give helpful, accurate responses by searching trusted content you define.</p>"},{"location":"recruit/07-add-new-topic-with-trigger/#http-request-node","title":"HTTP request node","text":"<ul> <li>Purpose - connect your agent to external systems by sending API calls (for example <code>GET</code> or <code>POST</code>) to fetch or update data.</li> <li>Example - when a user asks for their vacation days balance, the agent performs a <code>GET</code> request to the leave management system and extracts the <code>remainingLeaveDays</code> from the API response and replies to the user with the value.</li> </ul> <p>This node lets your agent connect to external systems by sending REST API calls, like <code>GET</code> or <code>POST</code> requests. You can customize the request with headers, body content, and even use Power Fx to include dynamic data, then store the response in variables for use later in the conversation.</p> <p>Tip</p> <p>Think of it as a \"reach out and get information\" block that helps your agent talk to other services such as retrieving user details or sending data to another system.</p>"},{"location":"recruit/07-add-new-topic-with-trigger/#send-an-event","title":"Send an event","text":"<ul> <li>Purpose - lets your agent send non-message actions, such as system updates or tool triggers - to the client or channel, helping it perform tasks.</li> <li>Example - reacting to a user joining a chat by displaying a welcome a message.</li> </ul> <p>This node lets your agent send non-message actions to external systems or channels, which can then decide how to respond. You give each event a name and attach a value, which can be a simple number or text, a variable, or a Power Fx formula, and it gets sent as a JSON object.</p> <p>Tip</p> <p>Think of it as a \"silent trigger\" block that helps your agent do things behind the scenes or communicate with external tools without needing a user to say anything.</p>"},{"location":"recruit/07-add-new-topic-with-trigger/#using-power-fx-in-your-nodes","title":"\ud83c\udfcb\ud83c\udffb\u200d\u2640\ufe0f Using Power Fx in your nodes","text":"<p>In Copilot Studio, Power Fx is a low-code programming language used to add logic and dynamic behavior to your agent. It's the same language used in Microsoft Power Apps, and it's designed to be simple and Excel-like, making it easy for developers and non-developers.</p> <p></p>"},{"location":"recruit/07-add-new-topic-with-trigger/#what-power-fx-can-do-in-topics","title":"What Power Fx can do in topics","text":"<ul> <li>Set and manipulate variables<ul> <li>Example: <code>Set(userName, \"Adele Vance\")</code></li> </ul> </li> <li>Create conditions<ul> <li>Example: <code>If(score &gt; 80, \"Pass\", \"Fail\")</code></li> </ul> </li> <li>Format and transform data<ul> <li>Example: <code>Text(DateValue, \"dd/mm/yyyy\")</code></li> </ul> </li> </ul>"},{"location":"recruit/07-add-new-topic-with-trigger/#why-use-power-fx","title":"Why use Power Fx?","text":"<ul> <li> <p>Flexible: you can build logic without writing full lines of code.</p> </li> <li> <p>Familiar: if you\u2019ve used Excel formulas, it feels very similar.</p> </li> <li> <p>Powerful: it lets you personalize conversations, validate input, and control how your agent behaves based on user data.</p> </li> </ul>"},{"location":"recruit/07-add-new-topic-with-trigger/#how-do-i-create-and-edit-topics","title":"\ud83c\udfd7\ufe0f How do I create and edit topics?","text":"<p>There are two ways you can create and edit topics for your agents.</p>"},{"location":"recruit/07-add-new-topic-with-trigger/#1-create-from-blank","title":"1. Create from blank","text":"<p>This allows you to build custom conversation flows from scratch, and you can add or remove nodes as needed when editing your topic.</p> <p></p>"},{"location":"recruit/07-add-new-topic-with-trigger/#why-this-is-useful","title":"Why this is useful","text":"<ul> <li>It gives you full control over how your agent responds.</li> <li>You can customize logic using variables, Power Fx, and conditions.</li> <li>It\u2019s perfect for building tailored experiences for specific business needs.</li> </ul>"},{"location":"recruit/07-add-new-topic-with-trigger/#2-create-with-copilot","title":"2. Create with Copilot","text":"<p>This allows you to describe what you want using natural language, and Copilot will build the conversation for you. Same applies when editing your topic, use natural language and Copilot will review and modify the topic for you.</p>"},{"location":"recruit/07-add-new-topic-with-trigger/#what-copilot-supports","title":"What Copilot supports","text":"<ul> <li>Can create and edit:<ul> <li>Message nodes</li> <li>Question nodes</li> <li>Condition nodes</li> </ul> </li> <li>Doesn\u2019t support advanced settings such as how to reprompt the user if they don\u2019t respond or how to manage interruptions during a question. You can still adjust those settings manually if needed.</li> </ul>"},{"location":"recruit/07-add-new-topic-with-trigger/#why-this-is-useful_1","title":"Why this is useful","text":"<ul> <li>Speeds up development with AI assistance.</li> <li>Lets you focus on logic and user experience instead of repetitive setup.</li> <li>Makes it easier to iterate and improve conversation flows with minimal effort.</li> </ul>"},{"location":"recruit/07-add-new-topic-with-trigger/#example-prompts","title":"\u2728 Example prompts","text":"<ul> <li> <p>Create a topic</p> <ul> <li><code>Accept a user's name, age and date of birth and then repeat their responses back to them</code></li> <li><code>Collect a user's street address, state and zip code. The user should be able to retry each question up to 4 times</code></li> </ul> </li> <li> <p>Edit a topic</p> <ul> <li><code>Add a question asking for the user\u2019s date of birth</code></li> <li><code>Summarize collected info in an Adaptive Card.</code></li> </ul> </li> </ul>"},{"location":"recruit/07-add-new-topic-with-trigger/#ok-how-do-i-design-topics-for-my-agent","title":"\ud83d\udc69\ud83c\udffb\u200d\ud83c\udfa8 OK, how do I design topics for my agent?","text":""},{"location":"recruit/07-add-new-topic-with-trigger/#step-1-understand-what-users-need","title":"\ud83e\uddd9\ud83c\udffb\u200d\u2642\ufe0f Step 1 - understand what users need","text":"<p>Start by identifying common questions or tasks users will ask your agent. These could be:</p> <ul> <li>Questions that users ask often such as, <code>what's my entitlement for sick days?</code></li> <li>Common tasks users want to complete such as submitting a form</li> <li>Problems users often face such as login issues</li> </ul>"},{"location":"recruit/07-add-new-topic-with-trigger/#step-2-group-the-scenarios","title":"\ud83d\udce6 Step 2 - Group the scenarios","text":"<p>Organize the user needs into three categories based on what we learnt earlier - the purpose of a topic:</p> <ul> <li>Informational - the user wants to know something</li> <li>Task completion - the user wants to do something</li> <li>Troubleshooting - the user needs help with resolving an issue</li> </ul>"},{"location":"recruit/07-add-new-topic-with-trigger/#step-3-map-out-the-conversation","title":"\ud83d\uddfa\ufe0f Step 3 - Map out the conversation","text":"<p>Sketch a simple conversation flow of how the agent should respond</p> <ul> <li>Start with a greeting or confirmation</li> <li>Ask follow-up questions to get details</li> <li>Provide answers or perform actions</li> </ul> <p>Tip</p> <p>Keep the conversation short and focused. Only ask what's necessary.</p>"},{"location":"recruit/07-add-new-topic-with-trigger/#step-4-handle-different-conversation-types","title":"\ud83d\udd00 Step 4 - Handle different conversation types","text":"<p>Design for both:</p> <ul> <li> <p>Single-turn - one question, one answer</p> </li> <li> <p>Multi-turn - a back and forth conversation with follow-up questions</p> </li> </ul> <p>Example:</p> <ul> <li> <p>User: <code>I want to apply for vacation leave.</code></p> </li> <li> <p>Agent: <code>Sure! What date would you like your leave to start?</code></p> </li> <li> <p>User: <code>July 15th</code></p> </li> <li> <p>Agent: <code>Got it. And when will your leave end?</code></p> </li> <li> <p>User: <code>July 22nd.</code></p> </li> <li> <p>Agent: <code>Thanks! What\u2019s the reason for your leave?</code></p> </li> <li> <p>User: <code>Family vacation.</code></p> </li> <li> <p>Agent: <code>Thanks for the details. I\u2019ve submitted your leave request from July 15th to July 22nd for a family vacation. You\u2019ll get a confirmation soon.</code></p> </li> </ul>"},{"location":"recruit/07-add-new-topic-with-trigger/#step-5-use-ai-for-unexpected-questions","title":"\ud83e\udd16 Step 5 - Use AI for unexpected questions","text":"<p>Even if you've designed a topic for leave requests, users might ask questions that aren't directly covered. This is where AI features like the Conversational boosting system topic come in handy.</p> <p>This topic includes a generative answers node, which lets your agent start using connected knowledge sources right away. Any knowledge sources added at the agent level are automatically included in the generative answers node within the Conversational boosting system topic.</p>"},{"location":"recruit/07-add-new-topic-with-trigger/#example","title":"Example","text":"<ul> <li>User: <code>Can I carry over unused vacation days to next year?</code></li> </ul> <p>This question might not be part of your predefined topic flow, especially if your topic only handles submitting leave requests.</p>"},{"location":"recruit/07-add-new-topic-with-trigger/#how-ai-helps","title":"How AI helps","text":"<p>If your agent is connected to your company's HR policy documents or internal website, AI can:</p> <ul> <li>Search for the relevant leave policy</li> <li>Understand and summarize the rules</li> <li>Agent responds with: <code>According to the HR policy, you can carry over unused vacation days to the next calendar year. For more details, check the leave policy section on the HR portal.</code></li> </ul>"},{"location":"recruit/07-add-new-topic-with-trigger/#why-this-is-useful_2","title":"Why this is useful","text":"<ul> <li>You don't need to manually create a topic for every policy-related question.</li> <li>AI can pull accurate answers from trusted knowledge sources.</li> <li>It improves user experience by making the agent feel smarter and more responsive.</li> </ul>"},{"location":"recruit/07-add-new-topic-with-trigger/#step-6-test-the-topic-the-conversation-flow","title":"\ud83d\udd2c Step 6 - Test the topic, the conversation flow","text":"<p>Before publishing your topic:</p> <ul> <li>Test using real questions or real sample inputs.</li> <li>Make sure it sounds natural and helpful.</li> </ul> <p>Tip</p> <p>Apply improvements to your topic accordingly as you test, such as adding more nodes or removing nodes in-place of redirecting to another topic</p>"},{"location":"recruit/07-add-new-topic-with-trigger/#step-7-avoid-duplicating-website-content","title":"\u26a0\ufe0f Step 7 - Avoid duplicating website content","text":"<p>Don't copy what's already on your website.</p> <ul> <li>Focus on topics that users ask about often.</li> <li>Add new topics based on chat history or support requests.</li> </ul>"},{"location":"recruit/07-add-new-topic-with-trigger/#example-of-conversation-flow","title":"\u2728 Example of conversation flow","text":"<p>Below is an example of a topic that handles leave requests.</p>"},{"location":"recruit/07-add-new-topic-with-trigger/#step-1-trigger-phrase","title":"Step 1: Trigger phrase","text":"<p>User types,</p> <p><code>I want to request vacation leave</code></p>"},{"location":"recruit/07-add-new-topic-with-trigger/#step-2-agent-asks-for-details-using-an-adaptive-card","title":"Step 2: Agent asks for details using an Adaptive card","text":"<p>Agent asks,</p> <p><code>Sure! What dates would you like to take off?</code></p> <p>Adaptive card has a start date and end date calendar picker control.</p>"},{"location":"recruit/07-add-new-topic-with-trigger/#step-3-user-provides-dates","title":"Step 3: User provides dates","text":"<p>User selects start date as August 5 2025 and end date August 10 2025, and submits card. Date values are stored in the output of the adaptive card as variables.</p>"},{"location":"recruit/07-add-new-topic-with-trigger/#step-4-cloud-flow-executed","title":"Step 4: Cloud flow executed","text":"<p>A Power Automate cloud flow has been executed which creates a new request in leave management system and sends an email to notify manager of leave request.</p>"},{"location":"recruit/07-add-new-topic-with-trigger/#step-5-send-a-confirmation-message-to-the-user","title":"Step 5: Send a confirmation message to the user","text":"<p>Agent responds with,</p> <p><code>Your vacation leave request from August 5 to August 10 has been submitted. Your manager will review and get back to you shortly.</code></p>"},{"location":"recruit/07-add-new-topic-with-trigger/#lab-07-add-a-new-topic-with-conversation-nodes","title":"\ud83e\uddea Lab 07 - Add a new topic with conversation nodes","text":"<p>We're now going to learn how to add a new topic with a trigger and tools. This lab will cover creating a topic from blank so that you understand how to customize topics to your needs.</p>"},{"location":"recruit/07-add-new-topic-with-trigger/#use-case","title":"\u2728 Use case","text":"<p>As an employee</p> <p>I want to know what devices are available</p> <p>So that I have a list of available devices</p> <p>Let's begin!</p>"},{"location":"recruit/07-add-new-topic-with-trigger/#prerequisites","title":"Prerequisites","text":"<ol> <li> <p>SharePoint list</p> <p>We'll be using the Devices SharePoint list from Lesson 00 - Course Setup - Step 3: Create new SharePoint site.</p> <p>If you have not set up the Devices SharePoint list, please head back to Lesson 00 - Course Setup - Step 3: Create new SharePoint site.</p> </li> <li> <p>Contoso Helpdesk Agent</p> <p>We're going to use the same agent created previously in Lesson 06 - Create a custom agent using natural language with Copilot and grounding it with your data.</p> </li> </ol>"},{"location":"recruit/07-add-new-topic-with-trigger/#71-add-a-new-topic-from-blank","title":"7.1 Add a new topic from blank","text":"<ol> <li> <p>Select the Topics tab near the name of the agent. If you don't see it visible, select +6 and you'll see Topics listed.</p> <p></p> </li> <li> <p>The Topics tab will load and by default the Custom topics will be displayed. You can filter topics by All, Custom and System. The custom and system topics you currently see were created automatically when the agent was provisioned.</p> <p>Select + Add a topic and select From blank.</p> <p></p> </li> <li> <p>Enter a name for the topic. Copy and paste the following.</p> <pre><code>Available devices\n</code></pre> <p></p> </li> <li> <p>Enter a trigger description that outlines what the topic does. Copy and paste the following.</p> <pre><code>This topic helps users find devices that are available from our SharePoint Devices list. User can ask to see available devices and it will return a list of devices that are available which can include laptops, smartphones, accessories and more.\n</code></pre> <p></p> </li> </ol>"},{"location":"recruit/07-add-new-topic-with-trigger/#72-define-the-trigger-inputs-and-outputs","title":"7.2 Define the trigger inputs and outputs","text":"<ol> <li> <p>Next, we're going to add a new input variable that generative AI will use in its orchestration to extract the value of the device type from a user's message. Select the More ellipsis (...) in the topic and select Details to view the topic details pane.</p> <p></p> </li> <li> <p>The Topic details pane has now loaded. Select the Input tab.</p> <p></p> </li> <li> <p>Select Create a new variable.</p> <p></p> </li> <li> <p>Enter a name for the variable. Copy and paste the following.</p> <pre><code>VarDeviceType\n</code></pre> <p></p> </li> <li> <p>We now need to define our input and output variables. The following are properties that can be defined for topic inputs and outputs.</p> Field Value How will the agent fill this input? Determines how the agent fills this variable with a value before running the topic. By default it's set to Dynamically fill with the best option. Otherwise you can override an input with a value instead of asking the user Variable data type The data type of the variable. Supported data types are <code>String</code>, <code>Boolean</code>, <code>Number</code>, <code>Date</code>, <code>DateTime</code>, <code>DateTimeNoTimeZone</code>, <code>Time</code>, <code>Record</code>, <code>Table</code>, <code>Unspecified</code>, <code>From sample data</code> Display name Name of variable Identify as Entity type for the agent to capture the correct value type Description The description helps the agent automatically fill inputs before running the topic or generate questions to ask for the values <p>The How will the agent fill this input?, Variable data type and Display name can remain as-is. Update the Identify as property to User's entire response.</p> <p></p> </li> <li> <p>Copy and paste the following as the description.</p> <pre><code>List of possible values: Laptop, Desktop, Smartphone\n</code></pre> <p></p> </li> <li> <p>Next, let's define our output for the topic. Select the Output tab.</p> <p></p> </li> <li> <p>Select Create a new variable.</p> <p></p> </li> <li> <p>Update the following properties.</p> <p>Variable name - Copy and paste the following.</p> <pre><code>VarAvailableDevices\n</code></pre> <p>Variable data type - Select Table as the data type.</p> <p>Variable description - Copy and paste the following.</p> <pre><code>List of available devices by device type\n</code></pre> <p></p> </li> <li> <p>We've now completed defining the inputs and outputs of the topic. Select the X icon to exit from the Topic details pane.</p> <p></p> </li> </ol>"},{"location":"recruit/07-add-new-topic-with-trigger/#73-add-a-tool-using-a-connector","title":"7.3 Add a tool using a connector","text":"<ol> <li> <p>Let's next add a node that enables the agent to retrieve the list of devices from the Devices SharePoint list. Select the + icon below the trigger.</p> <p></p> </li> <li> <p>Select the Add a tool node, then select the Connector tab. Search for <code>Get items</code> and select the Get items SharePoint connector action.</p> <p></p> </li> <li> <p>A new connection needs to be created for the connector. Select the chevron icon and select Create new connection.</p> <p></p> </li> <li> <p>Two options will be displayed that allows you to connect directly to SharePoint Online or to an on-premises SharePoint. By default the Connect directly (cloud-services) option will be selected, which is what we'll use for our connection.</p> <p>Select Create.</p> <p></p> </li> <li> <p>Select your signed in user account.</p> <p></p> </li> <li> <p>Next, you need to confirm your user account can be used for the connection to the SharePoint connector. Select Allow access.</p> <p></p> </li> <li> <p>Select Submit for the Get items SharePoint connector action to be added as a node to the topic.</p> <p></p> </li> <li> <p>The Get items SharePoint connector action is now added to the topic. We can now begin configuring the inputs of the action. Select the ellipsis (...) icon and select Properties.</p> <p></p> </li> <li> <p>The Get items configuration pane will appear and by default, you'll see the Inputs tab. Select the Initiation tab and enter a description in the Usage Description field. Copy and paste the following.</p> <pre><code>Retrieves devices from SharePoint list\n</code></pre> <p>This will come in handy when we view the Manage your connections page of our agent. We'll return to this shortly.</p> <p></p> </li> <li> <p>Select the Inputs tab and select the Contoso IT site and the Devices list that you setup in Lesson 00 - Course Setup - Step 3: Create new SharePoint site.</p> <p></p> </li> <li> <p>Now, to only display devices from the SharePoint list based on</p> <ul> <li>the selected value,</li> <li>and only devices where the status equals Available,</li> </ul> <p>we need to apply a filter. This is achieved by entering a filter query with the help of Power Fx. Select the ellipsis (...) icon.</p> <p></p> </li> <li> <p>By default, you'll be in the Custom tab. Select the Formula tab.</p> <p></p> </li> <li> <p>Select the expand icon to enlarge the Formula field. Copy and paste the following Power Fx expression.</p> <p>We are using the <code>Concatenate</code> function to create an expression that will filter - the SharePoint column of Status equals Available - and the SharePoint column of Asset type equals the selected device from the question node.</p> <pre><code>Concatenate(\"Status eq 'Available' and AssetType eq '\", Topic.VarDeviceType, \"'\")\n</code></pre> <p>Select Insert.</p> <p></p> </li> <li> <p>The Power Fx expression will now be applied in the Filter Query input parameter of the Get items action. Next, select the All items view in the Limit Columns by View. This will only retrieve the columns in the list based on the selected view.</p> <p></p> </li> <li> <p>Next, we'll update the name of the variable for the output. Select the Outputs tab and select the <code>GetItems</code> variable.</p> <p></p> </li> <li> <p>Update the name to the following.</p> <pre><code>VarDevices\n</code></pre> <p></p> </li> <li> <p>Scroll down and in the Usage section, select Global. This will make the variable accessible by any topic.</p> <p></p> </li> <li> <p>Close the Variable properties pane.</p> <p></p> </li> <li> <p>Select the plus + icon to insert a new node, select Variable management followed by selecting Set a variable value.</p> <p></p> </li> <li> <p>Select the greater than icon for the Set variable input parameter.</p> <p></p> </li> <li> <p>Select the Topic output created earlier as the variable, VarAvailableDevices.</p> <p></p> </li> <li> <p>Next, select the ellipsis (...) icon to define the value of the variable.</p> <p></p> </li> <li> <p>We'll now use a PowerFx expression to set the variable value as the <code>value</code> property returned in the Get items response, and make the scope of the variable global by adding the prefix of <code>Global</code>.</p> <p>Select Insert and save the topic.</p> <p></p> </li> <li> <p>Next we need to update the agent instructions. Select the Overview tab and select Edit.</p> <p></p> </li> <li> <p>Add the a new line in the instructions, copy and paste the following.</p> <pre><code>- Help find available devices and give full details using [Available devices]. Always extract the VarDeviceType from the inputs. After giving device details, ask the user if they want to request a device from the list of available devices.\n</code></pre> <p>This instruction will guide generative AI to invoke the Available devices trigger to display the list of available devices from the Devices Sharepoint list. Select the entire topic placeholder in square brackets.</p> <p></p> </li> <li> <p>Type in the forward slash character <code>/</code> and the list of topics will appear. Select the Available devices topic.</p> <p></p> </li> <li> <p>Save the updated instructions.</p> <p></p> </li> <li> <p>We're now going to test our updated agent. Select Test on the upper right to display the test pane and refresh the test pane. Enter the following message to the agent.</p> <pre><code>I need a laptop\n</code></pre> <p></p> </li> <li> <p>Before the agent can proceed, the user needs to verify their connection can be used. Select Allow.</p> <p></p> </li> <li> <p>The agent will execute the SharePoint tool that retrieves a filtered list of devices where the device type equals \"laptop\" and the status equals \"available,\" from the Power Fx expression used. A response formatted in the form of bullet points will be returned for the user to read.</p> <p></p> </li> <li> <p>One last thing to learn about is viewing the connections used by viewing the Manage your connections page of the agent. Select the ellipsis (...) and select Manage Connection.</p> <p></p> </li> <li> <p>This page is where we can see all the connections used by the agent. Currently, only one connection is listed which is associated to the SharePoint tool that was added to the Topic. Select 1 tool in the Used By column.</p> <p></p> </li> <li> <p>This is where we can see the details of the Get items action and remember the usage description we entered earlier? This is where we'll see the usage description. Select Close.</p> <p>This lets us know what actions are used and the purpose of it. This keeps our connections organized \ud83d\udcc1.</p> <p></p> </li> <li> <p>Go back to your browser tab with Copilot Studio and refresh the test pane to clear the test.</p> </li> </ol>"},{"location":"recruit/07-add-new-topic-with-trigger/#mission-complete","title":"\u2705 Mission Complete","text":"<p>Congratulations! \ud83d\udc4f\ud83c\udffb You've learnt how to add a new topic from scratch, how to add a tool which calls the Get items SharePoint connector action and use Power Fx to filter the response to only return devices where the status equals available and the device type equals laptop. \ud83d\ude4c\ud83c\udffb</p> <p>This is the end of Lab 07 - Add a new topic with conversation nodes, select the link below to move to the next lesson. We'll expand on the use case in this lab in the following lesson's lab.</p> <p>\u23ed\ufe0f Move to Enhance user interactions with Adaptive Cards lesson</p>"},{"location":"recruit/07-add-new-topic-with-trigger/#tactical-resources","title":"\ud83d\udcda Tactical Resources","text":"<p>\ud83d\udd17 Use system topics</p> <p>\ud83d\udd17 Topics in Microsoft Copilot Studio</p> <p>\ud83d\udd17 Set topic triggers</p> <p>\ud83d\udd17 Defining agent topics</p> <p>\ud83d\udd17 Create expressions using Power Fx</p> <p>\ud83d\udcfa Author topics using natural language</p> <p>\ud83d\udcfa Add actions to agents using connectors</p> <p></p>"},{"location":"recruit/08-add-adaptive-card/","title":"\ud83d\udea8 Mission 08: Enhance user interactions in Topics with Adaptive Cards","text":""},{"location":"recruit/08-add-adaptive-card/#codename-operation-interface-uplift","title":"\ud83d\udd75\ufe0f\u200d\u2642\ufe0f CODENAME: <code>OPERATION INTERFACE UPLIFT</code>","text":"<p>\u23f1\ufe0f Operation Time Window: <code>~45 minutes</code></p>"},{"location":"recruit/08-add-adaptive-card/#mission-brief","title":"\ud83c\udfaf  Mission Brief","text":"<p>Agents, your mission is to infiltrate the static user experience and replace it with rich, dynamic, and actionable Adaptive Cards. You\u2019ll deploy JSON payloads and Power Fx formulas to transform Copilot Studio conversations from basic Q&amp;A into fully interactive engagements. Your goal is to gather user input, present data beautifully, and direct conversations with precision and style. Fail to adapt, and your users may defect to less intelligent interfaces.</p>"},{"location":"recruit/08-add-adaptive-card/#objectives","title":"\ud83d\udd0e Objectives","text":"<p>In this mission, you\u2019ll learn:</p> <ol> <li>Understanding what Adaptive Cards are and how they enhance user interactions in Copilot Studio</li> <li>Learning to build interactive cards using JSON and Power Fx formulas for dynamic content</li> <li>Exploring the Adaptive Card Designer and its key components for visual card creation</li> <li>Creating rich, interactive forms and data collection experiences within agent topics</li> <li>Implementing best practices for designing responsive and user-friendly adaptive cards</li> </ol>"},{"location":"recruit/08-add-adaptive-card/#what-is-an-adaptive-card","title":"\ud83e\udd14 What is an Adaptive Card?","text":"<p>An Adaptive Card is way to create interactive, visually rich UI elements that can be embedded in apps like Microsoft Teams, Microsoft Outlook or agents. It is a structured JSON object that defines the layout and content of a card:</p> <ul> <li>What elements appear on the card - text, images, buttons</li> <li>How those elements are arranged</li> <li> <p>What actions users can take such as submitting a form or opening a link</p> <p></p> </li> </ul>"},{"location":"recruit/08-add-adaptive-card/#why-adaptive-cards-matter-in-copilot-studio","title":"Why Adaptive Cards matter in Copilot Studio","text":"<p>Imagine you're building an agent that asks users for their name, email, or feedback. If you just use plain text, the conversation can feel boring or hard to follow. That\u2019s where Adaptive Cards come in!</p> <ol> <li> <p>Makes conversations interactive - instead of sending text as messages to the user, you can show buttons, forms, images and more.</p> <ul> <li>Example: a card can ask the user to fill in their name and email in a clean form.</li> </ul> </li> <li> <p>Look great everywhere - Adaptive Cards automatically match the style of the app they're in, such as Microsoft 365 Copilot chat or Microsoft Teams. You don't need to worry about dark mode, font, or layouts - it adapts.</p> </li> <li> <p>Easy to build with JSON - you define the card using JSON code (think recipe for the UI). Copilot Studio helps you preview your card before adding it to the topic.</p> </li> <li> <p>Collect and use data - you can use the card to ask questions, collect answers, and use that data in the conversation flow.</p> <ul> <li>Example: Ask for a user's phone number, then show a confirmation card with their phone number.</li> </ul> </li> <li> <p>Boost user experience - cards make your agent feel more interactive. It's a more clean, clickable, and user-friendly type of interface.</p> </li> </ol>"},{"location":"recruit/08-add-adaptive-card/#is-json-a-person","title":"\ud83d\udc31 Is JSON a person?","text":"<p>Pronounced as \"Jason,\" it's not a person \ud83d\ude05</p> <p>JSON, otherwise known as JavaScript Object Notation is a lightweight format used to structure data. It's easy to read and write, and looks like a series of key-value pairs inside curly braces {}.</p> <p>This is one of the options to use when adding an adaptive card to your topic.</p> <p></p>"},{"location":"recruit/08-add-adaptive-card/#i-see-another-option-for-building-an-adaptive-card-using-formula","title":"\ud83d\udc40 I see another option for building an adaptive card using formula","text":"<p>Remember how we learnt about Power Fx in Mission 07 - Using Power Fx in your nodes The same can be applied in Adaptive Cards within Copilot Studio.</p> <p>As a recap,</p> <p>Note</p> <p>Power Fx is a low-code programming language used to add logic and dynamic behavior to your agent. It's the same language used in Microsoft Power Apps, and it's designed to be simple and Excel-like, making it easy for developers and non-developers.</p>"},{"location":"recruit/08-add-adaptive-card/#how-power-fx-works-in-adaptive-cards","title":"How Power Fx works in Adaptive Cards","text":"<p>When you design an Adaptive Card in Copilot Studio, you can use Power Fx formulas to:</p> <ul> <li>Dynamically insert values such as user names, dates or status.</li> <li>Format text or numbers such as show currency or round numbers.</li> <li>Show or hide elements based on conditions.</li> <li>Customize responses based on user input, variables, outputs from conversation nodes.</li> </ul> <p>For example,</p> <p>\"<code>Hello</code>\" &amp; <code>System.User.DisplayName</code></p> <p>This formula combines the word \"Hello\" with the user's name dynamically.</p>"},{"location":"recruit/08-add-adaptive-card/#why-its-useful","title":"Why it's useful","text":"<ol> <li> <p>Personalization</p> <p>You can tailor message to each user, making interactions feel more natural and relevant.</p> </li> <li> <p>Dynamic content</p> <p>Cards can display real data from variables and outputs from conversation nodes.</p> </li> <li> <p>Smart logic</p> <p>You can control what users see or interact with based on conditions, improving usability and reducing errors.</p> </li> <li> <p>Low-code friendly</p> <p>Power Fx is a low-code programming language. As mentioned earlier, it's readable, intuitive and similar to Excel formulas.</p> </li> </ol>"},{"location":"recruit/08-add-adaptive-card/#building-with-the-adaptive-card-designer","title":"\ud83d\udc77\ud83c\udffb\u200d\u2640\ufe0f Building with the Adaptive Card Designer","text":"<p>The Adaptive Card Designer is a visual tool that lets you build interactive message cards using drag-and-drop elements like text, images, buttons, and inputs. Its purpose is to help you create rich, dynamic messages without writing complex code, making it easier to design user-friendly interfaces.</p> <p>The designer tool helps you build the card visually, but behind the scenes, it\u2019s generating the JSON object for you. You can also switch to formula which enables Power Fx expressions to be used in the card to display data from else where.</p>"},{"location":"recruit/08-add-adaptive-card/#understanding-the-adaptive-card-designer","title":"\ud83c\udfa8 Understanding the Adaptive Card Designer","text":""},{"location":"recruit/08-add-adaptive-card/#a-card-elements","title":"A) Card Elements","text":"<p>These are the building blocks of your adaptive card. You can drag and drop elements such as the following:</p> <ul> <li>TextBlock to display text.</li> <li>Image to show pictures.</li> <li>FactSet for key-value pairs.</li> <li>Input fields to display text boxes, date pickers, toggles.</li> <li>Actions to display buttons such as Submit, Open URL, or Show Card.</li> </ul> <p>Each element has its own purpose and can be styled or configured.</p>"},{"location":"recruit/08-add-adaptive-card/#b-card-viewer","title":"B) Card Viewer","text":"<p>This is the Preview area where you see how your card will look like in real time. As you add or edit elements, the viewer updates instantly to reflect changes. This enables you to make iterative updates and see the design output at the same time.</p>"},{"location":"recruit/08-add-adaptive-card/#c-card-structure","title":"C) Card Structure","text":"<p>This shows the hierarchy and layout of your card. For example:</p> <ul> <li>A card might start with a TextBlock for the title.</li> <li>Then a ColumnSet with an image on one side and text on the other.</li> <li>Followed by a FactSet and some Action buttons.</li> </ul> <p>It helps you understand how elements are nested and organized.</p>"},{"location":"recruit/08-add-adaptive-card/#d-element-properties","title":"D) Element Properties","text":"<p>When you click on any element in the card, this panel lets you customize its settings:</p> <ul> <li>Change text size, weight, or color.</li> <li>Set image URLs or alt text.</li> <li>Configure input options like placeholder text or default values.</li> </ul> <p>This is where you fine-tune each element.</p>"},{"location":"recruit/08-add-adaptive-card/#e-card-payload-editor","title":"E) Card Payload Editor","text":"<p>This is the raw JSON code behind your card. Advanced users can edit this directly to:</p> <ul> <li>Use templating features.</li> <li>Copy/paste card definitions.</li> </ul> <p>Even if you're new to the Adaptive Card designer, it's helpful to see how the visual design translates into codes.</p> <p>Tip - Check out the Adaptive Card samples</p> <ol> <li>Browse to https://adaptivecards.microsoft.com/designer.</li> <li>Select New card to see a list of samples you can choose and modify.</li> <li>Note that this designer is external (web-based). When you build your card in the web-based Adaptive Card Designer, copy the JSON from the Card Payload Editor.</li> <li>Paste the JSON into your adaptive card in your agent in Copilot Studio.</li> </ol> <p></p>"},{"location":"recruit/08-add-adaptive-card/#common-use-cases","title":"\ud83c\udf35 Common use cases","text":"<p>The following are common use cases for Adaptive Cards in Copilot Studio when used in the Send a message or Ask a question nodes.</p> <ol> <li> <p>Forms and data collection</p> <p>Use adaptive cards to collect structured input from users, such as:</p> <ul> <li>Leave requests</li> <li>Feedback forms</li> <li>Contact information</li> <li>Appointment scheduling</li> </ul> </li> <li> <p>Displaying dynamic information</p> <p>Shows users personalized or real-time data in a clean, readable format from enterprise sources such as ServiceNow, SAP, Dynamics 365, SharePoint etc.</p> <ul> <li>Order summaries</li> <li>Account balances</li> <li>Ticket or case status</li> <li>Upcoming events or deadlines</li> </ul> </li> <li> <p>Interactive choices</p> <p>Let users make selections directly in the conversation:</p> <ul> <li>Choose from a list of options, for example product categories, support topics.</li> <li>Confirm or cancel action.</li> <li>Rate a service or experience.</li> </ul> </li> <li> <p>Triggering actions</p> <p>Include buttons that trigger further steps in the conversation internally or externally.</p> <ul> <li>\"Submit request\"</li> <li>\"View details\"</li> </ul> </li> </ol>"},{"location":"recruit/08-add-adaptive-card/#best-practices","title":"\u2b50 Best practices","text":"<p>Here are some best practices for creating Adaptive Cards for agents in Copilot Studio.</p> <ol> <li> <p>Keep it simple and focused</p> <ul> <li>Design cards with a clear purpose, don\u2019t overload them with too many elements.</li> <li>Use concise text and intuitive layouts to guide users through the interaction.</li> </ul> </li> <li> <p>Be intentional with inputs</p> <ul> <li>Include only the necessary input elements such as text, date choices, to avoid overwhelming users.</li> <li>Use labels to make inputs easy to understand.</li> </ul> </li> <li> <p>Structure for readability</p> <ul> <li>Use TextBlocks for headings and instructions.</li> <li>Group related elements using Containers or ColumnSets to improve visual flow.</li> </ul> </li> <li> <p>Make Action elements clear</p> <ul> <li>Use Action.Submit and or Action.OpenUrl with clear button titles like \"Submit Request\" or \"View Details\"</li> <li>Avoid vague labels like \"Click here\"</li> </ul> </li> <li> <p>Design for adaptability</p> <ul> <li>Assume the card may be viewed on different screen sizes.</li> <li>Avoid fixed widths and use flexible layouts like ColumnSets for responsiveness.</li> </ul> </li> <li> <p>Use dynamic content when possible</p> <ul> <li>Bind card elements to variables or outputs from nodes using Power Fx to personalize the user experience.</li> <li>For example, show the user's name or current status dynamically.</li> </ul> </li> </ol>"},{"location":"recruit/08-add-adaptive-card/#lab-08-add-adaptive-cards-and-enhance-topic-capabilities","title":"\ud83e\uddea Lab 08 - Add adaptive cards and enhance topic capabilities","text":"<p>We're now going to learn how to enhance our topic with adaptive cards and using advanced functionality of topics and nodes.</p> <ul> <li>8.1 Create a new topic with an adaptive card for user to submit their request</li> <li>8.2 Update agent instructions to invoke Request device topic</li> </ul>"},{"location":"recruit/08-add-adaptive-card/#use-case","title":"\u2728 Use case","text":"<p>As an employee</p> <p>I want to request a device</p> <p>So that I can request a device from the list of available devices</p> <p>Let's begin!</p>"},{"location":"recruit/08-add-adaptive-card/#prerequisites","title":"Prerequisites","text":"<ol> <li> <p>SharePoint list</p> <p>We'll be using the Devices SharePoint list from Lesson 00 - Course Setup - Step 3: Create new SharePoint site.</p> <p>If you have not set up the Devices SharePoint list, please head back to Lesson 00 - Course Setup - Step 3: Create new SharePoint site.</p> </li> <li> <p>Contoso Helpdesk Copilot</p> <p>We're going to use the same agent created previously in Lesson 06 - Create a custom agent using natural language with Copilot and grounding it with your data.</p> </li> </ol>"},{"location":"recruit/08-add-adaptive-card/#81-create-a-new-topic-with-an-adaptive-card-for-user-to-submit-their-request","title":"8.1 Create a new topic with an adaptive card for user to submit their request","text":"<p>We'll create a new topic that will handle a user's device request. This new topic will contain an Ask with adaptive card node to enable user interaction with the agent.</p> <p>Let's begin!</p> <ol> <li> <p>Select the Topics tab, then select + Add a topic from blank.</p> <p></p> </li> <li> <p>Name the topic as the following,</p> <pre><code>Request device\n</code></pre> <p>Enter the following as the description for the trigger.</p> <pre><code>This topic helps users request a device when they answer yes to the question that asks the user if they would like to request one of these devices.\n</code></pre> <p></p> </li> <li> <p>Next, add an Ask with adaptive card node. This node will display an interactive card for the user to select which device they would like to request.</p> <p></p> </li> <li> <p>Select the node and the Adaptive Card Node properties pane will appear. We're now going to edit the JSON. Select Edit adaptive card. Select Edit adaptive card.</p> <p></p> </li> <li> <p>This is the Adaptive Card Designer where you can design your card and see the card design in-real time.</p> <p>Try dragging and dropping the TextBlock and FactSet card elements to the authoring canvas, the card viewer area. Notice how the card structure and card payload editor updates as the two card elements were added. You can directly update the card payload editor and the element properties pane.</p> <p></p> </li> <li> <p>Select Preview to view the card in different widths.</p> <p></p> </li> <li> <p>The preview will load where you'll see different card outputs by width.</p> <p></p> </li> <li> <p>Exit out of Preview by selecting the x icon and select Undo in the designer to remove the two card elements previously added.</p> <p></p> </li> <li> <p>Click into the Card payload editor and select all lines using the Windows keyboard shortcut of Ctrl + A or using the Mac keyboard shortcut of Command + A, followed by deleting the lines. Paste the JSON from the Request devices .JSON file.</p> <p></p> </li> <li> <p>Notice how the Card Preview now includes elements that display some text and a list of available devices.</p> <p>This JSON is currently a placeholder and preview to what we'll use as the base for our card but in the form of a formula rather than JSON since we're going to reference the global variable, <code>Global.VarDevices.value</code>, that stores the response of the Get items SharePoint connector action.</p> <p>Select Save and select Close to exit from the Adaptive card designer modal.</p> <p></p> </li> <li> <p>Close the Adaptive Card Node properties panel by selecting the X icon.</p> <p></p> </li> <li> <p>In the authoring canvas of the topic, you'll see the adaptive card.</p> <p></p> </li> <li> <p>Scroll to the bottom of the node and you'll see output variables. The <code>commentsId</code> and the <code>deviceSelectionId</code> were defined in the element properties. These two variables will store values from the card elements the users interact with. These values will be used downstream in the topic, which we'll learn about in the next lesson's lab.</p> <p></p> </li> <li> <p>Let's next update the card from JSON to formula as we'll use Power Fx again to loop through the items returned in the Get items SharePoint connector action, stored in the global variable, <code>Global.VarDevices.value</code>, via the <code>value</code> property of the JSON response.</p> <p>We created this global variable in Lab 07 - Add a new topic with conversation nodes, 7.3 Add a tool using a connector.</p> <p>Select the card in the Ask with Adaptive Card node, followed by selecting the chevron icon and select Formula.</p> <p></p> </li> <li> <p>Click on the expand icon to enlarge the Formula field.</p> <p></p> </li> <li> <p>Click into the Card payload editor and select all lines using the Windows keyboard shortcut of Ctrl + A or using the Mac keyboard shortcut of Command + A, followed by deleting the lines.</p> <p></p> <p>Paste the Formula from the Request Devices formula file.</p> </li> <li> <p>In the formula, we'll loop through each SharePoint list item using the <code>For All</code> function to display the values of <code>Model</code> in the title of the choice option, and the SharePoint item <code>ID</code> is referenced as the value. We're also wrapping the values with the <code>If(IsBlank()</code> functions as the formula expects a value in order to render the adaptive card in the authoring canvas of the topic. Otherwise you'll see a message appear, \"Property cannot be null\"</p> <p>Close the card modal.</p> <p></p> </li> <li> <p>Close the Adaptive Card Node properties pane.</p> </li> <li> <p>Save the topic.</p> <p></p> </li> </ol>"},{"location":"recruit/08-add-adaptive-card/#82-update-agent-instructions-to-invoke-request-device-topic","title":"8.2 Update agent instructions to invoke Request device topic","text":"<p>Now that we created the new topic that handles the device requests, we need to update the agent instructions to invoke the topic.</p> <ol> <li> <p>Select the Overview tab and in the agent instructions select Edit.</p> <p></p> </li> <li> <p>Add a new line below the previous instruction from Lab 07 - Add a new topic with conversation nodes, 7.3 Add a tool using a connector.</p> <pre><code>- If the user answers yes to the question of requesting a device, trigger [Request device]. Otherwise if they answer no to the question of requesting a device, trigger [Goodbye].\n</code></pre> <p>Select the entire topic placeholder in square brackets and delete the placeholder.</p> <p></p> </li> <li> <p>Type in <code>/Req</code> and select the Request devices topic.</p> <p></p> </li> <li> <p>Repeat the same steps for the next topic placeholder, [Goodbye]. Select the entire topic placeholder in square brackets and delete the placeholder. Type in <code>/Goodbye</code> and select the Goodbye topic.</p> <ul> <li> <p>When the user answers Yes to the agent asking if they would like request a device, the agent will redirect from the Available devices topic to the Request devices topic.</p> </li> <li> <p>Otherwise if the user answers No, the agent redirect from the Available devices topic to the Goodbye topic.</p> </li> </ul> <p>Save the updated instructions.</p> <p></p> </li> <li> <p>Let's now test our the redirection from the Available devices topic to the Request devices topic. Select the Test to load the testing pane select Refresh.</p> <p>Then select the Activity map icon in the test pane, followed by enabling Track between topics. This will allow us to see the Available devices topic has redirected to the Request devices topic.</p> <p>OK, we're good to test! Enter the following in the test pane.</p> <pre><code>I need a laptop\n</code></pre> <p></p> </li> <li> <p>The agent will respond with the list of available devices followed by the question of asking the user if they would like to request a device. Copy and paste the following,</p> <pre><code>yes please\n</code></pre> <p></p> </li> <li> <p>We'll next see that the agent has redirected to the Request device topic. The agent invoked this topic as per the instructions we added.</p> <p>The adaptive card with the interactive elements will now be displayed as message to the user.</p> <p></p> </li> <li> <p>We've now successfully tested \ud83d\ude04 our Available devices topic redirecting to the Request devices topic. We'll be adding more enhancements to this topic in the next lesson's lab.</p> <p>Refresh the test pane.</p> <p></p> </li> </ol>"},{"location":"recruit/08-add-adaptive-card/#mission-complete","title":"\u2705 Mission Complete","text":"<p>Congratulations! \ud83d\udc4f\ud83c\udffb You've learnt how to add adaptive cards using Power Fx formulas to display data from variables, and you also learnt how to redirect from one topic to another. Creating bite sized topics makes your agent more organized, but also helps guide users through different parts of the conversation flow with the agent.</p> <p>This is the end of Lab 08 - Enhance user interactions with Adaptive Cards, select the link below to move to the next lesson. We'll expand on the use case in this lab in the following lesson's lab.</p> <p>\u23ed\ufe0f Move to Add an agent flow to your Topic for automation lesson</p>"},{"location":"recruit/08-add-adaptive-card/#tactical-resources","title":"\ud83d\udcda Tactical Resources","text":"<p>\ud83d\udd17 Using Adaptive Cards in Copilot Studio</p> <p>\ud83d\udd17 Add an adaptive card in Send a message node</p> <p>\ud83d\udd17 Create expressions using Power Fx</p> <p>\ud83d\udcfa Building Adaptive Cards with Power FX</p> <p></p>"},{"location":"recruit/09-add-an-agent-flow/","title":"\ud83d\udea8 Mission 09: Add an agent flow to your Topic for automation","text":""},{"location":"recruit/09-add-an-agent-flow/#codename-operation-automation-powerhouse","title":"\ud83d\udd75\ufe0f\u200d\u2642\ufe0f CODENAME: <code>OPERATION AUTOMATION POWERHOUSE</code>","text":"<p>\u23f1\ufe0f Operation Time Window: <code>~30 minutes</code> </p>"},{"location":"recruit/09-add-an-agent-flow/#mission-brief","title":"\ud83c\udfaf Mission Brief","text":"<p>Your agent can now converse with users and provide information, but true operational excellence requires your agent to take action. This mission will transform your conversational agent into an automation powerhouse by equipping it with agent flows.</p> <p>By mission's end, you'll have created an end-to-end device request automation that captures user input through an adaptive card, retrieves data from SharePoint, sends notifications to managers via email, and provides seamless user feedback - all orchestrated by your agent through intelligent workflow automation.</p>"},{"location":"recruit/09-add-an-agent-flow/#objectives","title":"\ud83d\udd0e Objectives","text":"<p>In this mission, you\u2019ll learn:</p> <ol> <li>Understanding what agent flows are and how they differ from Power Automate cloud flows for automation</li> <li>Learning the key features that make agent flows powerful including AI actions and natural language authoring</li> <li>Exploring the agent flow designer and how to use expressions for dynamic data handling</li> <li>Creating a complete device request automation that integrates SharePoint data and email notifications</li> </ol>"},{"location":"recruit/09-add-an-agent-flow/#what-is-an-agent-flow","title":"\ud83e\udd14 What is an agent flow?","text":"<p>Agent flows are a powerful way to automate repetitive tasks and integrate your apps and services. Think of them as structured, step-by-step workflows that your agent can execute to automate tasks or connect with other applications and services. You can think of them as mini workflows that help your agent do things like send notifications, update records, or respond to events.</p> <p>Unlike autonomous agents that use AI to make decisions on the fly, agent flows are deterministic workflows - meaning they follow the same path every time, ensuring consistent and reliable results.</p> <p>In simple terms:</p> <ul> <li>They help your agent do things, not just say things to users.</li> <li>They're reusable across topics and agents, and can be triggered by user messages, events, or other applications and services.</li> </ul>"},{"location":"recruit/09-add-an-agent-flow/#yes-but-how-is-it-different-to-power-automate-cloud-flows","title":"\ud83d\ude4b\ud83c\udffd Yes, but how is it different to Power Automate cloud flows?","text":"<p>Both agent flows and Power Automate cloud flows help automate tasks. They're designed for different purposes and work in different ways.</p>"},{"location":"recruit/09-add-an-agent-flow/#agent-flows-in-copilot-studio","title":"\ud83e\udd16 Agent flows in Copilot Studio","text":"<p>What they're for:</p> <ul> <li>Built for conversational and autonomous agents (via agent instructions) in Copilot Studio.</li> <li>Focused on smart, AI-driven automation that interacts with business systems.</li> </ul> <p>Why they're useful:</p> <ul> <li>Easy to build and manage directly in Copilot Studio.</li> <li>Great for automating tasks that happen during the conversation with users such as submitting a leave request.</li> <li>You don't need a separate Power Automate license as billing is based on usage inside Copilot Studio. This can save time and cost for enterprise teams.</li> </ul> <p>Limitations:</p> <ul> <li>You can't share them, copy them, or assign co-owners.</li> <li>Agent flows are only visible and usable within Copilot Studio.</li> <li>Currently, event triggers for agents can be edited in the Power Automate maker portal.</li> </ul>"},{"location":"recruit/09-add-an-agent-flow/#power-automate-cloud-flows","title":"\u2601\ufe0f Power Automate cloud flows","text":"<p>What they're for:</p> <ul> <li>Designed for general-purpose automation across many apps and services.</li> <li>Can run independently or work alongside agent flows.</li> </ul> <p>Why they're useful:</p> <ul> <li>Offers a wide range of connectors.</li> <li>Ideal for automating processes outside of agents.</li> <li>Can be shared, reused, and managed across teams.</li> </ul> <p>Requirements:</p> <ul> <li>You need a Power Automate license to use them.</li> </ul>"},{"location":"recruit/09-add-an-agent-flow/#summary","title":"\ud83d\udcd7 Summary","text":"Use this When you want to Agent flows Automate tasks inside an agent, use AI, and keep everything in Copilot Studio Power Automate cloud flows Automate across apps and services, or build workflows outside of agents"},{"location":"recruit/09-add-an-agent-flow/#why-use-agent-flows","title":"\ud83d\udc4d\ud83c\udffb Why use agent flows","text":"<p>Agent flows always follow a fixed path - they do the same thing every time when given the same input.</p> <p>This makes them:</p> <ul> <li>Reliable - you can trust that they'll behave the same way every time.</li> <li>Predictable - you know what result to expect when the flow runs.</li> <li>Rule based - they follow steps that you define.</li> </ul> <p>Other benefits are:</p> <ul> <li>Automation - enables your agent to handle repetitive tasks such as submitting forms or sending notifications.</li> <li>Connected - connect with 1400+ connectors like ServiceNow, SharePoint, Salesforce. Otherwise you can build your own custom connector.</li> <li>Tightly integrated - agent flows are part of the agent's logic, they're triggered directly by user messages or actions in the conversation.</li> <li>Scalability - reuse flows across multiple agents or scenarios.</li> <li>No-code or low-code - you can build flows using natural language or a visual designer.</li> <li>All-in-one-platform - you can design, test and deploy agent flows in one place - Copilot Studio. No need to switch between platforms.</li> </ul>"},{"location":"recruit/09-add-an-agent-flow/#how-do-agent-flows-enhance-your-agent","title":"\ud83c\udfc4\ud83c\udffb\u200d\u2642\ufe0f How do agent flows enhance your agent?","text":"<p>Agent flows expand what your agent can do beyond \"chatting\" with users. They allow it to take action and interact with systems.</p> <p>Let's say you're working in a finance department and you receive a lot of invoices from vendors. Normally, someone has to read each invoice, pull out the important details - the amount, date, who it's from, and check if everything matches your records. Then send it to the right person for approval. This takes time and effort.</p> <p>With agent flows in Copilot Studio, you can automate this process. As soon as the invoice comes in, the agent:</p> <ol> <li>Reads the document using intelligent document processing to find the key information.</li> <li>Checks the details against your enterprise data to make sure everything looks correct.</li> <li>Route it for approval to the right person(s).</li> </ol> <p>This saves time, reduces mistakes and makes the whole process much smoother.</p>"},{"location":"recruit/09-add-an-agent-flow/#think-of-it-this-way","title":"Think of it this way","text":"<ul> <li>Agents: the smart decision-makers</li> <li>Agent flows: the reliable executors</li> </ul>"},{"location":"recruit/09-add-an-agent-flow/#why-it-matters","title":"Why it matters","text":"<ul> <li>You get the best of both worlds: reliable automation and flexible AI.</li> <li>It's easy to build and update flows as your business needs change.</li> <li>You can scale automation across teams.</li> </ul>"},{"location":"recruit/09-add-an-agent-flow/#key-features-that-make-agent-flows-powerful","title":"\ud83d\udd0c Key features that make agent flows powerful","text":"<ol> <li> <p>Natural language authoring</p> <ul> <li>You can describe what you want the flow to do in plain English.</li> <li>Copilot understands your intent and builds the flow for you.</li> <li>No need to write code - explain your idea.</li> </ul> </li> <li> <p>AI actions</p> <p>Use AI to:</p> <ul> <li>Read and understand documents or images.</li> <li>Summarize long content into short, useful answers.</li> <li>Make smart recommendations or decisions.</li> </ul> </li> <li> <p>Generative actions</p> <ul> <li>These let the flow adapt in real time.</li> <li>The agent can plan and adjust steps based on changing information.</li> </ul> </li> <li> <p>Integration actions</p> <ul> <li>Connect your flow to other tools like Outlook, Microsoft Teams, ServiceNow, SharePoint and other applications and services, through from +1400 built-in connectors or from your own custom connector.</li> <li>This helps your agent work with the apps your team already uses.</li> </ul> </li> <li> <p>Human in the loop</p> <ul> <li>Add approval steps where a person needs to review or confirm something.</li> <li>Advanced approvals supports reminders, delegation, and multi-stage approvals.</li> </ul> </li> </ol>"},{"location":"recruit/09-add-an-agent-flow/#how-they-work","title":"\u2699\ufe0f How they work","text":"<ol> <li> <p>Trigger</p> <p>An event starts the flow - such as a user asking a question, invoking the flow from a topic, a scheduled time, or an event happening in another system.</p> </li> <li> <p>Actions</p> <p>These are steps that the agent follows next - send an email, call an API, update a ticket in ServiceNow.</p> </li> </ol>"},{"location":"recruit/09-add-an-agent-flow/#how-to-create-an-agent-flow","title":"\ud83e\uddf6 How to create an agent flow","text":"<ol> <li>Natural language: describe what you want the agent to do, and Copilot builds it for you.</li> <li>Designer canvas: drag and drop actions, conditions, and loops in the agent flow designer to build your agent flow.</li> </ol>"},{"location":"recruit/09-add-an-agent-flow/#what-is-the-agent-flow-designer","title":"\ud83c\udfa8 What is the agent flow designer?","text":"<p>It's a visual tool in Copilot Studio that helps you build, edit, and manage agent flows that provide step-by-step instructions your agent follows to complete tasks. It's designed to be straightforward to use, even if you're new to agent flows.</p>"},{"location":"recruit/09-add-an-agent-flow/#key-features-of-the-agent-flow-designer","title":"Key features of the agent flow designer","text":"<ol> <li> <p>Visual canvas</p> <ul> <li>You can see your entire flow laid out like a diagram.</li> <li>Easily zoom in/out, fit the view or use a minimap to navigate large flows.</li> </ul> </li> <li> <p>Add and remove actions</p> <ul> <li>Click the plus (+) button to add a new action such as sending a message or updating an item in a SharePoint list.</li> <li>You can search for actions from connectors, and configure them through its settings.</li> <li>To remove an action, click the three dots (\u22ee) and select Delete.</li> </ul> </li> <li> <p>Check parameters</p> <ul> <li>Click on any action to view or edit its settings called parameters.</li> <li>You can enter values manually or use expressions to make them dynamic.</li> </ul> </li> <li> <p>Version history</p> <ul> <li>Every time you save your flow, a version is recorded.</li> <li>You can go back and view or restore previous version if needed.</li> </ul> </li> <li> <p>Error checking</p> <ul> <li>The Flow Checker highlights any errors.</li> <li>All errors will need to be resolved prior to publishing your flow.</li> </ul> </li> <li> <p>Publish and test</p> <ul> <li>Once your flow is error-free, publish to make it live.</li> <li>Use the Test feature to run your flow manually or automatically, and check if it works as expected.</li> </ul> </li> </ol>"},{"location":"recruit/09-add-an-agent-flow/#why-use-the-agent-flow-designer","title":"Why use the agent flow designer?","text":"<ul> <li>Visual and intuitive - you can build flows by dragging and clicking.</li> <li>Safe to experiment - version history lets you undo changes.</li> <li>Built-in testing - helps you make sure everything works before going live.</li> </ul>"},{"location":"recruit/09-add-an-agent-flow/#you-mentioned-expressions-what-are-expressions","title":"\ud83d\udd24 You mentioned expressions - what are expressions?","text":"<p>Expressions are small formulas or commands that help your agent flow work with data. You use them to calculate values, format text, make decisions, or pull specific information from inputs.</p>"},{"location":"recruit/09-add-an-agent-flow/#why-use-expressions","title":"Why use expressions?","text":"<p>Expressions let you:</p> <ul> <li>Customize how data is handled - combine names, format dates.</li> <li>Make decisions - if a value is greater than 10, do something.</li> <li>Transform data - change text to lowercase, extract part of a string.</li> <li>Automate logic - without writing full code.</li> </ul>"},{"location":"recruit/09-add-an-agent-flow/#what-do-expressions-look-like","title":"What do expressions look like?","text":"<p>Expressions use functions. I'm going to borrow an explanation of what functions are from former Microsoft MVP, Jerry Weinstock.</p> <p>Quote</p> <p>Functions are built-in logic to transform your data either through simple or complex operations in your expression.</p> <p>Functions enable you to build expressions without you needing to write any code.</p> <p>The way I like to describe it, is that a function in agent flows is similar to Excel functions. You can perform an operation on data to transform it into a desired output. When building your formula in Excel you select your input value from the cells in a table or a range, and then apply functions to manipulate the data output. An example is using the <code>COUNT</code> function to work out the number of cells that contain numbers from a range.</p> <p>In agent flows, instead of referencing data from cells in a table, you're referencing data outputs from the trigger or actions when building your expressions. Continuing with the previous example, use the function <code>length</code> to retrieve the number of items returned from the Get items SharePoint connector action.</p>"},{"location":"recruit/09-add-an-agent-flow/#why-do-functions-matter","title":"Why do functions matter?","text":"<p>Using functions makes your agent flows:</p> <ul> <li>Smarter - they can react to different inputs or conditions.</li> <li>Flexible - you can customize how data is handled.</li> <li>Efficient - you avoid manual steps by automating logic.</li> </ul>"},{"location":"recruit/09-add-an-agent-flow/#most-useful-functions","title":"Most useful functions","text":"<p>The following are common functions used in agent flows. For the full list of functions, head to the reference guide.</p>"},{"location":"recruit/09-add-an-agent-flow/#text","title":"\ud83d\udd21 Text","text":"<ul> <li> <p><code>concat()</code> - Joins two or more pieces of text together.</p> <ul> <li>Example: <code>concat('Hello ', firstName)</code> \u2192 \u201cHello John\u201d</li> </ul> </li> <li> <p><code>toLower()</code> / <code>toUpper()</code> - Changes text to lowercase or uppercase.</p> <ul> <li>Useful for standardizing input.</li> </ul> </li> <li> <p><code>substring()</code> - Extracts part of a string.</p> <ul> <li>Example: Get the first 3 letters of a name.</li> </ul> </li> <li> <p><code>trim()</code> - Removes spaces from the beginning and end of text.</p> </li> </ul>"},{"location":"recruit/09-add-an-agent-flow/#math-and-number","title":"\ud83d\udd22 Math and number","text":"<ul> <li><code>add()</code>, <code>sub()</code>, <code>mul()</code>, <code>div()</code> - Basic math operations.<ul> <li>Example: <code>add(5, 3)</code> - the output is 8</li> </ul> </li> </ul>"},{"location":"recruit/09-add-an-agent-flow/#date-and-time","title":"\ud83d\udcc5 Date and time","text":"<ul> <li> <p><code>utcNow()</code> - Gets the current date and time in UTC.</p> <ul> <li>Great for timestamps.</li> </ul> </li> <li> <p><code>addDays()</code>, <code>addHours()</code> - Adds time to a date.</p> <ul> <li>Example: <code>addDays(utcNow(), 7)</code> output is 7 days from now.</li> </ul> </li> <li> <p><code>formatDateTime()</code> - Formats a date into a readable string.</p> <ul> <li>Example: Monday, July 7, 2025</li> </ul> </li> </ul>"},{"location":"recruit/09-add-an-agent-flow/#logical","title":"\u2705 Logical","text":"<ul> <li> <p><code>if()</code> - Runs one value if true, another if false.</p> <ul> <li>Example: <code>if(score &gt; 50, 'Pass', 'Fail')</code></li> </ul> </li> <li> <p><code>equals()</code> - Checks if two values are the same.</p> </li> <li> <p><code>and()</code>, <code>or()</code>, <code>not()</code> - Combine multiple conditions.</p> </li> </ul>"},{"location":"recruit/09-add-an-agent-flow/#other-handy-functions","title":"\ud83e\udea3 Other handy functions","text":"<ul> <li> <p><code>coalesce()</code> - Returns the first non-empty value.</p> <ul> <li>Useful for fallback/default values.</li> </ul> </li> <li> <p><code>guid()</code> - Generates a unique ID.</p> <ul> <li>Useful for tracking or logging.</li> </ul> </li> <li> <p><code>length()</code> - Counts how many characters or items are in a string or array.</p> </li> </ul>"},{"location":"recruit/09-add-an-agent-flow/#best-practices","title":"\u2b50 Best practices","text":"<p>Here are some best practices for building agent flows in Copilot Studio.</p> <ol> <li> <p>Start simple and build gradually</p> <ul> <li>Begin with a small, clear task such as sending a message.</li> <li>Add more steps after testing the basics of your automation.</li> </ul> </li> <li> <p>Use clear and descriptive action names</p> <ul> <li>Label each step clearly so you know and your team understands what it does.</li> <li>Example: instead of the default name of \"Update item\" for the SharePoint connector action, rename it to what it's updating, such as \"Update device status.\"</li> </ul> </li> <li> <p>Check for errors before publishing</p> <ul> <li>Use the flow checker to find and fix any issues.</li> <li>You can't publish flows if there are errors, so try to resolve them when they occur.</li> </ul> </li> <li> <p>Test your flow thoroughly</p> <ul> <li>Just because it saves and publishes, doesn't mean it works as expected.</li> <li>Use the Test feature to run your flow manually or automatically, and check the results.</li> </ul> </li> <li> <p>Use Version History</p> <ul> <li>Save your flow often so you can go back to earlier versions if needed.</li> <li>You can view and restore previous versions using the Version History panel.</li> </ul> </li> <li> <p>Use parameters and expressions wisely</p> <ul> <li>When configuring actions, use parameters to make your flow dynamic.</li> <li>You can enter values manually or use expressions to calculate them, or combine it with values from actions upstream by using the dynamic content picker.</li> </ul> </li> <li> <p>Delete unused actions</p> <ul> <li>If you add an action and later decide you don't need it, remove it to keep your flow clean.</li> </ul> </li> </ol>"},{"location":"recruit/09-add-an-agent-flow/#lab-09-add-an-agent-flow-for-automation-and-enhance-topic-capabilities","title":"\ud83e\uddea Lab 09 - Add an agent flow for automation and enhance topic capabilities","text":"<p>We're now going to learn how to enhance our topic with adaptive cards and using advanced functionality of topics and nodes.</p> <ul> <li>9.1 Create an agent flow</li> <li>9.2 Add agent flow to topic</li> <li>9.3 Update Request device topic with several nodes for a better user experience</li> <li>9.4 Test agent using several scenarios</li> </ul>"},{"location":"recruit/09-add-an-agent-flow/#use-case","title":"\u2728 Use case","text":"<p>As a manager of an employee</p> <p>I want to receive device requests</p> <p>So that I can review the device requested by the employee.</p> <p>Let's begin!</p>"},{"location":"recruit/09-add-an-agent-flow/#prerequisites","title":"Prerequisites","text":"<ol> <li> <p>SharePoint list</p> <p>We'll be using the Devices SharePoint list from Lesson 00 - Course Setup - Step 3: Create new SharePoint site.</p> <p>If you have not set up the Devices SharePoint list, please head back to Lesson 00 - Course Setup - Step 3: Create new SharePoint site.</p> </li> <li> <p>Contoso Helpdesk Agent</p> <p>We're going to use the same agent created previously in Lesson 06 - Create a custom agent using natural language with Copilot and grounding it with your data.</p> </li> </ol>"},{"location":"recruit/09-add-an-agent-flow/#91-create-an-agent-flow","title":"9.1 Create an agent flow","text":"<p>In this exercise, we'll create an agent flow that retrieves the SharePoint item of the selected device and send an email to a manager with the device details.</p> <ol> <li> <p>In the Request device topic, scroll down to the Ask with adaptive card node and add a new node. Select Add a tool and in the Basic tools tab of the fly out pane, select New Agent flow.</p> <p></p> </li> <li> <p>The Agent flows Designer will load with a trigger and action.</p> <ul> <li> <p>Trigger - When an agent calls the flow</p> <ul> <li>This will trigger a flow from a Copilot Studio agent.</li> </ul> </li> <li> <p>Action - Respond to the agent</p> <ul> <li>This send a response that can contain output values back to the Copilot Studio agent.</li> </ul> </li> </ul> <p>Select the trigger.</p> <p></p> </li> <li> <p>Next, we're going to add several inputs for the agent flow.</p> <ul> <li> <p><code>DeviceSharePointId</code> - this will store the value, ID, of the SharePoint item. This ID value is an output from the Ask with adaptive card node where the user selected the device.</p> </li> <li> <p><code>User</code> - this will be the name of the user which will be from a system variable of the agent.</p> </li> <li> <p><code>AdditionalComments</code> - this will be the the comment entered by the user, which is an output from the Ask with adaptive card node.</p> </li> </ul> <p>We'll first add the <code>DeviceSharePointId</code> as an input for our trigger. Select + Add an input.</p> <p></p> </li> <li> <p>For the type of user input, select Text.</p> <p></p> </li> <li> <p>For the name of the input, enter the following.</p> <pre><code>DeviceSharePointId\n</code></pre> <p></p> </li> <li> <p>We'll now add the second input, <code>User</code>. Repeat the same steps, select + Add an input and select Text.</p> <p></p> </li> <li> <p>For the name of the input, enter the following.</p> <pre><code>User\n</code></pre> <p></p> </li> <li> <p>We'll now add the third input, <code>AdditionalComments</code>. Repeat the same steps, select + Add an input and select Text.</p> <p></p> </li> <li> <p>For the name of the input, enter the following.</p> <pre><code>AdditionalComments\n</code></pre> <p></p> </li> <li> <p>For the <code>AdditionalComments</code> input, we'll update it to make it optional. Select the ellipsis (...) icon and select Make the field optional.</p> <p></p> </li> <li> <p>Great work! The trigger has now been configured, let's continue. Select the plus + icon under the trigger to insert a new action.</p> <p></p> </li> <li> <p>The Actions pane will appear where you can view actions from 1400+ built-in connectors to Microsoft and third-party services. In the search field enter the following,</p> <pre><code>Get item\n</code></pre> <p>A list of actions will display in the search results. Select the Get item action from the SharePoint connector.</p> <p></p> </li> <li> <p>We can now begin configuring the Get item action.</p> <p>Select the Ellipsis (...) icon in the Get item action.</p> <p></p> </li> <li> <p>Select Rename.</p> <p></p> </li> <li> <p>Rename the action to,</p> <pre><code>Get Device\n</code></pre> <p></p> </li> <li> <p>In the Site Address field, select the Site address of the Contoso IT SharePoint site created in Lesson 00 - Course Setup - Step 3: Create new SharePoint site.</p> <p>In the List Name field, select the Devices SharePoint list.</p> <p></p> </li> <li> <p>In the Id field, select the lightning bolt icon or fx icon to the right.</p> <p></p> </li> <li> <p>In the Dynamic content tab of the flyout pane, enter the following,</p> <pre><code>sharepoint\n</code></pre> <p>The search results will show input parameters that match the value searched. Select the DeviceSharePointId parameter from the trigger.</p> <p>Next, select Add to add the dynamic content input into the Id parameter of the action.</p> <p></p> </li> <li> <p>The dynamic content input from the trigger is now referenced in the Id parameter of the action. We're going to update one of the advanced parameters next. Select Show all to view the advanced parameters.</p> <p></p> </li> <li> <p>The Limit Columns by View parameter will be displayed and by default it's set to Use all columns (Do not limit). We'll update this value to a view to limit the columns returned in the response of the action. Select the Limit Columns by View parameter to view the list of views.</p> <p></p> </li> <li> <p>Select the All Items view.</p> <p></p> </li> <li> <p>Select the plus + icon under the Get Device action to insert a new action.</p> <p></p> </li> <li> <p>In the search field enter the following,</p> <pre><code>send an email\n</code></pre> <p>A list of actions will display in the search results. Select the Send an email (V2) action from the Office 365 Outlook connector.</p> <p></p> </li> <li> <p>We next need to create a connection for the connector action. Select Sign in.</p> <p></p> </li> <li> <p>Select your signed in user account.</p> <p></p> </li> <li> <p>Select Allow access. A connection has now been created.</p> <p></p> </li> <li> <p>Rename the action to the following,</p> <pre><code>Send an email to manager\n</code></pre> <p>Let's next define the input parameters of our action.</p> <p>For the To input parameter, select yourself. Normally this would be your manager or we'd use another action that pulls through your manager based on your Entra ID profile but for the purpose of this lesson, select yourself.</p> <p>For the Subject input parameter, enter the following,</p> <pre><code>Request type: new device\n</code></pre> <p>For the Body input parameter, enter the following,</p> <pre><code>Hi,\n\nNew device requested from\n\nManufacturer:\nModel:\nLink to item in SharePoint\nAdditional comments from:\n\nThis is an automated email from Contoso Helpdesk Copilot\n</code></pre> <p></p> </li> <li> <p>Next, we're going to update the Body input parameter with references to dynamic content input from the trigger or Get item action. Enter a space after the second line as we'll insert the name of the user from the trigger input, User.</p> <p>Select the lightning bolt icon or fx icon to the right.</p> <p></p> </li> <li> <p>In the Dynamic content tab of the flyout pane, select the User input from the trigger.</p> <p>Select Add to add the dynamic content User input into the Body parameter of the action.</p> <p></p> </li> <li> <p>The dynamic content input from the trigger is now referenced in the Body parameter of the action. We'll repeat the same for the remaining lines in the email message body.</p> <p></p> </li> <li> <p>Click into the space beside <code>Manufacturer:</code>. Select the lightning bolt icon or fx icon to the right.</p> <p>In the Dynamic content tab of the flyout pane, enter the following in the search field,</p> <pre><code>manufacturer\n</code></pre> <p>Select the Manufacturer value input from the trigger and select Add.</p> <p></p> </li> <li> <p>Click into the space beside <code>Model:</code>. Select the lightning bolt icon or fx icon to the right.</p> <p>In the Dynamic content tab of the flyout pane, enter the following in the search field,</p> <pre><code>model\n</code></pre> <p>Select the Model input from the Get item action and select Add.</p> <p></p> </li> <li> <p>For the <code>Link to item in SharePoint</code> text, we'll update this to be a hyperlink in the email message body. Click at the beginning of the line and select the lightning bolt icon or fx icon to the right.</p> <p></p> </li> <li> <p>Click after the HTML anchor tag and select the lightning bolt icon or fx icon to the right.</p> <p>In the Dynamic content tab of the flyout pane, enter the following in the search field,</p> <pre><code>link to item\n</code></pre> <p>Select the Link to item input from the Get item action and select Add.</p> <p></p> </li> <li> <p>We need to switch to the HTML editor by selecting the &lt;/&gt;  icon.</p> <p></p> </li> <li> <p>The HTML editor is now enabled. Click before the <code>Link to item in SharePoint</code> text, add an HTML anchor tag to create a hyperlink. Copy and paste the following.</p> <pre><code>&lt;a href=\"\n</code></pre> <p></p> </li> <li> <p>The dynamic content input of Link to item is now referenced in the Body parameter. Click after the Link to item input, copy and paste the following.</p> <pre><code>\"&gt;\n</code></pre> <p></p> </li> <li> <p>Click after the <code>Link to item in SharePoint</code> text, close the html anchor tag. Copy and paste the following.</p> <pre><code>&lt;/a&gt;\n</code></pre> <p></p> </li> <li> <p>Select the &lt;/&gt; icon to toggle the code view.</p> <p></p> </li> <li> <p>Then reselect the &lt;/&gt; icon to toggle the code view again.</p> <p></p> </li> <li> <p>Notice how there are several extra characters <code>&amp;lt;br&amp;gt;</code>. Delete these characters</p> <p></p> </li> <li> <p>We're now done adding a hyperlink to our email message body \ud83d\ude0e Select the &lt;/&gt; icon to toggle the code view.</p> <p></p> </li> <li> <p>Click after the <code>Additional comments from</code> text before the colon character and select the lightning bolt icon or fx icon to the right.</p> <p></p> </li> <li> <p>In the Dynamic content tab of the flyout pane, enter the following in the search field,</p> <pre><code>user\n</code></pre> <p>Select the User parameter from the trigger and select Add.</p> <p></p> </li> <li> <p>We're now going to insert an expression that will display the value of Additional Comments if provided by the user in the Ask an adaptive card node, otherwise display \"None\" if the user does not provide any comments.</p> <p>Click after the colon and select the lightning bolt icon or fx icon to the right.</p> <p></p> </li> <li> <p>In the Function tab of the flyout pane and in the expression field above, enter the following,</p> <pre><code>if(empty())\n</code></pre> <p>This expression uses the <code>if</code> function for an if-else statement.</p> <p>The next function used is <code>empty</code> which checks whether a value exists or not in a string parameter. The string parameter to be referenced is the <code>AdditionalComments</code> input parameter value from the trigger.</p> <p></p> </li> <li> <p>Next, click inside of the brackets after the <code>empty</code> function. We're going to insert the <code>AdditionalComments</code> input parameter from the trigger.</p> <p>Select the Dynamic content tab. Enter the following in the search field,</p> <pre><code>Additional\n</code></pre> <p>Scroll down the pane and select AdditionalComments input from the trigger. The parameter will now be added as a string parameter in the expression.</p> <p></p> </li> <li> <p>Next we'll define the true logic, where if the <code>AdditionalComments</code> string parameter is empty, then we want to display a string (text) of <code>None</code>.</p> <p>After the bracket that encloses the string parameter, enter the following,</p> <pre><code>, 'None',\n</code></pre> <p></p> </li> <li> <p>Finally we'll define the false logic, where if the <code>AdditionalComments</code> string parameter is not empty, then we want to display the value of the AdditionalComments input parameter from our trigger.</p> <p>A reminder this value will be from the Additional Comments field of the adaptive card in the Ask with adaptive card node in the Request device topic.</p> <p>After the comma after our true logic, select the Dynamic content tab. Enter the following in the search field,</p> <pre><code>Additional\n</code></pre> <p>Scroll down the pane and select AdditionalComments input from the trigger. The parameter will now be added as a string parameter in the expression.</p> <p>Now add it our Body parameter by selecting Add.</p> <p></p> </li> <li> <p>Excellent, our expression is complete! The expression has now been added to the Body parameter. Lastly, format the last line in Italics.</p> <p></p> </li> <li> <p>We're now going to update the Respond to the agent action to send the value of the Model value parameter from the Get item action back to the agent.</p> <p>Hold down the left key of your mouse and move in an upward motions within the designer to view the Respond to the agent action.</p> <p>Select the Respond to the agent action and select the Text output as the type.</p> <p></p> </li> <li> <p>Enter the following as the name of the output.</p> <pre><code>ModelValue\n</code></pre> <p></p> </li> <li> <p>Select the value field and select the lightning bolt icon or fx icon to the right.</p> <p></p> </li> <li> <p>In the Dynamic content tab of the flyout pane, enter the following in the search field,</p> <pre><code>model\n</code></pre> <p>Select the Model parameter from the Get item action and select Add.</p> <p></p> </li> <li> <p>The Model parameter is now the value of the text output. Select Save draft to save our agent flow.</p> <p>We've now completed our agent flow \ud83d\udc4f\ud83c\udffb</p> <p></p> </li> <li> <p>Let's make one more update to our agent flow before publishing. Select the Overview tab and select Edit.</p> <p></p> </li> <li> <p>For the Flow name, copy and paste the following.</p> <pre><code>Send device request email\n</code></pre> <p>For the Description, select the refresh icon to use AI to automatically generate a description for you based on the trigger and actions in the agent flow.</p> <p>Select Save to save the updated name and description of the agent flow.</p> <p></p> </li> <li> <p>Select the Designer tab and select Publish to publish the agent flow so that it can be added as a node in the Request device topic.</p> <p></p> </li> <li> <p>A confirmation message will appear shortly to confirm the agent flow is published.</p> <p></p> </li> </ol>"},{"location":"recruit/09-add-an-agent-flow/#92-add-agent-flow-to-topic","title":"9.2 Add agent flow to topic","text":"<p>Let's now add the agent flow to the Request device topic.</p> <ol> <li> <p>Select Agents in the left-hand side menu and select the Contoso Helpdesk Agent.</p> <p></p> </li> <li> <p>Select the Topics tab.</p> <p></p> </li> <li> <p>Select the Request device topic.</p> <p></p> </li> <li> <p>Scroll down to the Ask with adaptive card node and add a new node.</p> <p>Select Add a tool and in the Basic tools tab of the fly out pane, select the Send device request email agent flow we recently created and published.</p> <p></p> </li> <li> <p>For the trigger inputs of our agent flow, we need to select the variable outputs from the Ask with adaptive card node.</p> <p>Select the ellipsis (...) icon for the DeviceSharePointId input.</p> <p></p> </li> <li> <p>Select the deviceSelectionId variable which is one of the outputs defined in Ask with adaptive card node.</p> <p></p> </li> <li> <p>Next, select the ellipsis (...) icon for the User input.</p> <p></p> </li> <li> <p>Select the System tab in the flyout variable pane and select User.DisplayName. This variable stores the display name of the internal user interacting with the agent.</p> <p></p> </li> <li> <p>Next, select the greater than icon for Advanced inputs to expand and see the AdditionalComments input.</p> <p></p> </li> <li> <p>Select the ellipsis (...) icon for the AdditionalComments input.</p> <p></p> </li> <li> <p>Select the Formula tab and the expand icon in the flyout variable pane as we'll use a Power Fx expression.</p> <p></p> </li> <li> <p>Similar to the expression in the agent flow that does a conditional check using the if function, but this time</p> <ul> <li>using Power Fx functions,</li> <li>and inserting either no value, or the value of the <code>commentsId</code> output variable from the Ask with adaptive card node.</li> </ul> <p>Enter the following functions in the Power Fx field,</p> <pre><code>If(IsBlank())\n</code></pre> <p>This expression uses the <code>If</code> function for an if-else statement.</p> <p>The next function used is <code>IsBlank</code> which checks whether a value exists or does not exist in a string parameter. The string parameter to be referenced is the <code>commentsId</code> output variable from the Ask with adaptive card node.</p> <p></p> </li> <li> <p>Next, click inside of the brackets after the <code>IsBlank</code> function. We're going to insert the <code>commentsId</code> output variable from the Ask with adaptive card node.</p> <p>Enter the following inside the brackets,</p> <pre><code>Topic.commentsId\n</code></pre> <p>And add a comma after the bracket.</p> <p></p> </li> <li> <p>Next we'll define the logic</p> <ul> <li>when true - if the <code>Topic.commentsId</code> string parameter is empty, then we want to insert no value.</li> <li>when false - if the <code>Topic.commentsId</code> string parameter is not empty, then insert the value of commentsId variable.</li> </ul> <p>After the bracket that encloses the string parameter, enter the following,</p> <pre><code>\"\", Topic.commentsId)\n</code></pre> <p>The Power Fx expression should be the following,</p> <pre><code>If(IsBlank(Topic.commentsId), \"\", Topic.commentsId)\n</code></pre> <p>Great work, our expression is complete! \ud83d\ude4c\ud83c\udffb Now select Insert to set the input parameter of the agent flow to the Power Fx expression.</p> <p></p> </li> <li> <p>Save the topic.</p> </li> </ol>"},{"location":"recruit/09-add-an-agent-flow/#93-update-request-device-topic-with-several-nodes-for-a-better-user-experience","title":"9.3 Update Request device topic with several nodes for a better user experience","text":"<p>We'll next add two more nodes:</p> <ul> <li> <p>Send a message - this will act as a confirmation message that references the selected device and that their request has been submitted.</p> </li> <li> <p>Topic management - to close the conversation, we'll redirect to the End of conversation node.</p> </li> </ul> <p>Let's begin!</p> <ol> <li> <p>Select the plus + icon below the agent flow node and select Send a message node.</p> <p></p> </li> <li> <p>Enter the following below in the message field,</p> <pre><code>Thanks\n</code></pre> <p>Then select the Insert variable as we'll reference the user's name.</p> <p></p> </li> <li> <p>Select the System tab and search for <code>User</code> in the search field. Select the User.DisplayName variable.</p> <p></p> </li> <li> <p>Enter the following below in the message field,</p> <pre><code>. Your selected device,\n</code></pre> <p>Then select Insert variable and this time in the Custom tab, select the ModelValue variable.</p> <p>Then enter the following below to complete the message.</p> <pre><code>, has been submitted and will be reviewed by your manager.\n</code></pre> <p>The message should look like the following.</p> <p></p> </li> <li> <p>Lastly, select the plus + icon below the Send a message node and select Topic management, followed by Go to another topic and select End of Conversation.</p> <p></p> </li> <li> <p>Save the topic.</p> <p></p> </li> </ol>"},{"location":"recruit/09-add-an-agent-flow/#94-test-agent-using-several-scenarios","title":"9.4 Test agent using several scenarios","text":"<p>Great work!!! \ud83d\ude01 We can now test our agent.</p>"},{"location":"recruit/09-add-an-agent-flow/#941-request-a-device-and-enter-a-comment-in-adaptive-card","title":"9.4.1 Request a device and enter a comment in adaptive card","text":"<ol> <li> <p>Refresh the test pane, select the activity map icon and enter the following as a message to the agent.</p> <pre><code>I need a laptop\n</code></pre> <p></p> </li> <li> <p>The agent triggers the Available devices and responds with the list of available devices. We'll enter the following as the answer to the question of whether we'd like to request a device.</p> <pre><code>Yes\n</code></pre> <p></p> </li> <li> <p>Notice how the agent invoked the Request device as per the agent instructions and that the adaptive card is now being displayed in the agent message.</p> <p>Select the Surface Laptop 15 device and add the following as a comment.</p> <pre><code>I need 16GB of RAM please\n</code></pre> <p></p> </li> <li> <p>Scroll down until you see the Submit Request button and select it to submit the adaptive card to the agent.</p> <p></p> </li> <li> <p>Select Allow for the agent to use your credentials for the connection authentication of the two connector actions.</p> <p></p> </li> <li> <p>The agent will then display the confirmation message which includes the model selected, followed by redirecting to the End of Conversation topic. Cool!</p> <p></p> </li> <li> <p>Select Yes to verify the rest of the End of Conversation topic.</p> <p></p> </li> <li> <p>Next, rate the experience by selecting any of the stars in the rating scale card.</p> <p>The agent will then proceed to the final Question node in the End of Conversation topic. Select No.</p> <p></p> </li> <li> <p>The topic will then complete as a final message will be displayed in the test pane.</p> <p></p> </li> <li> <p>Check your Inbox of your email account to review the email sent to the manager by the agent flow. You can see the details of the device selected, and the note entered in the adaptive card.</p> <p></p> </li> <li> <p>Click the hyperlink and the browser should load the SharePoint item of the device. Super!</p> <p></p> </li> </ol>"},{"location":"recruit/09-add-an-agent-flow/#942-request-a-device-and-do-not-enter-a-comment-in-adaptive-card","title":"9.4.2 Request a device and do not enter a comment in adaptive card","text":"<p>Let's now test the scenario when a comment is not entered.</p> <ol> <li> <p>Repeat the same steps of</p> <ul> <li>Refresh the test pane and select the activity map icon</li> <li>Enter the message, <code>I need a laptop</code></li> <li>Respond with <code>Yes</code> to the question of requesting a device</li> </ul> <p></p> </li> <li> <p>This time select Surface Laptop 13 as the device and do not enter a comment.</p> <p></p> </li> <li> <p>Submit the request by selecting the Submit Request button.</p> <p></p> </li> <li> <p>This time the email received in your Inbox will display None as the comment.</p> <p></p> </li> </ol>"},{"location":"recruit/09-add-an-agent-flow/#943-do-not-request-for-a-device","title":"9.4.3 Do not request for a device","text":"<p>Let's test the final scenario which is to not request a device, and the Goodbye topic should be invoked as per the agent instructions.</p> <ol> <li> <p>Repeat the same steps of</p> <ul> <li>Refresh the test pane and select the activity map icon</li> <li>Enter the message, <code>I need a laptop</code></li> <li>This time respond with <code>No</code> to the question of requesting a device</li> </ul> <p></p> </li> <li> <p>The agent invoked the Goodbye topic and the question as defined in the topic is asked.</p> <p></p> </li> </ol>"},{"location":"recruit/09-add-an-agent-flow/#mission-complete","title":"\u2705 Mission Complete","text":"<p>Congratulations! \ud83d\udc4f\ud83c\udffb You've learnt how to build your agent flow and add it to our existing Request device topic, and how to redirect the agent to another topic.</p> <p>This is the end of Lab 09 - Add an agent flow for automation and enhance topic capabilities, select the link below to move to the next lesson. We'll expand on the use case in this lab in the following lesson's lab.</p> <p>\u23ed\ufe0f Move to Add Event Triggers - Enable autonomous agent capabilities lesson</p>"},{"location":"recruit/09-add-an-agent-flow/#tactical-resources","title":"\ud83d\udcda Tactical Resources","text":"<p>\ud83d\udd17 Introducing agent flows: Transforming automation with AI-first workflows</p> <p>\ud83d\udd17 Agent flows overview</p> <p>\ud83d\udd17 Use agent flows with your agent</p> <p>\ud83d\udd17 List of functions in the reference guide</p> <p>\ud83d\udcfa Agent Flows in Copilot Studio</p> <p></p>"},{"location":"recruit/10-add-event-triggers/","title":"\ud83d\udea8 Mission 10: Add Event Triggers - Enable autonomous agent capabilities","text":""},{"location":"recruit/10-add-event-triggers/#codename-operation-ghost-routine","title":"\ud83d\udd75\ufe0f\u200d\u2642\ufe0f CODENAME: <code>OPERATION GHOST ROUTINE</code>","text":"<p>\u23f1\ufe0f Operation Time Window: <code>~45 minutes</code></p>"},{"location":"recruit/10-add-event-triggers/#mission-brief","title":"\ud83c\udfaf Mission Brief","text":"<p>It's time to elevate your agent from conversational assistant to autonomous operative. Your mission is to enable your agent to act without being summoned - responding to signals from across your digital domain with precision and speed.</p> <p>With Event Triggers, you'll train your agent to monitor external systems like SharePoint, Teams, and Outlook, and execute intelligent actions the moment a signal is received. This operation transforms your agent into a fully operational field asset - silent, swift, and always watching.</p> <p>Success means building agents that initiate value - not just respond to it.</p>"},{"location":"recruit/10-add-event-triggers/#objectives","title":"\ud83d\udd0e Objectives","text":"<p>\ud83d\udcd6 This lesson will cover:</p> <ul> <li>Understanding Event Triggers and how they enable autonomous agent behavior</li> <li>Learning the difference between event triggers and topic triggers, including trigger workflows and payloads</li> <li>Exploring common Event Trigger scenarios</li> <li>Understanding authentication, security, and publishing considerations for event-driven agents</li> <li>Building an autonomous IT Help Desk agent that responds to SharePoint events and sends email acknowledgments</li> </ul>"},{"location":"recruit/10-add-event-triggers/#what-is-an-event-trigger","title":"\ud83e\udd14 What is an Event Trigger?","text":"<p>An Event Trigger is a mechanism that allows your agent to act autonomously in response to external events, without requiring direct user input. Think of it as making your agent \"watch\" for specific events and automatically take action when those events occur.</p> <p>Unlike topic triggers, which require users to type something to activate a conversation, event triggers activate based on things happening in your connected systems. E.g.:</p> <ul> <li>When a new file is created in SharePoint or OneDrive for Business</li> <li>When a record is created in Dataverse</li> <li>When a task is completed in Planner</li> <li>When a new Microsoft Form response is submitted</li> <li>When a new Microsoft Teams message is added</li> <li>Based on a recurring schedule (like daily reminders) </li> </ul>"},{"location":"recruit/10-add-event-triggers/#why-event-triggers-matter-in-autonomous-agents","title":"Why Event Triggers matter in autonomous agents","text":"<p>Event triggers transform your agent from a reactive assistant into a proactive, autonomous helper:</p> <ol> <li> <p>Autonomous operation - your agent can work 24/7 without human intervention, responding to events as they happen.</p> <ul> <li>Example: Automatically welcome new team members when they're added to a team.</li> </ul> </li> <li> <p>Real-time responsiveness - instead of waiting for users to ask questions, your agent responds immediately to relevant events.</p> <ul> <li>Example: Alert the IT team when a SharePoint document is modified.</li> </ul> </li> <li> <p>Workflow automation - chain together multiple actions based on a single trigger event.</p> <ul> <li>Example: When a new support ticket is created, create a task, notify the manager, and update the tracking dashboard.</li> </ul> </li> <li> <p>Consistent processes - ensure important steps never get missed by automating responses to key events.</p> <ul> <li>Example: Every new employee automatically gets onboarding materials and access requests.</li> </ul> </li> <li> <p>Data-driven actions - use information from the triggering event to make smart decisions and take appropriate actions.</p> <ul> <li>Example: Route urgent tickets to senior staff based on priority level in the trigger payload.</li> </ul> </li> </ol>"},{"location":"recruit/10-add-event-triggers/#how-do-event-triggers-work","title":"\u2699\ufe0f How do Event Triggers work?","text":"<p>Event triggers operate through a three-step workflow that enables your agent to respond autonomously to external events:</p>"},{"location":"recruit/10-add-event-triggers/#the-trigger-workflow","title":"The trigger workflow","text":"<ol> <li>Event Detection - A specific event occurs in a connected system (SharePoint, Teams, Outlook, etc.)</li> <li>Trigger Activation - The event trigger detects this event and sends a payload to your agent via a Power Automate Cloud Flow.</li> <li>Agent Response - Your agent receives the payload and executes the instructions you've defined</li> </ol>"},{"location":"recruit/10-add-event-triggers/#event-vs-topic-triggers","title":"Event vs Topic triggers","text":"<p>Understanding the difference between these two trigger types is crucial:</p> Event Triggers Topic Triggers Activated by external system events Activated by user input/phrases Enable autonomous agent behavior Enable conversational responses Use maker's authentication Option for user's authentication Run without user interaction Require user to start conversation Examples: File created, email received Example: \"What's the weather?\""},{"location":"recruit/10-add-event-triggers/#understanding-trigger-payloads","title":"\ud83d\udce6 Understanding trigger payloads","text":"<p>When an event occurs, the trigger sends a payload to your agent containing information about the event and instructions on how to respond.</p>"},{"location":"recruit/10-add-event-triggers/#default-vs-custom-payloads","title":"Default vs custom payloads","text":"<p>Every trigger type comes with a default payload structure, but you can customize it:</p> <p>Default payload - Uses the standard format like <code>Use content from {Body}</code></p> <ul> <li>Contains basic event information</li> <li>Uses generic processing instructions</li> <li>Good for simple scenarios</li> </ul> <p>Custom payload - Add specific instructions and data formatting</p> <ul> <li>Include detailed directions for your agent</li> <li>Specify exactly what data to use and how</li> <li>Better for complex workflows</li> </ul>"},{"location":"recruit/10-add-event-triggers/#agent-instructions-vs-custom-payload-instructions","title":"Agent instructions vs custom payload instructions","text":"<p>You have two places to guide your agent's behavior with event triggers:</p> <p>Agent Instructions (Global)</p> <ul> <li>Broad guidance that applies to all triggers</li> <li>Example: \"When processing tickets, always check for duplicates first\"</li> <li>Best for general behavior patterns</li> </ul> <p>Payload Instructions (Trigger-specific)</p> <ul> <li>Specific directions for individual trigger types  </li> <li>Example: \"For this SharePoint update, send a summary to the project channel\"</li> <li>Best for complex agents with multiple triggers</li> </ul> <p>\ud83d\udca1 Pro tip: Avoid conflicting instructions between these two levels, as this can cause unexpected behavior.</p>"},{"location":"recruit/10-add-event-triggers/#common-event-trigger-scenarios","title":"\ud83c\udfaf Common Event Trigger scenarios","text":"<p>Here are practical examples of how event triggers can enhance your agent:</p>"},{"location":"recruit/10-add-event-triggers/#it-help-desk-agent","title":"IT Help Desk Agent","text":"<ul> <li>Trigger: New SharePoint list item (support ticket)</li> <li>Action: Automatically categorize, assign priority, and notify appropriate team members</li> </ul>"},{"location":"recruit/10-add-event-triggers/#employee-onboarding-agent","title":"Employee Onboarding Agent","text":"<ul> <li>Trigger: New user added to Dataverse</li> <li>Action: Send welcome message, create onboarding tasks, and provision access</li> </ul>"},{"location":"recruit/10-add-event-triggers/#project-management-agent","title":"Project Management Agent","text":"<ul> <li>Trigger: Task completed in Planner</li> <li>Action: Update project dashboard, notify stakeholders, and check for blockers</li> </ul>"},{"location":"recruit/10-add-event-triggers/#document-management-agent","title":"Document Management Agent","text":"<ul> <li>Trigger: File uploaded to specific SharePoint folder</li> <li>Action: Extract metadata, apply tags, and notify document owners</li> </ul>"},{"location":"recruit/10-add-event-triggers/#meeting-assistant-agent","title":"Meeting Assistant Agent","text":"<ul> <li>Trigger: Calendar event created</li> <li>Action: Send pre-meeting reminders and agenda, book resources</li> </ul>"},{"location":"recruit/10-add-event-triggers/#publishing-and-authentication-considerations","title":"\u26a0\ufe0f Publishing and authentication considerations","text":"<p>Before your agent can use event triggers in production, you need to understand authentication and security implications.</p>"},{"location":"recruit/10-add-event-triggers/#maker-authentication","title":"Maker authentication","text":"<p>Event triggers use the agent creator's credentials for all authentication:</p> <ul> <li>Your agent accesses systems using your permissions</li> <li>Users can potentially access data through your credentials</li> <li>All actions are performed \"as you\" even when users interact with the agent</li> </ul>"},{"location":"recruit/10-add-event-triggers/#data-protection-best-practices","title":"Data protection best practices","text":"<p>To maintain security when publishing agents with event triggers:</p> <ol> <li>Evaluate data access - Review what systems and data your triggers can access</li> <li>Test thoroughly - Understand what information triggers include in payloads</li> <li>Narrow trigger scope - Use specific parameters to limit what events activate triggers</li> <li>Review payload data - Ensure triggers don't expose sensitive information</li> <li>Monitor usage - Track trigger activity and resource consumption</li> </ol>"},{"location":"recruit/10-add-event-triggers/#troubleshooting-and-limitations","title":"\u26a0\ufe0f Troubleshooting and limitations","text":"<p>Keep these important considerations in mind when working with event triggers:</p>"},{"location":"recruit/10-add-event-triggers/#quota-and-billing-impacts","title":"Quota and billing impacts","text":"<ul> <li>Each trigger activation counts toward your message consumption</li> <li>Frequent triggers (like every-minute recurrence) can quickly consume quota</li> <li>Monitor usage to avoid throttling</li> </ul>"},{"location":"recruit/10-add-event-triggers/#technical-requirements","title":"Technical requirements","text":"<ul> <li>Only available for agents with generative orchestration enabled</li> <li>Requires solution-aware cloud flow sharing to be enabled in your environment</li> </ul>"},{"location":"recruit/10-add-event-triggers/#data-loss-prevention-dlp","title":"Data Loss Prevention (DLP)","text":"<ul> <li>Your organization's DLP policies determine which triggers are available</li> <li>Administrators can block event triggers entirely</li> <li>Contact your admin if expected triggers aren't available</li> </ul>"},{"location":"recruit/10-add-event-triggers/#lab-10-add-event-triggers-for-autonomous-agent-behavior","title":"\ud83e\uddea Lab 10 - Add Event Triggers for autonomous agent behavior","text":""},{"location":"recruit/10-add-event-triggers/#use-case","title":"\ud83c\udfaf Use case","text":"<p>You'll enhance your IT Help Desk agent to automatically respond to new support requests. When someone creates a new item in your SharePoint support tickets list, your agent will:</p> <ol> <li>Trigger autonomously when the SharePoint ticket is created</li> <li>Provide the ticket details and instructions on the steps that you want it to perform</li> <li>Automatically acknowledge the ticket to the submitter via an AI generated email</li> </ol> <p>This lab demonstrates how event triggers enable truly autonomous agent behavior.</p>"},{"location":"recruit/10-add-event-triggers/#prerequisites","title":"Prerequisites","text":"<p>Before starting this lab, ensure you have:</p> <ul> <li>\u2705 Completed previous labs (especially Lab 6-8 for the IT Help Desk agent)</li> <li>\u2705 Access to the SharePoint site with the IT support tickets list</li> <li>\u2705 Copilot Studio environment with event triggers enabled</li> <li>\u2705 Your agent has generative orchestration enabled</li> <li>\u2705 Appropriate permissions in SharePoint and your Copilot Studio environment</li> </ul>"},{"location":"recruit/10-add-event-triggers/#101-enable-generative-ai-and-create-a-sharepoint-item-creation-trigger","title":"10.1 Enable Generative AI and create a SharePoint item creation trigger","text":"<ol> <li> <p>Open your IT Help Desk agent in Copilot Studio</p> </li> <li> <p>First, ensure Generative AI is enabled for your agent:</p> </li> <li>Navigate to the Overview tab</li> <li> <p>Under the Orchestration section, Toggle Generative orchestration to On if it's not already enabled </p> </li> <li> <p>Navigate to the Overview tab and locate the Triggers section</p> </li> <li> <p>Click + Add trigger to open the trigger library </p> </li> <li> <p>Search for and select When an item is created (SharePoint) </p> </li> <li> <p>Configure the trigger name and connections:</p> </li> <li> <p>Trigger name: New Support Ticket Created in SharePoint</p> </li> <li> <p>Wait for the connections to configure, and select Next to proceed. </p> </li> <li> <p>Configure the trigger parameters:</p> </li> <li> <p>Site Address: Select your \"Contoso IT\" SharePoint site</p> </li> <li> <p>List Name: Choose your \"Tickets\" list</p> </li> <li> <p>Additional instructions to the agent when it's invoked by the trigger:</p> <pre><code>New Support Ticket Created in SharePoint: {Body}\n\nUse the 'Acknowledge SharePoint Ticket' tool to generate the email body automatically and respond.\n\nIMPORTANT: Do not wait for any user input. Work completely autonomously.\n</code></pre> <p></p> </li> <li> <p>Select Create trigger to complete the trigger creation. A Power Automate Cloud Flow is automatically created to trigger the agent autonomously.</p> </li> <li> <p>Select Close.</p> </li> </ol>"},{"location":"recruit/10-add-event-triggers/#102-edit-the-trigger","title":"10.2 Edit the Trigger","text":"<ol> <li> <p>Inside the Triggers section of the Overview tab, Select the ... menu on the New Support Ticket Created in SharePoint trigger</p> </li> <li> <p>Select Edit in Power Automate </p> </li> <li> <p>Select the Sends a prompt to the specified copilot for processing node</p> </li> <li> <p>In the Body/message field, remove the Body content, press the forward slash key (/) and select Insert Expression </p> </li> <li> <p>Enter the following expression to provide the agent with specific details about the ticket:</p> <pre><code>concat('Submitted By Name: ', first(triggerOutputs()?['body/value'])?['Author/DisplayName'], '\\nSubmitted By Email: ', first(triggerOutputs()?['body/value'])?['Author/Email'], '\\nTitle: ', first(triggerOutputs()?['body/value'])?['Title'], '\\nIssue Description: ', first(triggerOutputs()?['body/value'])?['Description'], '\\nPriority: ', first(triggerOutputs()?['body/value'])?['Priority/Value'],'\\nTicket ID : ', first(triggerOutputs()?['body/value'])?['ID'])\n</code></pre> </li> <li> <p>Select Add </p> </li> <li> <p>Select Publish on the top right toolbar.</p> </li> </ol>"},{"location":"recruit/10-add-event-triggers/#103-create-a-tool-for-email-acknowledgment","title":"10.3 Create a tool for email acknowledgment","text":"<ol> <li> <p>Return to your Agent in Copilot Studio</p> </li> <li> <p>Navigate to the Tools tab in your agent</p> </li> <li> <p>Click + Add a tool and select Connector</p> </li> <li> <p>Search for and select Send an email (V2) connector </p> </li> <li> <p>Wait for the connection to configure, and then select Add and configure</p> </li> <li> <p>Configure the tool settings:</p> </li> <li> <p>Name: Acknowledge SharePoint ticket</p> </li> <li> <p>Description: This tool sends an email acknowledgement that a ticket has been received.</p> </li> <li> <p>Select Customize next to the input parameters and configure as follows:</p> <p>To:</p> <ul> <li>Description: The email address of the person submitting the SharePoint Ticket</li> <li>Identify as: Email</li> </ul> <p>Body:</p> <ul> <li>Description: An acknowledgement that the Ticket was received, and we aim to respond within 3 working days.</li> </ul> <p></p> </li> <li> <p>Select Save</p> </li> </ol>"},{"location":"recruit/10-add-event-triggers/#104-test-the-trigger","title":"10.4 Test the trigger","text":"<ol> <li>Inside your Help Desk Agent, select the Overview tab</li> <li>Click Test Trigger icon next to the New Support Ticket Created in SharePoint trigger. This will load the Test your trigger window.</li> <li>Open a new browser tab and navigate to your SharePoint IT Support Tickets list</li> <li>Click + Add new item to create a test ticket:</li> <li>Title: \"Unable to connect to VPN\"</li> <li>Description: \"Unable to connect to corporate WIFI network after recent update\"</li> <li> <p>Priority: \"Normal\"</p> </li> <li> <p>Save the SharePoint item </p> </li> <li>Return to Copilot Studio and monitor the Test your trigger panel for the trigger activation. Use the Refresh icon to load the trigger event, this may take a few minutes. </li> <li>Once the trigger appears, select Start testing</li> <li>Select the Activity Map icon at the top of the Test your agent panel</li> <li>Verify that your agent:</li> <li>Received the trigger payload</li> <li>Called the \"Acknowledge SharePoint ticket\" tool </li> <li>Check the email inbox of the submitter to confirm the acknowledgment email was sent </li> <li>Review the Activity tab in Copilot Studio to see the complete trigger and tool execution</li> </ol>"},{"location":"recruit/10-add-event-triggers/#mission-complete","title":"\u2705 Mission Complete","text":"<p>\ud83c\udf89 Congratulations! You've successfully implemented event triggers with connector tools that enable your agent to operate autonomously, automatically sending email acknowledgments and processing support tickets without user intervention. Once your agent is published, it will act autonomously on your behalf.</p> <p>\ud83d\ude80 Next up: In our next lesson, you'll learn how to publish your agent to Microsoft Teams and Microsoft 365 Copilot, making it available to your entire organization!</p> <p>\u23ed\ufe0f Move to Publish your agent lesson</p>"},{"location":"recruit/10-add-event-triggers/#tactical-resources","title":"\ud83d\udcda Tactical Resources","text":"<p>Ready to dive deeper into event triggers and autonomous agents? Check out these resources:</p> <ul> <li>Microsoft Learn: Make your agent autonomous in Copilot Studio</li> <li>Documentation: Add an event trigger</li> <li>Best Practices: Power Automate triggers introduction</li> <li>Advanced Scenarios: Using Power Automate flows with agents</li> <li>Security: Data loss prevention for Copilot Studio</li> </ul> <p></p>"},{"location":"recruit/11-publish-your-agent/","title":"\ud83d\udea8 Mission 11: Publish Your Agent","text":""},{"location":"recruit/11-publish-your-agent/#codename-operation-publish-publish-publish","title":"\ud83d\udd75\ufe0f\u200d\u2642\ufe0f CODENAME: <code>OPERATION PUBLISH PUBLISH PUBLISH</code>","text":"<p>\u23f1\ufe0f Operation Time Window: <code>~30 minutes</code> </p>"},{"location":"recruit/11-publish-your-agent/#mission-brief","title":"\ud83c\udfaf Mission Brief","text":"<p>After completing a series of challenging modules, Agent Maker, you're now ready for your most critical step yet: publishing your agent. It\u2019s time to make your creation available to users across Microsoft Teams and Microsoft 365 Copilot.</p> <p>Your agent\u2014equipped with a clear mission, powerful tools, and access to key knowledge sources\u2014is ready to serve. Using Microsoft Copilot Studio, you deploy your agent so it can start assisting real users, right where they work.</p> <p>Let\u2019s launch your agent into action.</p>"},{"location":"recruit/11-publish-your-agent/#objectives","title":"\ud83d\udd0e Objectives","text":"<p>\ud83d\udcd6 This lesson covers:</p> <ol> <li>Why it's important to publish your agent</li> <li>What happens when you publish your agent</li> <li>How to add a channel (Microsoft Teams &amp; Microsoft 365 Copilot)</li> <li>How to add the agent in Microsoft Teams</li> <li>How to make the agent available in Microsoft Teams for your whole organization</li> </ol>"},{"location":"recruit/11-publish-your-agent/#publish-an-agent","title":"\ud83d\ude80 Publish an agent","text":"<p>Every time you work on an agent in Copilot Studio you might update it by adding knowledge or tools. When you're ready with all the changes, and you tested thoroughly, you're ready to publish it. Publishing ensures that the latest updates are live. When you update your agent with new tools, and you don't hit the publish button, it's not available yet for end users.</p> <p>Make sure to always hit the publish button when you want to push the updates to the users of your agent. Your agent might have channels added to it and when you hit publish the updates are available for all the channels you added to the agent.</p>"},{"location":"recruit/11-publish-your-agent/#configure-channels","title":"\u2699\ufe0f Configure channels","text":"<p>Channels determine where your users can access and interact with your agent. After you publish your agent, you can make it available in multiple channels. Each channel may display your agent's content differently.</p> <p>You can add your agent to the following channels:</p> <ul> <li>Microsoft Teams and Microsoft 365 Copilot - Make your agent available in Teams chats and meetings, and within Microsoft 365 Copilot experiences (Learn more)</li> <li>Demo website - Test your agent on a demo website provided by Copilot Studio (Learn more)</li> <li>Custom website - Embed your agent directly into your own website (Learn more)</li> <li>Mobile app - Integrate your agent into a custom mobile application (Learn more)</li> <li>SharePoint - Add your agent to SharePoint sites for document and site assistance (Learn more)</li> <li>Facebook Messenger - Connect with users through Facebook's messaging platform (Learn more)</li> <li>Power Pages - Integrate your agent into Power Pages websites (Learn more)</li> <li>Azure Bot Service channels - Access additional channels including Slack, Telegram, Twilio SMS, and more (Learn more)</li> </ul> <p>To add a channel, navigate to the Channels tab in your agent and select the channel you want to configure. Each channel has specific setup requirements and may require additional authentication or configuration steps.</p> <p></p>"},{"location":"recruit/11-publish-your-agent/#channel-experiences","title":"\ud83d\udcfa Channel experiences","text":"<p>Different channels have different user experiences. When building an agent for multiple channels, make sure to be aware of the differences per channel. It's always a good strategy to test your agent in multiple channels to see if it really does what you intended.</p> Experience Website Teams and Microsoft 365 Copilot Facebook Dynamics Omnichannel for Customer Service Customer satisfaction survey Adaptive card Text-only Text-only Text-only Multiple-choice options Supported Supported up to six (as hero card) Supported up to 13 Partially Supported Markdown Supported Partially Supported Partially supported Partially Supported Welcome message Supported Supported Not supported Supported for Chat. Not supported for other channels. Did-You-Mean Supported Supported Supported Supported for Microsoft Teams, Chat, Facebook, and text-only channels (short message service (SMS) via TeleSign and Twilio, WhatsApp, WeChat, and Twitter). Suggested actions are presented as a text-only list; users must retype an option to respond. <p>[!NOTE] There are some examples of where you can use different logic for different channels. An example of it can be found in the Power Platform Snippets repository:</p> <p>Henry Jammes shared an example of how to show a different adaptive card when the channel is Microsoft Teams. (Link to example)</p>"},{"location":"recruit/11-publish-your-agent/#lab-11-publish-your-agent-to-teams-and-microsoft-365-copilot","title":"\ud83e\uddea Lab 11: Publish your agent to Teams and Microsoft 365 Copilot","text":""},{"location":"recruit/11-publish-your-agent/#use-case","title":"\ud83c\udfaf Use case","text":"<p>Your Contoso IT Help Desk agent is now fully configured with powerful capabilities\u2014it can access SharePoint knowledge sources, create support tickets, send proactive notifications, and respond intelligently to user queries. However, all these features are currently only available in the development environment where you built them.</p> <p>The Challenge: End users can't benefit from your agent's capabilities until it's properly published and made accessible through the channels where they actually work.</p> <p>The Solution: Publishing your agent ensures that the latest version\u2014with all your recent updates, new topics, enhanced knowledge sources, and configured flows\u2014is available to real users. Without publishing, users would still interact with an older version of your agent that might be missing critical functionality.</p> <p>Adding the Teams and Microsoft 365 Copilot channel is equally crucial because:</p> <ul> <li> <p>Teams Integration: Your organization's employees spend most of their day in Microsoft Teams for collaboration, meetings, and communication. By adding your agent to Teams, users can get IT support without leaving their primary work environment.</p> </li> <li> <p>Microsoft 365 Copilot: Users can access your specialized IT help desk agent directly within their Microsoft 365 Copilot experience, making it seamlessly integrated into their daily workflow across Office applications.</p> </li> <li> <p>Centralized Access: Instead of remembering separate websites or applications, users can access IT support through the platforms they're already using, reducing friction and increasing adoption.</p> </li> </ul> <p>This mission transforms your development work into a production-ready solution that delivers real value to your organization's end users.</p>"},{"location":"recruit/11-publish-your-agent/#prerequisites","title":"Prerequisites","text":"<p>Before starting this lab, ensure you have:</p> <ul> <li>\u2705 Completed previous labs and have a fully configured Contoso Helpdesk Agent</li> <li>\u2705 Your agent has been tested and is ready for production use</li> <li>\u2705 Permissions in your Copilot Studio environment to publish agents</li> <li>\u2705 Access to Microsoft Teams in your organization</li> </ul>"},{"location":"recruit/11-publish-your-agent/#111-publish-your-agent","title":"11.1 Publish your agent","text":"<p>Now that all our work on the agent is done, we have to make sure all our work is available for the end users that are going to use our agent. To make sure the content is available for all users, we need to publish our agent.</p> <ol> <li> <p>Go to the Contoso Helpdesk Agent in Copilot Studio (via the Copilot Studio maker portal)</p> <p>In Copilot Studio, it's easy to publish your agent. You can just select the publish button at the top of the agent overview.</p> <p></p> </li> <li> <p>Select the Publish button in your agent</p> <p>It opens the publish pop-up - to confirm you really want to publish your agent.</p> <p></p> </li> <li> <p>Select Publish to confirm publishing your agent</p> <p>Now a message shows that your agent is publishing. You don't have to keep that popup open. You get notified when the agent is published.</p> <p></p> <p>When the agent is done publishing, you see the notification at the top of the agent page.</p> <p></p> </li> </ol> <p>But - we only published the agent, we didn't add it to a channel yet, so lets fix that now!</p>"},{"location":"recruit/11-publish-your-agent/#112-add-the-teams-and-microsoft-365-copilot-channel","title":"11.2 Add the Teams and Microsoft 365 Copilot channel","text":"<ol> <li> <p>To add the Teams and Microsoft 365 Copilot channel to our agent, we need to select Channel in the top navigation of the agent</p> <p></p> <p>Here we can see all the channels we can add to this agent.</p> </li> <li> <p>Select Teams and Microsoft 365</p> <p></p> </li> <li> <p>Select Add channel to complete the wizard and add the channel to the agent</p> <p></p> <p>It will take a little while until it's added. After it's added a green notification will appear on the top of the sidebar.</p> <p></p> </li> <li> <p>Select See agent in Teams to open a new tab</p> <p></p> </li> <li> <p>Select Add to add the Contoso Helpdesk Agent to Teams</p> <p></p> <p>This should take a little while. After it should show the following screen:</p> <p></p> </li> <li> <p>Select Open to open the agent in Teams</p> <p>This will open the agent in Teams as a Teams app</p> <p></p> </li> </ol> <p>Now we have published the agent to work for you in Microsoft Teams, but you might want to make this available for more people.</p>"},{"location":"recruit/11-publish-your-agent/#113-make-the-agent-available-for-all-users-in-the-tenant","title":"11.3 Make the agent available for all users in the tenant","text":"<ol> <li> <p>Close the browser tab where the Contoso Helpdesk Agent is opened</p> <p>This should bring you back to Copilot Studio where the Teams and Microsoft 365 Copilot side panel is still open. We only opened the agent in Teams now, but we can do a lot more here. We can edit the details of the agent, we can deploy the agent to more users and more.</p> </li> <li> <p>Select Edit details</p> <p></p> <p>This will open a pane where we can change a bunch of details and settings of the agent. We can change basic details like the icon, the background color of the icon and the descriptions. We can also change Teams settings (for instance allowing a user to add the agent to a team, or allowing to use this agent in group and meeting chats) here. When you select more, you can also change developer details like the developer name, the website, the privacy statement and the terms of use.</p> <p></p> </li> <li> <p>Select Cancel to close the Edit details pane</p> </li> <li> <p>Select Availability options</p> <p></p> <p>This will open the availability options pane, where you can copy a link to send to users to use this agent (be aware, you need to share the agent with the user too) and you can download a file to add your agent to the Microsoft Teams or Microsoft 365 store. To show the agent in the store, you have other options too: you can show it to your teammates and shared users (to show in the Built with Power Platform section) or you can show it to everyone in your org (this needs administrator approval).</p> </li> <li> <p>Select Show to everyone in my org</p> <p></p> </li> <li> <p>Select Submit for admin approval</p> <p></p> <p>Now, your administrator has to approve your agent submission. They can do that by going to the Teams Admin Center and look up the Contoso Helpdesk Agent in Apps. In the screenshot you can see what the administrator would see in Teams Admin Center.</p> <p></p> <p>The administrator has to select the Contoso Helpdesk Agent and select Publish to publish the Contoso Helpdesk Agent to everyone.</p> <p></p> <p>When the administrator has published the agent submission, you will be able to refresh Copilot Studio and you should see the available in app store banner in the availability options.</p> <p></p> </li> </ol> <p>There are even more possibilities here. Your admin can change the global setup policy and auto install the Contoso Helpdesk Agent for everyone in the tenant. On top of that - you are able to pin the Contoso Helpdesk Agent to the left rail so that everyone has easy access to it.</p>"},{"location":"recruit/11-publish-your-agent/#mission-complete","title":"\u2705 Mission Complete","text":"<p>\ud83c\udf89 Congratulations! You successfully published your agent and added it to Teams and Microsoft 365 Copilot! Next up is the last mission of the course: Understanding licensing.</p> <p>\u23ed\ufe0f Move to Understanding licensing lesson</p>"},{"location":"recruit/11-publish-your-agent/#tactical-resources","title":"\ud83d\udcda Tactical Resources","text":"<p>\ud83d\udd17 Publish channels documentation</p> <p></p>"},{"location":"recruit/12-understanding-licensing/","title":"\ud83d\udea8 Mission 12: Understanding Licensing","text":""},{"location":"recruit/12-understanding-licensing/#codename-operation-know-what-you-owe","title":"\ud83d\udd75\ufe0f\u200d\u2642\ufe0f CODENAME: <code>OPERATION KNOW WHAT YOU OWE</code>","text":"<p>\u23f1\ufe0f Operation Time Window: <code>~15 minutes</code></p>"},{"location":"recruit/12-understanding-licensing/#mission-brief","title":"\ud83c\udfaf Mission Brief","text":"<p>Welcome, Recruit. Before you deploy your agents into the field, you need to know how usage is measured, licensed, and billed. This mission breaks down the message-based billing model, explains what Microsoft 365 Copilot licenses include, and shows you how to plan with your estimator.</p>"},{"location":"recruit/12-understanding-licensing/#objective-grasp-the-message-based-model","title":"\ud83c\udfaf Objective: Grasp the Message-Based Model","text":"<p>Copilot Studio doesn\u2019t charge per user or per feature\u2014it bills you based on how many messages your agents consume. A \u201cmessage\u201d is an interaction between your agent and the user (or a system).</p> <ul> <li>\ud83d\udcac Every user interaction with your agent counts as at least 1 message</li> <li>\ud83d\udd04 Complex interactions (like grounding, generative AI, or flows) consume multiple messages</li> <li>\ud83d\udcbc You pay for messages either via prepaid packs or pay-as-you-go (PAYGO)</li> </ul>"},{"location":"recruit/12-understanding-licensing/#licensing-options","title":"Licensing Options","text":""},{"location":"recruit/12-understanding-licensing/#1-copilot-studio-message-packs","title":"1. Copilot Studio Message Packs","text":"<ul> <li>Prepaid tick-box: 25,000 messages/month for $200</li> <li>Best for predictable usage \u2014 capacity is pooled across the tenant</li> </ul>"},{"location":"recruit/12-understanding-licensing/#2-pay-as-you-go-paygo","title":"2. Pay-As-You-Go (PAYGO)","text":"<ul> <li>Post-paid:  $0.01 per message</li> <li>No upfront commitment; usage is billed at month-end via Azure</li> </ul>"},{"location":"recruit/12-understanding-licensing/#what-if-you-have-m365-copilot-licenses","title":"What if you have M365 Copilot Licenses?","text":"<p>If your team has Microsoft 365 Copilot licenses, your agents can run without additional billing for key scenarios:</p> <ul> <li>Classic answers, generative responses, graph-grounded messages, and basic agent actions are zero-rated for authenticated M365 Copilot users in apps like Teams and Outlook  </li> <li>However: if you enable advanced features like autonomous triggers, agent flows beyond basic actions, or use external channels/APIs, those consume billable messages</li> </ul> Scenario Additional Messages Billed? M365 Copilot user asking agent in Teams \u274c Not billed Agent calling external API or flow \u2705 Billed (5\u202f+ messages) Agent using autonomous trigger or grounding \u2705 Billed"},{"location":"recruit/12-understanding-licensing/#plan-with-precision-use-the-estimator","title":"\ud83e\uddee Plan with Precision: Use the Estimator","text":"<p>Before launching your agent, use our Copilot Studio Usage Estimator to forecast message consumption under realistic scenarios:</p> <p>\ud83d\udc49 Use the Copilot Studio Usage Estimator</p> <p>It lets you:</p> <ul> <li>\ud83d\udd22 Specify your user count</li> <li>\u2699\ufe0f Select agent features (grounding, actions, flows, memory)</li> <li>\ud83d\udcc8 Estimate total messages per agent per month</li> <li>\ud83e\udde0 Optimize design and avoid billing surprises</li> </ul> <p>Tip</p> <p>\u2705 Run it early \u2014 and again after building \u2014 to compare expected vs. actual usage.</p>"},{"location":"recruit/12-understanding-licensing/#sample-scenario","title":"\ud83d\udcbc Sample Scenario","text":"<p>Environment: IT Help Desk agent with grounding + one Power Automate flow Sessions: 5 user turns per session Assumptions: grounding (10 msgs) + action (5 msgs) + 5 generative responses (10 msgs) Total: ~25 messages per session Scale: 500 sessions/month = ~12,500 messages (\u00bd message pack)</p>"},{"location":"recruit/12-understanding-licensing/#pro-tips-for-cost-control","title":"\ud83e\udde0 Pro Tips for Cost Control","text":"<ul> <li>Monitor usage via Power Platform Admin Center</li> <li>Start in dev/test before going live</li> <li>Disable unused actions and connectors</li> <li>Use Microsoft 365 Copilot licenses when possible for internal use</li> <li>Use message packs when scale becomes predictable</li> <li>Use the Copilot Studio Usage Estimator to forecast usage</li> </ul>"},{"location":"recruit/12-understanding-licensing/#mission-complete","title":"\ud83c\udfc1 Mission Complete","text":"<p>You now understand:</p> <ul> <li>How usage is calculated and billed</li> <li>When M365 Copilot covers usage \u2014 and when it doesn\u2019t</li> <li>How to forecast and manage your message consumption</li> </ul> <p>\ud83c\udf93 With this knowledge, you're cleared to advance and deploy your agents efficiently and smartly</p>"},{"location":"recruit/12-understanding-licensing/#tactical-resources","title":"\ud83d\udcda Tactical Resources","text":"<p>Learn more about licensing and billing in Copilot Studio</p> <ul> <li>\ud83d\udcc4 Copilot Studio Licensing &amp; Message Rates</li> <li>\ud83d\udcd8 Power Platform Licensing Guide (July 2025)</li> <li>\ud83d\udcca Message Management &amp; Capacity Monitoring</li> </ul> <p></p>"}]}